<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a7774b36f15ff790c31d4c1a8bc69be257b8508</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.1\bugfixes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6743d0536b90d49b1dcb9c620012b4829fa628b9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df954aad45496b0a0407eb87f40351ffd7a0a4b2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Bug Fixes in WMF 5.1 (Preview)</source>
          <target state="new">Bug Fixes in WMF 5.1 (Preview)</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>PowerShell, DSC, WMF</source>
          <target state="new">PowerShell, DSC, WMF</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Bug Fixes in WMF 5.1 (Preview)</source>
          <target state="new">Bug Fixes in WMF 5.1 (Preview)</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Bug fixes</source>
          <target state="new">Bug fixes</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following notable bugs are fixed in WMF 5.1:</source>
          <target state="new">The following notable bugs are fixed in WMF 5.1:</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Module auto-discovery fully honors <ph id="ph1">`$env:PSModulePath`</ph></source>
          <target state="new">Module auto-discovery fully honors <ph id="ph1">`$env:PSModulePath`</ph></target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Module auto-discovery (loading modules automatically without an explicit Import-Module when calling a command) was introduced in WMF 3.</source>
          <target state="new">Module auto-discovery (loading modules automatically without an explicit Import-Module when calling a command) was introduced in WMF 3.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When introduced, PowerShell checked for commands in <ph id="ph1">`$PSHome\Modules`</ph> before using <ph id="ph2">`$env:PSModulePath`</ph>.</source>
          <target state="new">When introduced, PowerShell checked for commands in <ph id="ph1">`$PSHome\Modules`</ph> before using <ph id="ph2">`$env:PSModulePath`</ph>.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>WMF 5.1 changes this behavior to honor <ph id="ph1">`$env:PSModulePath`</ph> completely.</source>
          <target state="new">WMF 5.1 changes this behavior to honor <ph id="ph1">`$env:PSModulePath`</ph> completely.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This allows for a user-authored module that defines commands provided by PowerShell (e.g. <ph id="ph1">`Get-ChildItem`</ph>) to be auto-loaded and correctly overriding the built-in command.</source>
          <target state="new">This allows for a user-authored module that defines commands provided by PowerShell (e.g. <ph id="ph1">`Get-ChildItem`</ph>) to be auto-loaded and correctly overriding the built-in command.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>File redirection no longer hard-codes <ph id="ph1">`-Encoding Unicode`</ph></source>
          <target state="new">File redirection no longer hard-codes <ph id="ph1">`-Encoding Unicode`</ph></target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In all previous versions of PowerShell, it was impossible to control the file encoding used by the file redirection operator, e.g. <ph id="ph1">`Get-ChildItem &gt; out.txt`</ph> because PowerShell added <ph id="ph2">`-Encoding Unicode`</ph>.</source>
          <target state="new">In all previous versions of PowerShell, it was impossible to control the file encoding used by the file redirection operator, e.g. <ph id="ph1">`Get-ChildItem &gt; out.txt`</ph> because PowerShell added <ph id="ph2">`-Encoding Unicode`</ph>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Starting with WMF 5.1, you can now change the file encoding of redirection by setting <ph id="ph1">`$PSDefaultParameterValues`</ph>:</source>
          <target state="new">Starting with WMF 5.1, you can now change the file encoding of redirection by setting <ph id="ph1">`$PSDefaultParameterValues`</ph>:</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Fixed a regression in accessing members of <ph id="ph1">`System.Reflection.TypeInfo`</ph></source>
          <target state="new">Fixed a regression in accessing members of <ph id="ph1">`System.Reflection.TypeInfo`</ph></target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A regression introduced in WMF 5.0 broke accessing members of <ph id="ph1">`System.Reflection.RuntimeType`</ph>, e.g. <ph id="ph2">`[int].ImplementedInterfaces`</ph>.</source>
          <target state="new">A regression introduced in WMF 5.0 broke accessing members of <ph id="ph1">`System.Reflection.RuntimeType`</ph>, e.g. <ph id="ph2">`[int].ImplementedInterfaces`</ph>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This bug has been fixed in WMF 5.1.</source>
          <target state="new">This bug has been fixed in WMF 5.1.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Fixed some issues with COM objects</source>
          <target state="new">Fixed some issues with COM objects</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>WMF 5.0 introduced a new COM binder for invoking methods on COM objects and accessing properties of COM objects.</source>
          <target state="new">WMF 5.0 introduced a new COM binder for invoking methods on COM objects and accessing properties of COM objects.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This new binder improved performance significantly but also introduced some bugs which have been fixed in WMF 5.1.</source>
          <target state="new">This new binder improved performance significantly but also introduced some bugs which have been fixed in WMF 5.1.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Argument conversions were not always performed correctly</source>
          <target state="new">Argument conversions were not always performed correctly</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the following example:</source>
          <target state="new">In the following example:</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The SendKeys method expects a string, but PowerShell did not convert the char to a string, deferring the conversion to IDispatch::Invoke, which uses VariantChangeType to do the conversion, which in this example resulted in sending the keys '1', '7', and '3' instead of the expected Volume.Mute key.</source>
          <target state="new">The SendKeys method expects a string, but PowerShell did not convert the char to a string, deferring the conversion to IDispatch::Invoke, which uses VariantChangeType to do the conversion, which in this example resulted in sending the keys '1', '7', and '3' instead of the expected Volume.Mute key.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Enumerable COM objects not always handled correctly</source>
          <target state="new">Enumerable COM objects not always handled correctly</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>PowerShell normally enumerates most enumerable objects, but a regression introduced in WMF 5.0 prevented the enumeration of COM objects that implement IEnumerable.</source>
          <target state="new">PowerShell normally enumerates most enumerable objects, but a regression introduced in WMF 5.0 prevented the enumeration of COM objects that implement IEnumerable.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the above example, WMF 5.0 incorrectly wrote the Scripting.Dictionary to the pipeline instead of enumerating the key/value pairs.</source>
          <target state="new">In the above example, WMF 5.0 incorrectly wrote the Scripting.Dictionary to the pipeline instead of enumerating the key/value pairs.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This change also addresses <bpt id="p1">[</bpt>issue 1752224 on Connect<ept id="p1">](https://connect.microsoft.com/PowerShell/feedback/details/1752224)</ept></source>
          <target state="new">This change also addresses <bpt id="p1">[</bpt>issue 1752224 on Connect<ept id="p1">](https://connect.microsoft.com/PowerShell/feedback/details/1752224)</ept></target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[ordered]`</ph> was not allowed inside classes</source>
          <target state="new"><ph id="ph1">`[ordered]`</ph> was not allowed inside classes</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>WMF 5.0 introduced classes with validation of type literals used in classes.</source>
          <target state="new">WMF 5.0 introduced classes with validation of type literals used in classes.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[ordered]`</ph> looks like a type literal but is not a true .NET type.</source>
          <target state="new"><ph id="ph1">`[ordered]`</ph> looks like a type literal but is not a true .NET type.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>WMF 5.0 incorrectly reported an error on <ph id="ph1">`[ordered]`</ph> inside a class:</source>
          <target state="new">WMF 5.0 incorrectly reported an error on <ph id="ph1">`[ordered]`</ph> inside a class:</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Help on About topics with multiple versions does not work</source>
          <target state="new">Help on About topics with multiple versions does not work</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Before WMF 5.1, if you had multiple versions of a module installed and they all shared a help topic, for example, about_PSReadline, <ph id="ph1">`help about_PSReadline`</ph> would return multiple topics with no obvious way to view the real help.</source>
          <target state="new">Before WMF 5.1, if you had multiple versions of a module installed and they all shared a help topic, for example, about_PSReadline, <ph id="ph1">`help about_PSReadline`</ph> would return multiple topics with no obvious way to view the real help.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>WMF 5.1 fixes this by returning the help for the latest version of the topic.</source>
          <target state="new">WMF 5.1 fixes this by returning the help for the latest version of the topic.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Get-Help`</ph> does not provide a way to specify which version you want help for.</source>
          <target state="new"><ph id="ph1">`Get-Help`</ph> does not provide a way to specify which version you want help for.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To work around this, navigate to the modules directory and view the help directly with a tool like your favorite editor.</source>
          <target state="new">To work around this, navigate to the modules directory and view the help directly with a tool like your favorite editor.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>