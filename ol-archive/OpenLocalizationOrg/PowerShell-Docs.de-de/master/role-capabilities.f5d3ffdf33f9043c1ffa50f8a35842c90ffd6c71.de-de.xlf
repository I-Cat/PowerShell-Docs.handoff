<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3dd4a217f5b1fd80e97adf802c65073ca015bbc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">jea\role-capabilities.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a5b12c91add1683ca6f3d2d0d48f8972cc23aaf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">349654b726014e341e8701ed8c62967d6819e4a0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet,jea</source>
          <target state="new">powershell,cmdlet,jea</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>role capabilities</source>
          <target state="new">role capabilities</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Role Capabilities</source>
          <target state="new">Role Capabilities</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new">Overview</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In the above section, you learned that the "RoleDefinitions" field defined which groups had access to which Role Capabilities.</source>
          <target state="new">In the above section, you learned that the "RoleDefinitions" field defined which groups had access to which Role Capabilities.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You may have wondered, "What are Role Capabilities?"</source>
          <target state="new">You may have wondered, "What are Role Capabilities?"</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This section will answer that question.</source>
          <target state="new">This section will answer that question.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Introducing PowerShell Role Capabilities</source>
          <target state="new">Introducing PowerShell Role Capabilities</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>PowerShell Role Capabilities define "what" a user can do at a JEA endpoint.</source>
          <target state="new">PowerShell Role Capabilities define "what" a user can do at a JEA endpoint.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>They detail a whitelist of things like visible commands, visible applications, and more.</source>
          <target state="new">They detail a whitelist of things like visible commands, visible applications, and more.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Role Capabilities are defined by files with a ".psrc" extension.</source>
          <target state="new">Role Capabilities are defined by files with a ".psrc" extension.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Role Capability Contents</source>
          <target state="new">Role Capability Contents</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>We will start by examining and modifying the demo Role Capability file you used before.</source>
          <target state="new">We will start by examining and modifying the demo Role Capability file you used before.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Imagine you have deployed your Session Configuration across your environment, but you have gotten feedback that you need to change the capabilities exposed to users.</source>
          <target state="new">Imagine you have deployed your Session Configuration across your environment, but you have gotten feedback that you need to change the capabilities exposed to users.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Operators need the ability to restart machines, and they also want to be able to get information about network settings.</source>
          <target state="new">Operators need the ability to restart machines, and they also want to be able to get information about network settings.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In addition, the security team has told you that allowing users to run "Restart-Service" without any restrictions is not acceptable.</source>
          <target state="new">In addition, the security team has told you that allowing users to run "Restart-Service" without any restrictions is not acceptable.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You need to restrict the services that operators can restart.</source>
          <target state="new">You need to restrict the services that operators can restart.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To make these changes, start by running PowerShell ISE as an Administrator and open the following file:</source>
          <target state="new">To make these changes, start by running PowerShell ISE as an Administrator and open the following file:</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Now find and update the following lines in the file:</source>
          <target state="new">Now find and update the following lines in the file:</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This contains a few interesting examples:</source>
          <target state="new">This contains a few interesting examples:</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You have restricted Restart-Service such that operators will only be able to use Restart-Service with the -Name parameter, and they will only be allowed to provide "Spooler" as an argument to that parameter.</source>
          <target state="new">You have restricted Restart-Service such that operators will only be able to use Restart-Service with the -Name parameter, and they will only be allowed to provide "Spooler" as an argument to that parameter.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you wanted to, you could also restrict the arguments using a regular expression using "ValidatePattern" instead of "ValidateSet".</source>
          <target state="new">If you wanted to, you could also restrict the arguments using a regular expression using "ValidatePattern" instead of "ValidateSet".</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You have exposed all commands with the "Get" verb from the NetTCPIP module.</source>
          <target state="new">You have exposed all commands with the "Get" verb from the NetTCPIP module.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Because "Get" commands typically don't change system state, this is a relatively safe action.</source>
          <target state="new">Because "Get" commands typically don't change system state, this is a relatively safe action.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>That being said, it is strongly encouraged to closely examinine every command you expose through JEA.</source>
          <target state="new">That being said, it is strongly encouraged to closely examinine every command you expose through JEA.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You have exposed an executable (ipconfig) using VisibleExternalCommands.</source>
          <target state="new">You have exposed an executable (ipconfig) using VisibleExternalCommands.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can also expose full PowerShell scripts with this field.</source>
          <target state="new">You can also expose full PowerShell scripts with this field.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>It is important to always provide the full path to external commands to ensure a similarly named (and potentially malicious) program placed in the user's path does not get executed instead.</source>
          <target state="new">It is important to always provide the full path to external commands to ensure a similarly named (and potentially malicious) program placed in the user's path does not get executed instead.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Save the file, then connect to the demo endpoint again to confirm the changes worked.</source>
          <target state="new">Save the file, then connect to the demo endpoint again to confirm the changes worked.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Because you only modified the Role Capability file, you do not need to re-register the Session Configuration.</source>
          <target state="new">Because you only modified the Role Capability file, you do not need to re-register the Session Configuration.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>PowerShell will automatically find your updated Role Capability when a user connects.</source>
          <target state="new">PowerShell will automatically find your updated Role Capability when a user connects.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Since Role Capabilities are loaded when the session starts, existing sessions are not affected by updates to Role Capability files.</source>
          <target state="new">Since Role Capabilities are loaded when the session starts, existing sessions are not affected by updates to Role Capability files.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Now, confirm that you can restart the computer by running Restart-Computer with the -WhatIf parameter (unless you actually want to restart the computer).</source>
          <target state="new">Now, confirm that you can restart the computer by running Restart-Computer with the -WhatIf parameter (unless you actually want to restart the computer).</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Confirm that you can run "ipconfig"</source>
          <target state="new">Confirm that you can run "ipconfig"</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>And finally, confirm that Restart-Service only works for the Spooler service.</source>
          <target state="new">And finally, confirm that Restart-Service only works for the Spooler service.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Exit the session when you are finished.</source>
          <target state="new">Exit the session when you are finished.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Role Capability Creation</source>
          <target state="new">Role Capability Creation</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the next section, you will create a JEA endpoint for AD help desk users.</source>
          <target state="new">In the next section, you will create a JEA endpoint for AD help desk users.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To prepare, we will create a blank Role Capability file to fill in for that section.</source>
          <target state="new">To prepare, we will create a blank Role Capability file to fill in for that section.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Role Capabilities must be created inside a "RoleCapabilities" folder inside a valid PowerShell module in order to be resolved when a session starts.</source>
          <target state="new">Role Capabilities must be created inside a "RoleCapabilities" folder inside a valid PowerShell module in order to be resolved when a session starts.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>PowerShell Modules are essentially packages of PowerShell functionality.</source>
          <target state="new">PowerShell Modules are essentially packages of PowerShell functionality.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>They can contain PowerShell functions, cmdlets, DSC Resources, Role Capabilities, and more.</source>
          <target state="new">They can contain PowerShell functions, cmdlets, DSC Resources, Role Capabilities, and more.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can find information about modules by running <ph id="ph1">`Get-Help about_Modules`</ph> in a PowerShell console.</source>
          <target state="new">You can find information about modules by running <ph id="ph1">`Get-Help about_Modules`</ph> in a PowerShell console.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To create a new PowerShell module with a blank Role Capability file, run the following commands:</source>
          <target state="new">To create a new PowerShell module with a blank Role Capability file, run the following commands:</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Congratulations, you have created a blank Role Capability File.</source>
          <target state="new">Congratulations, you have created a blank Role Capability File.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>It will be used in the next section.</source>
          <target state="new">It will be used in the next section.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Key Concepts</source>
          <target state="new">Key Concepts</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Role Capability (.psrc)<ept id="p1">**</ept>: A file that defines "what" a user can do at a JEA endpoint.</source>
          <target state="new"><bpt id="p1">**</bpt>Role Capability (.psrc)<ept id="p1">**</ept>: A file that defines "what" a user can do at a JEA endpoint.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It details a whitelist of things like visible commands, visible console applications, and more.</source>
          <target state="new">It details a whitelist of things like visible commands, visible console applications, and more.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In order for PowerShell to detect Role Capabilities, you must put them in a "RoleCapabilities" folder in a valid PowerShell module.</source>
          <target state="new">In order for PowerShell to detect Role Capabilities, you must put them in a "RoleCapabilities" folder in a valid PowerShell module.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PowerShell Module<ept id="p1">**</ept>: A package of PowerShell functionality.</source>
          <target state="new"><bpt id="p1">**</bpt>PowerShell Module<ept id="p1">**</ept>: A package of PowerShell functionality.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It can contain PowerShell functions, cmdlets, DSC Resources, Role Capabilities, and more.</source>
          <target state="new">It can contain PowerShell functions, cmdlets, DSC Resources, Role Capabilities, and more.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In order to be automatically loaded, PowerShell modules must be located under a path in <ph id="ph1">`$env:PSModulePath`</ph>.</source>
          <target state="new">In order to be automatically loaded, PowerShell modules must be located under a path in <ph id="ph1">`$env:PSModulePath`</ph>.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>