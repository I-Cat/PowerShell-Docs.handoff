<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7ea3957ce3bbd3ce0fc072a82cd108606f05614</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">jea\end-to-end---active-directory.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">855655005da1240078e4d4bec97df25364b2041b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92cff5878fe44d51939558599a0f9832af5ee1bf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet,jea</source>
          <target state="new">powershell,cmdlet,jea</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>end to end   active directory</source>
          <target state="new">end to end   active directory</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>End to End - Active Directory</source>
          <target state="new">End to End - Active Directory</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Imagine the scope of your program has increased.</source>
          <target state="new">Imagine the scope of your program has increased.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You are now responsible for adding JEA to Domain Controllers to perform Active Directory actions.</source>
          <target state="new">You are now responsible for adding JEA to Domain Controllers to perform Active Directory actions.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The help desk people are going to use JEA to unlock accounts, reset passwords, and do other similar actions.</source>
          <target state="new">The help desk people are going to use JEA to unlock accounts, reset passwords, and do other similar actions.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You need to expose a completely new set of commands to a different group of people.</source>
          <target state="new">You need to expose a completely new set of commands to a different group of people.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>On top of that, you have a bunch of existing Active Directory scripts you need to expose.</source>
          <target state="new">On top of that, you have a bunch of existing Active Directory scripts you need to expose.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This section will walk through authoring a Session Configuration and Role Capability for this task.</source>
          <target state="new">This section will walk through authoring a Session Configuration and Role Capability for this task.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To follow this section step-by-step, you'll need to be operating on a domain controller.</source>
          <target state="new">To follow this section step-by-step, you'll need to be operating on a domain controller.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you don't have access to your domain controller, don't worry.</source>
          <target state="new">If you don't have access to your domain controller, don't worry.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Try to follow along with by working against some other scenario or role with which you are familiar.</source>
          <target state="new">Try to follow along with by working against some other scenario or role with which you are familiar.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you want to quickly set up a new domain controller, check out the <bpt id="p1">[</bpt>Creating a Domain Controller appendix<ept id="p1">](.\creating-a-domain-controller.md)</ept>.</source>
          <target state="new">If you want to quickly set up a new domain controller, check out the <bpt id="p1">[</bpt>Creating a Domain Controller appendix<ept id="p1">](.\creating-a-domain-controller.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Steps to Make a new Role Capability and Session Configuration</source>
          <target state="new">Steps to Make a new Role Capability and Session Configuration</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Making a new role capability can seem daunting at first, but it can be broken into fairly simple steps:</source>
          <target state="new">Making a new role capability can seem daunting at first, but it can be broken into fairly simple steps:</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Identify the tasks you need to enable</source>
          <target state="new">Identify the tasks you need to enable</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Restrict those tasks as necessary</source>
          <target state="new">Restrict those tasks as necessary</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Confirm they work with JEA</source>
          <target state="new">Confirm they work with JEA</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Put them in a Role Capability file</source>
          <target state="new">Put them in a Role Capability file</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Register a Session Configuration that exposes that Role Capability</source>
          <target state="new">Register a Session Configuration that exposes that Role Capability</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Step 1: Identify What Needs to Be Exposed</source>
          <target state="new">Step 1: Identify What Needs to Be Exposed</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Before you make a new Role Capability or Session Configuration, you need to identify all of the things users will need to do through the JEA endpoint, as well as how to do them through PowerShell.</source>
          <target state="new">Before you make a new Role Capability or Session Configuration, you need to identify all of the things users will need to do through the JEA endpoint, as well as how to do them through PowerShell.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This will involve a fair amount of requirement gathering and research.</source>
          <target state="new">This will involve a fair amount of requirement gathering and research.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>How you go about this process will depend on your organization and goals.</source>
          <target state="new">How you go about this process will depend on your organization and goals.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It is important to call out requirement gathering and research as a critical part of the real world process.</source>
          <target state="new">It is important to call out requirement gathering and research as a critical part of the real world process.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This may be the most difficult step in the process of adopting JEA.</source>
          <target state="new">This may be the most difficult step in the process of adopting JEA.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Find Resources</source>
          <target state="new">Find Resources</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Here is a set of online resources that might have come up in your research on creating an Active Directory management endpoint:</source>
          <target state="new">Here is a set of online resources that might have come up in your research on creating an Active Directory management endpoint:</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Active Directory PowerShell Overview<ept id="p1">](http://blogs.msdn.com/b/adpowershell/archive/2009/03/05/active-directory-powershell-overview.aspx)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>Active Directory PowerShell Overview<ept id="p1">](http://blogs.msdn.com/b/adpowershell/archive/2009/03/05/active-directory-powershell-overview.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CMD to PowerShell Guide for Active Directory<ept id="p1">](http://blogs.technet.com/b/ashleymcglone/archive/2013/01/02/free-download-cmd-to-powershell-guide-for-ad.aspx)</ept></source>
          <target state="new"><bpt id="p1">[</bpt>CMD to PowerShell Guide for Active Directory<ept id="p1">](http://blogs.technet.com/b/ashleymcglone/archive/2013/01/02/free-download-cmd-to-powershell-guide-for-ad.aspx)</ept></target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Make a List</source>
          <target state="new">Make a List</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Here is a set of ten actions that you will be working from in the remainder of this section.</source>
          <target state="new">Here is a set of ten actions that you will be working from in the remainder of this section.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Keep in mind this is simply an example, your organizations requirements may be different:</source>
          <target state="new">Keep in mind this is simply an example, your organizations requirements may be different:</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="new">Action</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>PowerShell Command</source>
          <target state="new">PowerShell Command</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Account Unlock</source>
          <target state="new">Account Unlock</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Password Reset</source>
          <target state="new">Password Reset</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Set-ADAccountPassword`</ph> and <ph id="ph2">`Set-ADUser -ChangePasswordAtLogon`</ph></source>
          <target state="new"><ph id="ph1">`Set-ADAccountPassword`</ph> and <ph id="ph2">`Set-ADUser -ChangePasswordAtLogon`</ph></target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Change a User's Title</source>
          <target state="new">Change a User's Title</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Find AD Accounts that are locked out, disabled, inactive, etc.</source>
          <target state="new">Find AD Accounts that are locked out, disabled, inactive, etc.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Add User to Group</source>
          <target state="new">Add User to Group</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Remove User from Group</source>
          <target state="new">Remove User from Group</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Enable a user account</source>
          <target state="new">Enable a user account</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Disable a user account</source>
          <target state="new">Disable a user account</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Step 2: Restrict Tasks as Necessary</source>
          <target state="new">Step 2: Restrict Tasks as Necessary</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Now that you have your list of actions, you need to think through the capabilities of each command.</source>
          <target state="new">Now that you have your list of actions, you need to think through the capabilities of each command.</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>There are two important reasons to do this:</source>
          <target state="new">There are two important reasons to do this:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It is easy to give users more capabilities than you intend.</source>
          <target state="new">It is easy to give users more capabilities than you intend.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`Set-ADUser`</ph> is an incredibly powerful and flexible command.</source>
          <target state="new">For example, <ph id="ph1">`Set-ADUser`</ph> is an incredibly powerful and flexible command.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You may not want to expose everything it can do to help desk users.</source>
          <target state="new">You may not want to expose everything it can do to help desk users.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Even worse, it's possible to expose commands that allow users to escape JEA's restrictions.</source>
          <target state="new">Even worse, it's possible to expose commands that allow users to escape JEA's restrictions.</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If this happens, JEA ceases to function as a security boundary.</source>
          <target state="new">If this happens, JEA ceases to function as a security boundary.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Please be careful when selecting commands.</source>
          <target state="new">Please be careful when selecting commands.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For example, Invoke-Expression will allow users to run unrestricted code.</source>
          <target state="new">For example, Invoke-Expression will allow users to run unrestricted code.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more discussion on this topic, check out the Considerations When Restricting Commands section.</source>
          <target state="new">For more discussion on this topic, check out the Considerations When Restricting Commands section.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>After reviewing each command, you decide to restrict the following:</source>
          <target state="new">After reviewing each command, you decide to restrict the following:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Set-ADUser`</ph> should only be allowed to run with the -Title parameter</source>
          <target state="new"><ph id="ph1">`Set-ADUser`</ph> should only be allowed to run with the -Title parameter</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Add-ADGroupMember`</ph> and <ph id="ph2">`Remove-ADGroupMember`</ph> should only work with certain groups</source>
          <target state="new"><ph id="ph1">`Add-ADGroupMember`</ph> and <ph id="ph2">`Remove-ADGroupMember`</ph> should only work with certain groups</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Step 3: Confirm the Tasks Work with JEA</source>
          <target state="new">Step 3: Confirm the Tasks Work with JEA</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Actually using those cmdlets may not be straightforward in the restricted JEA environment.</source>
          <target state="new">Actually using those cmdlets may not be straightforward in the restricted JEA environment.</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>JEA runs in <bpt id="p1">*</bpt>NoLanguage<ept id="p1">*</ept> mode which, among other things, prevents users from using variables.</source>
          <target state="new">JEA runs in <bpt id="p1">*</bpt>NoLanguage<ept id="p1">*</ept> mode which, among other things, prevents users from using variables.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In order to ensure that end users have a smooth experience, it's important to check for a few things.</source>
          <target state="new">In order to ensure that end users have a smooth experience, it's important to check for a few things.</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>As an example, consider <ph id="ph1">`Set-ADAccountPassword`</ph>.</source>
          <target state="new">As an example, consider <ph id="ph1">`Set-ADAccountPassword`</ph>.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The -NewPassword parameter requires a secure string.</source>
          <target state="new">The -NewPassword parameter requires a secure string.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Often, users create a secure string and pass it in as a variable (as below):</source>
          <target state="new">Often, users create a secure string and pass it in as a variable (as below):</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>However, <bpt id="p1">*</bpt>NoLanguage<ept id="p1">*</ept> mode prevents the usage of variables.</source>
          <target state="new">However, <bpt id="p1">*</bpt>NoLanguage<ept id="p1">*</ept> mode prevents the usage of variables.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can get around this restriction in two ways:</source>
          <target state="new">You can get around this restriction in two ways:</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can require users run the command without assigning variables.</source>
          <target state="new">You can require users run the command without assigning variables.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This is easy to configure, but can be painful for the operators using the endpoint.</source>
          <target state="new">This is easy to configure, but can be painful for the operators using the endpoint.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Who wants to type this out every time you reset a password?</source>
          <target state="new">Who wants to type this out every time you reset a password?</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can wrap the complexity in a script or a function that you expose to end users.</source>
          <target state="new">You can wrap the complexity in a script or a function that you expose to end users.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Scripts and functions that you expose run in an unrestricted context; you can write functions that use variables and call other commands without any issue.</source>
          <target state="new">Scripts and functions that you expose run in an unrestricted context; you can write functions that use variables and call other commands without any issue.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This approach simplifies the end user experience, prevents errors, reduces required PowerShell knowledge, and reduces unintentionally exposing excess functionality.</source>
          <target state="new">This approach simplifies the end user experience, prevents errors, reduces required PowerShell knowledge, and reduces unintentionally exposing excess functionality.</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The only downside is the cost of authoring and maintaining the function.</source>
          <target state="new">The only downside is the cost of authoring and maintaining the function.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Aside: Adding a Function to your Module</source>
          <target state="new">Aside: Adding a Function to your Module</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Taking approach #2, you are going to write a PowerShell function called <ph id="ph1">`Reset-ContosoUserPassword`</ph>.</source>
          <target state="new">Taking approach #2, you are going to write a PowerShell function called <ph id="ph1">`Reset-ContosoUserPassword`</ph>.</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This function is going to do everything that needs to happen when you reset a user's password.</source>
          <target state="new">This function is going to do everything that needs to happen when you reset a user's password.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In your organization, this may involve doing fancy and complicated things.</source>
          <target state="new">In your organization, this may involve doing fancy and complicated things.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Because this is just an example, your command will just reset the password and require the user change the password at logon.</source>
          <target state="new">Because this is just an example, your command will just reset the password and require the user change the password at logon.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>We will put it in the Contoso_AD_Module module you made in the last section.</source>
          <target state="new">We will put it in the Contoso_AD_Module module you made in the last section.</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In PowerShell ISE, open "Contoso_AD_Module.psm1"</source>
          <target state="new">In PowerShell ISE, open "Contoso_AD_Module.psm1"</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Press Crtl+J to open the snippets menu.</source>
          <target state="new">Press Crtl+J to open the snippets menu.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Key down until you find "function" and press enter.</source>
          <target state="new">Key down until you find "function" and press enter.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This puts up a super basic skeleton of a function.</source>
          <target state="new">This puts up a super basic skeleton of a function.</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Rename the function "Reset-ContosoUserPassword".</source>
          <target state="new">Rename the function "Reset-ContosoUserPassword".</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Rename one of the parameters "Identity" and delete the second.</source>
          <target state="new">Rename one of the parameters "Identity" and delete the second.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Copy the following into the body of the function.</source>
          <target state="new">Copy the following into the body of the function.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Save the file.</source>
          <target state="new">Save the file.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You should end up with something that looks like this:</source>
          <target state="new">You should end up with something that looks like this:</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Now, your users can simply call <ph id="ph1">`Reset-ContosoUserPassword`</ph> and not have to remember the syntax to create a secure string inline.</source>
          <target state="new">Now, your users can simply call <ph id="ph1">`Reset-ContosoUserPassword`</ph> and not have to remember the syntax to create a secure string inline.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Step 4: Edit the Role Capability File</source>
          <target state="new">Step 4: Edit the Role Capability File</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">[</bpt>Role Capability Creation<ept id="p1">](./role-capabilities.md#role-capability-creation)</ept> section, you created a blank Role Capability file.</source>
          <target state="new">In the <bpt id="p1">[</bpt>Role Capability Creation<ept id="p1">](./role-capabilities.md#role-capability-creation)</ept> section, you created a blank Role Capability file.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In this section, you will fill in the values in that file.</source>
          <target state="new">In this section, you will fill in the values in that file.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Start by opening the role capability file in PowerShell ISE.</source>
          <target state="new">Start by opening the role capability file in PowerShell ISE.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Update the file with the following changes:</source>
          <target state="new">Update the file with the following changes:</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>There are a few things to note about the above:</source>
          <target state="new">There are a few things to note about the above:</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>PowerShell will attempt to auto-load the modules needed for your Role Capability.</source>
          <target state="new">PowerShell will attempt to auto-load the modules needed for your Role Capability.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You may need to explicitly list module names in the "ModulesToImport" field if you notice problems with a module not being autoloaded.</source>
          <target state="new">You may need to explicitly list module names in the "ModulesToImport" field if you notice problems with a module not being autoloaded.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If you aren't sure if a command is a cmdlet or a function, run <ph id="ph1">`Get-Command`</ph> and look at the "CommandType" property</source>
          <target state="new">If you aren't sure if a command is a cmdlet or a function, run <ph id="ph1">`Get-Command`</ph> and look at the "CommandType" property</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The ValidatePattern allows you to use a regular expression to restrict parameter arguments if it is not easy to define a set of allowable values.</source>
          <target state="new">The ValidatePattern allows you to use a regular expression to restrict parameter arguments if it is not easy to define a set of allowable values.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>You cannot define both a ValidatePattern and ValidateSet for a single parameter.</source>
          <target state="new">You cannot define both a ValidatePattern and ValidateSet for a single parameter.</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Step 5: Register a new Session Configuration</source>
          <target state="new">Step 5: Register a new Session Configuration</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Next, you will create a new session configuration file that will expose your Role Capability to members of the "JEA_NonAdmin_HelpDesk" AD group.</source>
          <target state="new">Next, you will create a new session configuration file that will expose your Role Capability to members of the "JEA_NonAdmin_HelpDesk" AD group.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Start by creating and opening a new blank Session Configuration file in PowerShell ISE.</source>
          <target state="new">Start by creating and opening a new blank Session Configuration file in PowerShell ISE.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Modify the following fields in the PSSC file.</source>
          <target state="new">Modify the following fields in the PSSC file.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If you are working in your own environment, you should replace "CONTOSO\JEA_NonAdmins_Helpdesk" with your own non-administrator user or group.</source>
          <target state="new">If you are working in your own environment, you should replace "CONTOSO\JEA_NonAdmins_Helpdesk" with your own non-administrator user or group.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Save and register the Session Configuration</source>
          <target state="new">Save and register the Session Configuration</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Test It Out!</source>
          <target state="new">Test It Out!</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Get your non-administrator user credentials:</source>
          <target state="new">Get your non-administrator user credentials:</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If you followed the <bpt id="p1">[</bpt>Set Up Users and Groups<ept id="p1">](creating-a-domain-controller.md#set-up-users-and-groups)</ept> section, the credentials will be:</source>
          <target state="new">If you followed the <bpt id="p1">[</bpt>Set Up Users and Groups<ept id="p1">](creating-a-domain-controller.md#set-up-users-and-groups)</ept> section, the credentials will be:</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Username = "HelpDeskUser"</source>
          <target state="new">Username = "HelpDeskUser"</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Password = "pa$$w0rd"</source>
          <target state="new">Password = "pa$$w0rd"</target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Remote into the ADHelpdesk endpoint using the non-admin credential:</source>
          <target state="new">Remote into the ADHelpdesk endpoint using the non-admin credential:</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Use Set-ADUser to reset a user's title.</source>
          <target state="new">Use Set-ADUser to reset a user's title.</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Verify that the title has changed.</source>
          <target state="new">Verify that the title has changed.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Now, use Add-ADGroupMember to add a user to the TestGroup.</source>
          <target state="new">Now, use Add-ADGroupMember to add a user to the TestGroup.</target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Note: make sure you've created the TestGroup beforehand.</source>
          <target state="new">Note: make sure you've created the TestGroup beforehand.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Exit the session:</source>
          <target state="new">Exit the session:</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Key Concepts</source>
          <target state="new">Key Concepts</target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NoLanguage Mode<ept id="p1">**</ept>: When PowerShell is in "NoLanguage" mode, users may only run commands; they cannot use any language elements.</source>
          <target state="new"><bpt id="p1">**</bpt>NoLanguage Mode<ept id="p1">**</ept>: When PowerShell is in "NoLanguage" mode, users may only run commands; they cannot use any language elements.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For more information, run <ph id="ph1">`Get-Help about_Language_Modes`</ph>.</source>
          <target state="new">For more information, run <ph id="ph1">`Get-Help about_Language_Modes`</ph>.</target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PowerShell Functions<ept id="p1">**</ept>: PowerShell functions are bits of PowerShell code that you can call by name.</source>
          <target state="new"><bpt id="p1">**</bpt>PowerShell Functions<ept id="p1">**</ept>: PowerShell functions are bits of PowerShell code that you can call by name.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>For more information, run <ph id="ph1">`Get-Help about_Functions`</ph>.</source>
          <target state="new">For more information, run <ph id="ph1">`Get-Help about_Functions`</ph>.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>ValidateSet/ValidatePattern<ept id="p1">**</ept>: When exposing a command, you can restrict valid arguments for specific parameters.</source>
          <target state="new"><bpt id="p1">**</bpt>ValidateSet/ValidatePattern<ept id="p1">**</ept>: When exposing a command, you can restrict valid arguments for specific parameters.</target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A ValidateSet is a specific list of valid arguments.</source>
          <target state="new">A ValidateSet is a specific list of valid arguments.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A ValidatePattern is a regular expression that the arguments for that parameter must match.</source>
          <target state="new">A ValidatePattern is a regular expression that the arguments for that parameter must match.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>