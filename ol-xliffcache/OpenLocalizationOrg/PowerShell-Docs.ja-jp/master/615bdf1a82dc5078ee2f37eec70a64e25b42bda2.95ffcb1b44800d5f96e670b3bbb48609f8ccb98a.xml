{"nodes":[{"pos":[13,68],"content":"Improvements to Package Management in WMF 5.1 (Preview)","needQuote":true,"nodes":[{"content":"Improvements to Package Management in WMF 5.1 (Preview)","pos":[0,55]}]},{"pos":[101,121],"content":"PowerShell, DSC, WMF","needQuote":true,"nodes":[{"content":"PowerShell, DSC, WMF","pos":[0,20]}]},{"content":"Improvements to Package Management in WMF 5.1 (Preview)","pos":[271,326]},{"content":"Improvements in PackageManagement","pos":[333,366]},{"content":"The following are the fixes made in the WMF 5.1:","pos":[370,418]},{"content":"Version Alias","pos":[425,438]},{"content":"<bpt id=\"p1\">**</bpt>Scenario<ept id=\"p1\">**</ept>: If you have version 1.0 and 2.0 of a package, P1, installed on your system, and you want to uninstall version 1.0, you would run <ph id=\"ph1\">`Uninstall-Package -Name P1 -Version 1.0`</ph> and expect version 1.0 to be uninstalled after running the cmdlet.","pos":[440,691],"source":"**Scenario**: If you have version 1.0 and 2.0 of a package, P1, installed on your system, and you want to uninstall version 1.0, you would run `Uninstall-Package -Name P1 -Version 1.0` and expect version 1.0 to be uninstalled after running the cmdlet."},{"content":"However the result is that version 2.0 gets uninstalled.","pos":[692,748]},{"content":"This occurs because the <ph id=\"ph1\">`-Version`</ph> parameter is an alias of the <ph id=\"ph2\">`-MinimumVersion`</ph> parameter.","pos":[756,848],"source":"This occurs because the `-Version` parameter is an alias of the `-MinimumVersion` parameter."},{"content":"When PackageManagement is looking for a qualified package with the minimum version of 1.0, it returns the latest version.","pos":[849,970]},{"content":"This behavior is expected in normal cases because finding the latest version is usually the desired result.","pos":[971,1078]},{"content":"However, it should not apply to the <ph id=\"ph1\">`Uninstall-Package`</ph> case.","pos":[1079,1140],"source":" However, it should not apply to the `Uninstall-Package` case."},{"content":"<bpt id=\"p1\">**</bpt>Solution<ept id=\"p1\">**</ept>:removed <ph id=\"ph1\">`-Version`</ph> alias entirely in PackageManagement (a.k.a.","pos":[1146,1221],"source":"**Solution**:removed `-Version` alias entirely in PackageManagement (a.k.a."},{"content":"OneGet) and PowerShellGet.","pos":[1222,1248]},{"content":"Multiple prompts for bootstrapping the NuGet provider","pos":[1255,1308]},{"content":"<bpt id=\"p1\">**</bpt>Scenario<ept id=\"p1\">**</ept>: When you run <ph id=\"ph1\">`Find-Module`</ph> or <ph id=\"ph2\">`Install-Module`</ph> or other PackageManagement cmdlets on your computer for the first time, PackageManagement tries to bootstrap the NuGet provider.","pos":[1310,1499],"source":"**Scenario**: When you run `Find-Module` or `Install-Module` or other PackageManagement cmdlets on your computer for the first time, PackageManagement tries to bootstrap the NuGet provider."},{"content":"It does this because the PowerShellGet provider also uses the NuGet provider to download PowerShell modules.","pos":[1500,1608]},{"content":"PackageManagement then prompts the user for permission to install the NuGet provider.","pos":[1609,1694]},{"content":"After the user selects \"yes\" for the bootstrapping, the latest version of the NuGet provider will be installed.","pos":[1695,1806]},{"content":"However, in some cases, when you have an old version of NuGet provider installed on your computer, the older version of NuGet sometimes gets loaded first into the PowerShell session (that's the race condition in PackageManagement).","pos":[1813,2044]},{"content":"However PowerShellGet requires the later version of the NuGet provider to work, so PowerShellGet asks PackageManagement to bootstrap the NuGet provider again.","pos":[2045,2203]},{"content":"This results in multiple prompts for bootstrapping the NuGet provider.","pos":[2204,2274]},{"pos":[2276,2429],"content":"<bpt id=\"p1\">**</bpt>Solution<ept id=\"p1\">**</ept>: In WMF5.1, PackageManagement loads the latest version of the NuGet provider to avoid multiple prompts for bootstrapping the NuGet provider.","source":"**Solution**: In WMF5.1, PackageManagement loads the latest version of the NuGet provider to avoid multiple prompts for bootstrapping the NuGet provider."},{"pos":[2431,2672],"content":"You could also work around this issue by manually deleting the old version of the NuGet provider (NuGet-Anycpu.exe) if exists from $env:ProgramFiles\\PackageManagement\\ProviderAssemblies $env:LOCALAPPDATA\\PackageManagement\\ProviderAssemblies","source":"You could also work around this issue by manually deleting the old version of the NuGet provider (NuGet-Anycpu.exe) if exists from $env:ProgramFiles\\PackageManagement\\ProviderAssemblies \n$env:LOCALAPPDATA\\PackageManagement\\ProviderAssemblies"},{"content":"Support for PackageManagement on computers with Intranet access only","pos":[2679,2747]},{"content":"<bpt id=\"p1\">**</bpt>Scenario<ept id=\"p1\">**</ept>: For the enterprise scenario, people are working under an environment where there is no Internet access but Intranet only.","pos":[2749,2884],"source":"**Scenario**: For the enterprise scenario, people are working under an environment where there is no Internet access but Intranet only."},{"content":"PackageManagement did not support this case in WMF 5.0.","pos":[2885,2940]},{"pos":[2942,3062],"content":"<bpt id=\"p1\">**</bpt>Scenario<ept id=\"p1\">**</ept>: In WMF 5.0, PackageManagement did not support computers that have only Intranet (but not Internet) access.","source":"**Scenario**: In WMF 5.0, PackageManagement did not support computers that have only Intranet (but not Internet) access."},{"pos":[3064,3170],"content":"<bpt id=\"p1\">**</bpt>Solution<ept id=\"p1\">**</ept>: In WMF 5.1, you can follow these steps to allow Intranet computers to use PackageManagement:","source":"**Solution**: In WMF 5.1, you can follow these steps to allow Intranet computers to use PackageManagement:"},{"pos":[3175,3305],"content":"Download the NuGet provider using another computer that has an Internet connection by using <ph id=\"ph1\">`Install-PackageProvider -Name NuGet`</ph>.","source":"Download the NuGet provider using another computer that has an Internet connection by using `Install-PackageProvider -Name NuGet`."},{"pos":[3310,3478],"content":"Find the NuGet provider under either <ph id=\"ph1\">`$env:ProgramFiles\\PackageManagement\\ProviderAssemblies\\nuget`</ph>  or  <ph id=\"ph2\">`$env:LOCALAPPDATA\\PackageManagement\\ProviderAssemblies\\nuget`</ph>.","source":"Find the NuGet provider under either `$env:ProgramFiles\\PackageManagement\\ProviderAssemblies\\nuget`  or  `$env:LOCALAPPDATA\\PackageManagement\\ProviderAssemblies\\nuget`."},{"pos":[3483,3682],"content":"Copy the binaries to a folder or network share location that the Intranet computer can access, and then install the NuGet provider with <ph id=\"ph1\">`Install-PackageProvider -Name NuGet -Source &lt;Path to folder&gt;`</ph>.","source":"Copy the binaries to a folder or network share location that the Intranet computer can access, and then install the NuGet provider with `Install-PackageProvider -Name NuGet -Source <Path to folder>`."},{"content":"Event logging improvements","pos":[3689,3715]},{"content":"When you install packages, you are changing the state of the computer.","pos":[3717,3787]},{"content":"In WMF 5.1, PackageManagement now logs events to the Windows event log for <ph id=\"ph1\">`Install-Package`</ph>, <ph id=\"ph2\">`Uninstall-Package`</ph>, and <ph id=\"ph3\">`Save-Package`</ph> activities.","pos":[3788,3933],"source":" In WMF 5.1, PackageManagement now logs events to the Windows event log for `Install-Package`, `Uninstall-Package`, and `Save-Package` activities."},{"content":"The Event log  is the same as for PowerShell, that is, <ph id=\"ph1\">`Microsoft-Windows-PowerShell, Operational`</ph>.","pos":[3934,4033],"source":" The Event log  is the same as for PowerShell, that is, `Microsoft-Windows-PowerShell, Operational`."},{"content":"Support for basic authentication","pos":[4039,4071]},{"content":"In WMF 5.1, PackageManagement supports finding and installing packages from a repository that requires basic authentication.","pos":[4073,4197]},{"content":"You can supply your credentials to the <ph id=\"ph1\">`Find-Package`</ph> and <ph id=\"ph2\">`Install-Package`</ph> cmdlets.","pos":[4198,4282],"source":" You can supply your credentials to the `Find-Package` and `Install-Package` cmdlets."},{"content":"For example:","pos":[4283,4295]},{"content":"Support for using PackageManagement behind a proxy","pos":[4393,4443]},{"content":"In WMF 5.1, PackageManagement now takes new proxy parameters <ph id=\"ph1\">`-ProxyCredential`</ph> and <ph id=\"ph2\">`-Proxy`</ph>.","pos":[4445,4538],"source":"In WMF 5.1, PackageManagement now takes new proxy parameters `-ProxyCredential` and `-Proxy`."},{"content":"Using these parameters, you can specify the proxy URL and credentials to PackageManagement cmdlets.","pos":[4539,4638]},{"content":"By default, system proxy settings are used.","pos":[4639,4682]},{"content":"For example:","pos":[4683,4695]}],"content":"---\ntitle:   Improvements to Package Management in WMF 5.1 (Preview)\nms.date:  2016-07-15\nkeywords:  PowerShell, DSC, WMF\ndescription:  \nms.topic:  article\nauthor:  jaimeo\ncontributor: jianyunt, quoctruong\nmanager:  dongill\nms.prod:  powershell\nms.technology: WMF\n---\n\n# Improvements to Package Management in WMF 5.1 (Preview) #\n\n## Improvements in PackageManagement ##\nThe following are the fixes made in the WMF 5.1: \n\n### Version Alias\n\n**Scenario**: If you have version 1.0 and 2.0 of a package, P1, installed on your system, and you want to uninstall version 1.0, you would run `Uninstall-Package -Name P1 -Version 1.0` and expect version 1.0 to be uninstalled after running the cmdlet. However the result is that version 2.0 gets uninstalled.  \n    \nThis occurs because the `-Version` parameter is an alias of the `-MinimumVersion` parameter. When PackageManagement is looking for a qualified package with the minimum version of 1.0, it returns the latest version. This behavior is expected in normal cases because finding the latest version is usually the desired result. However, it should not apply to the `Uninstall-Package` case.\n    \n**Solution**:removed `-Version` alias entirely in PackageManagement (a.k.a. OneGet) and PowerShellGet. \n\n### Multiple prompts for bootstrapping the NuGet provider\n\n**Scenario**: When you run `Find-Module` or `Install-Module` or other PackageManagement cmdlets on your computer for the first time, PackageManagement tries to bootstrap the NuGet provider. It does this because the PowerShellGet provider also uses the NuGet provider to download PowerShell modules. PackageManagement then prompts the user for permission to install the NuGet provider. After the user selects \"yes\" for the bootstrapping, the latest version of the NuGet provider will be installed. \n    \nHowever, in some cases, when you have an old version of NuGet provider installed on your computer, the older version of NuGet sometimes gets loaded first into the PowerShell session (that's the race condition in PackageManagement). However PowerShellGet requires the later version of the NuGet provider to work, so PowerShellGet asks PackageManagement to bootstrap the NuGet provider again. This results in multiple prompts for bootstrapping the NuGet provider.\n\n**Solution**: In WMF5.1, PackageManagement loads the latest version of the NuGet provider to avoid multiple prompts for bootstrapping the NuGet provider.\n\nYou could also work around this issue by manually deleting the old version of the NuGet provider (NuGet-Anycpu.exe) if exists from $env:ProgramFiles\\PackageManagement\\ProviderAssemblies \n$env:LOCALAPPDATA\\PackageManagement\\ProviderAssemblies\n\n\n### Support for PackageManagement on computers with Intranet access only\n\n**Scenario**: For the enterprise scenario, people are working under an environment where there is no Internet access but Intranet only. PackageManagement did not support this case in WMF 5.0.\n\n**Scenario**: In WMF 5.0, PackageManagement did not support computers that have only Intranet (but not Internet) access.\n\n**Solution**: In WMF 5.1, you can follow these steps to allow Intranet computers to use PackageManagement:\n\n1. Download the NuGet provider using another computer that has an Internet connection by using `Install-PackageProvider -Name NuGet`.\n\n2. Find the NuGet provider under either `$env:ProgramFiles\\PackageManagement\\ProviderAssemblies\\nuget`  or  `$env:LOCALAPPDATA\\PackageManagement\\ProviderAssemblies\\nuget`.\n\n3. Copy the binaries to a folder or network share location that the Intranet computer can access, and then install the NuGet provider with `Install-PackageProvider -Name NuGet -Source <Path to folder>`.\n\n\n### Event logging improvements\n\nWhen you install packages, you are changing the state of the computer. In WMF 5.1, PackageManagement now logs events to the Windows event log for `Install-Package`, `Uninstall-Package`, and `Save-Package` activities. The Event log  is the same as for PowerShell, that is, `Microsoft-Windows-PowerShell, Operational`.\n\n### Support for basic authentication\n\nIn WMF 5.1, PackageManagement supports finding and installing packages from a repository that requires basic authentication. You can supply your credentials to the `Find-Package` and `Install-Package` cmdlets. For example:\n\n``` PowerShell\nFind-Package -Source <SourceWithCredential> -Credential (Get-Credential)\n```\n### Support for using PackageManagement behind a proxy\n\nIn WMF 5.1, PackageManagement now takes new proxy parameters `-ProxyCredential` and `-Proxy`. Using these parameters, you can specify the proxy URL and credentials to PackageManagement cmdlets. By default, system proxy settings are used. For example:\n\n``` PowerShell\nFind-Package -Source http://www.nuget.org/api/v2/ -Proxy http://www.myproxyserver.com -ProxyCredential (Get-Credential)\n```\n\n"}