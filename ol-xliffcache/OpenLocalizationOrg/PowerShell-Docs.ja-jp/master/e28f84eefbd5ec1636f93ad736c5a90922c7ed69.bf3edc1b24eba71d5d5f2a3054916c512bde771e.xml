{"nodes":[{"content":"Publish-Module","pos":[3,17]},{"content":"Publishes a specified module from the local computer to an online gallery.","pos":[19,93]},{"content":"Description","pos":[98,109]},{"content":"The <bpt id=\"p1\">**</bpt>Publish-Module<ept id=\"p1\">**</ept> cmdlet publishes a module to an online NuGet-based gallery by using an API key, stored as part of a user's profile in the gallery.","pos":[111,264],"source":"The **Publish-Module** cmdlet publishes a module to an online NuGet-based gallery by using an API key, stored as part of a user's profile in the gallery."},{"content":"You can specify the module to publish either by the module's name, or by the path to the folder containing the module.","pos":[265,383]},{"content":"When you specify a module by name, <bpt id=\"p1\">**</bpt>Publish-Module<ept id=\"p1\">**</ept> publishes the first module that would be found by running <ph id=\"ph1\">`Get-Module -ListAvailable &lt;Name&gt;`</ph>.","pos":[385,532],"source":"When you specify a module by name, **Publish-Module** publishes the first module that would be found by running `Get-Module -ListAvailable <Name>`."},{"content":"If you specify a minimum version of a module to publish, <bpt id=\"p1\">**</bpt>Publish-Module<ept id=\"p1\">**</ept> publishes the first module with a version that is greater than or equal to the minimum version that you have specified.","pos":[533,728],"source":" If you specify a minimum version of a module to publish, **Publish-Module** publishes the first module with a version that is greater than or equal to the minimum version that you have specified."},{"content":"Publishing a module requires metadata that is displayed on the gallery page for the module.","pos":[730,821]},{"content":"Required metadata includes the module name, version, description, and author.","pos":[822,899]},{"content":"Although most metadata is taken from the module manifest, some metadata must be specified in <bpt id=\"p1\">**</bpt>Publish-Module<ept id=\"p1\">**</ept> parameters, such as <bpt id=\"p2\">*</bpt>Tag, ReleaseNote, IconUri, ProjectUri,<ept id=\"p2\">*</ept> and <bpt id=\"p3\">*</bpt>LicenseUri<ept id=\"p3\">*</ept>, because these parameters match fields in a NuGet-based gallery.","pos":[900,1154],"source":" Although most metadata is taken from the module manifest, some metadata must be specified in **Publish-Module** parameters, such as *Tag, ReleaseNote, IconUri, ProjectUri,* and *LicenseUri*, because these parameters match fields in a NuGet-based gallery."},{"content":"The RequiredVersion parameter allows you to specify the exact version of a module to be published.","pos":[1156,1254]},{"content":"The Path parameter also supports the module base path with the version folder.","pos":[1255,1333],"source":"\nThe Path parameter also supports the module base path with the version folder."},{"content":"The Force switch parameter on Publish-Module cmdlet bootstraps the NuGet.exe without prompting.","pos":[1334,1429],"source":"\nThe Force switch parameter on Publish-Module cmdlet bootstraps the NuGet.exe without prompting."},{"content":"Cmdlet syntax","pos":[1434,1447]},{"content":"Cmdlet online help reference","pos":[1533,1561]},{"pos":[1563,1626],"content":"<bpt id=\"p1\">[</bpt>Publish-Module<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=398575)</ept>","source":"[Publish-Module](http://go.microsoft.com/fwlink/?LinkID=398575)"},{"content":"Example commands","pos":[1631,1647]},{"content":"Publishing a module with dependencies","pos":[3330,3367]},{"content":"Create a module with dependencies and version range specified in RequiredModules property of its module manifest.","pos":[3373,3486]},{"pos":[3488,3497],"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept>","source":"**Note:**"},{"content":"\\* is supported only in MaximumVersion and also it should be at the end of version string.","pos":[3502,3592]},{"content":"\\* is replaced with 999999999 in the version object.","pos":[3598,3650]},{"content":"Publish ModuleWithDependencies module with dependencies to the repository.","pos":[4129,4203]},{"content":"Find ModuleWithDependencies module with its dependencies by specifying -IncludeDependencies","pos":[4347,4438]},{"content":"Install the ModuleWithDependencies module with dependencies.","pos":[5088,5148]},{"content":"Note that version ranges are honored during the dependency installation.","pos":[5149,5221]},{"content":"Contents of ModuleWithDependencies2 module manifest file","pos":[5973,6029]},{"content":"External dependencies","pos":[8451,8472]},{"content":"Some module dependencies can be managed externally, in that case they should be added to the ExternalModuleDependencies entry in the PSData section of the module manifest.","pos":[8473,8644]},{"content":"If 'SnippetPx' is not available on the repository, below error will be thrown.","pos":[8646,8724]}],"content":"\n# Publish-Module\n\nPublishes a specified module from the local computer to an online gallery.\n\n## Description\n\nThe **Publish-Module** cmdlet publishes a module to an online NuGet-based gallery by using an API key, stored as part of a user's profile in the gallery. You can specify the module to publish either by the module's name, or by the path to the folder containing the module.\n\nWhen you specify a module by name, **Publish-Module** publishes the first module that would be found by running `Get-Module -ListAvailable <Name>`. If you specify a minimum version of a module to publish, **Publish-Module** publishes the first module with a version that is greater than or equal to the minimum version that you have specified.\n\nPublishing a module requires metadata that is displayed on the gallery page for the module. Required metadata includes the module name, version, description, and author. Although most metadata is taken from the module manifest, some metadata must be specified in **Publish-Module** parameters, such as *Tag, ReleaseNote, IconUri, ProjectUri,* and *LicenseUri*, because these parameters match fields in a NuGet-based gallery.\n\nThe RequiredVersion parameter allows you to specify the exact version of a module to be published.\nThe Path parameter also supports the module base path with the version folder.\nThe Force switch parameter on Publish-Module cmdlet bootstraps the NuGet.exe without prompting.\n\n## Cmdlet syntax\n```powershell\nGet-Command -Name Publish-Module -Module PowerShellGet -Syntax\n```\n\n## Cmdlet online help reference\n\n[Publish-Module](http://go.microsoft.com/fwlink/?LinkID=398575)\n\n## Example commands\n\n```powershell\nContosoServer module with different versions to be published.\nPS C:\\\\windows\\\\system32> Get-Module -Name ContosoServer -ListAvailable\nDirectory: C:\\\\Program Files\\\\WindowsPowerShell\\\\Modules\nModuleType Version Name ExportedCommands\n---------- ------- ---- ----------------\nManifest 2.8 ContosoServer Get-ContosoServer\nManifest 2.0 ContosoServer Get-ContosoServer\nManifest 1.5 ContosoServer Get-ContosoServer\nManifest 1.0 ContosoServer Get-ContosoServer\nPS C:\\\\windows\\\\system32> Publish-Module -Name ContosoServer -RequiredVersion 1.0 -Repository LocalRepo -NuGetApiKey Local-Repo-NuGet-ApiKey\nPS C:\\\\windows\\\\system32> Find-Module -Name ContosoServer -Repository LocalRepo\nVersion Name Repository Description\n------- ---- ---------- -----------\n1.0 ContosoServer LocalRepo ContosoServer module\nPS C:\\\\windows\\\\system32> Publish-Module -Name ContosoServer -RequiredVersion 1.5 -Repository LocalRepo -NuGetApiKey Local-Repo-NuGet-ApiKey\nPS C:\\\\windows\\\\system32> Find-Module -Name ContosoServer -Repository LocalRepo\nVersion Name Repository Description\n------- ---- ---------- -----------\n1.0 ContosoServer LocalRepo ContosoServer module\n1.5 ContosoServer LocalRepo ContosoServer module\nPS C:\\\\windows\\\\system32> Publish-Module -Path \"C:\\\\Program Files\\\\WindowsPowerShell\\\\Modules\\\\ContosoServer\\\\2.0\" -Repository LocalRepo -NuGetApiKey Local-Repo-NuGet-ApiKey\nPS C:\\\\windows\\\\system32> Find-Module -Name ContosoServer -Repository LocalRepo\nVersion Name Repository Description\n_------ ---- ---------- -----------\n1.0 ContosoServer LocalRepo ContosoServer module\n1.5 ContosoServer LocalRepo ContosoServer module\n2.0 ContosoServer LocalRepo ContosoServer module\n```\n\n## Publishing a module with dependencies\n\n### Create a module with dependencies and version range specified in RequiredModules property of its module manifest.\n\n**Note:**\n  - \\* is supported only in MaximumVersion and also it should be at the end of version string. \n  - \\* is replaced with 999999999 in the version object.\n\n```powershell\nPS C:\\windows\\system32> $requiredModules = @( @{ModuleName = 'RequiredModule1'; ModuleVersion = '0.1'; MaximumVersion = '1.9'; }, @{ModuleName = 'RequiredModule2'; MaximumVersion = '1.*'; })\n\nPS C:\\windows\\system32> cd C:\\MyModules\\ModuleWithDependencies\n\nPS C:\\MyModules\\ModuleWithDependencies> New-ModuleManifest -Path .\\ModuleWithDependencies.psd1 -ModuleVersion 1.0 -RequiredModules $requiredModules -Description 'ModuleWithDependencies demo module'\n```\n\n### Publish ModuleWithDependencies module with dependencies to the repository.\n\n```powershell\nPS C:\\MyModules\\ModuleWithDependencies> Publish-Module -Path C:\\MyModules\\ModuleWithDependencies -Repository LocalRepo\n```\n\n### Find ModuleWithDependencies module with its dependencies by specifying -IncludeDependencies\n\n```powershell\nPS C:\\MyModules\\ModuleWithDependencies> Find-Module -Name ModuleWithDependencies -Repository LocalRepo -IncludeDependencies\n\nVersion    Name                                Type       Repository           Description\n-------    ----                                ----       ----------           -----------\n1.0        ModuleWithDependencies              Module     localrepo            ModuleWithDependencies demo module\n1.5        RequiredModule1                     Module     localrepo            RequiredModule1 module\n1.5        RequiredModule2                     Module     localrepo            RequiredModule2 module\n```\n\n### Install the ModuleWithDependencies module with dependencies.\nNote that version ranges are honored during the dependency installation.\n\n```powershell\nPS C:\\windows\\system32> Get-InstalledModule\nPS C:\\windows\\system32>\nPS C:\\windows\\system32> Install-Module -Name ModuleWithDependencies -Repository LocalRepo\nPS C:\\windows\\system32>\nPS C:\\windows\\system32> Get-InstalledModule\n\nVersion    Name                                Type       Repository           Description\n-------    ----                                ----       ----------           -----------\n1.0        ModuleWithDependencies              Module     localrepo            ModuleWithDependencies demo module\n1.5        RequiredModule1                     Module     localrepo            RequiredModule1 module\n1.5        RequiredModule2                     Module     localrepo            RequiredModule2 module\n```\n\n### Contents of ModuleWithDependencies2 module manifest file\n\n```powershell\n@{\n# Version number of this module.\nModuleVersion = '2.0'\n# ID used to uniquely identify this module\nGUID = '0eae34da-99dd-4608-8d28-c614fe7b0841'\n# Author of this module\nAuthor = 'manikb'\n# Company or vendor of this module\nCompanyName = 'Unknown'\n# Copyright statement for this module\nCopyright = '(c) 2015 manikb. All rights reserved.'\n# Description of the functionality provided by this module\nDescription = 'ModuleWithDependencies2 module'\n# Modules that must be imported into the global environment prior to importing this module\nRequiredModules = @('RequiredModule1',\n@{ModuleName = 'RequiredModule2'; ModuleVersion = '2.0'; },\n@{ModuleName = 'RequiredModule3'; RequiredVersion = '2.5'; },\n@{ModuleName = 'RequiredModule4'; ModuleVersion = '1.1'; MaximumVersion = '2.0'; },\n@{ModuleName = 'RequiredModule5'; MaximumVersion = '1.5'; })\n# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess\nNestedModules = @('NestedRequiredModule1',\n@{ModuleName = 'NestedRequiredModule2'; ModuleVersion = '2.0'; },\n@{ModuleName = 'NestedRequiredModule3'; RequiredVersion = '2.5'; },\n@{ModuleName = 'NestedRequiredModule4'; ModuleVersion = '0.7'; MaximumVersion = '2.4'; },\n@{ModuleName = 'NestedRequiredModule5'; MaximumVersion = '1.6'; },'ModuleWithDependencies2.psm1')\n# Functions to export from this module\nFunctionsToExport = '\\*'\n# Cmdlets to export from this module\nCmdletsToExport = '\\*'\n# Variables to export from this module\nVariablesToExport = '\\*'\n# Aliases to export from this module\nAliasesToExport = '\\*'\n# Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.\nPrivateData = @{\n    PSData = @{\n      # Tags applied to this module. These help with module discovery in online galleries.\n      Tags = 'Tag1', 'Tag2', 'Tag-ModuleWithDependencies2-2.0'\n      # A URL to the license for this module.\n      LicenseUri = 'http://modulewithdependencies2.com/license'\n      # A URL to the main website for this project.\n      ProjectUri = 'http://modulewithdependencies2.com/'\n      # A URL to an icon representing this module.\n      IconUri = 'http://modulewithdependencies2.com/icon'\n      # ReleaseNotes of this module\n      ReleaseNotes = 'ModuleWithDependencies2 release notes'\n    } # End of PSData hashtable\n} # End of PrivateData hashtable\n}\n```\n\n\n### External dependencies\nSome module dependencies can be managed externally, in that case they should be added to the ExternalModuleDependencies entry in the PSData section of the module manifest.\n\nIf 'SnippetPx' is not available on the repository, below error will be thrown.\n```powershell\nPublish-PSArtifactUtility : PowerShellGet cannot resolve the module dependency 'SnippetPx' of the module 'TypePx' on the repository 'LocalRepo'. Verify that the dependent module 'SnippetPx' is available in the repository 'LocalRepo'. If this dependent 'SnippetPx' is managed externally, add it to the ExternalModuleDependencies entry in the PSData section of the module manifest.\n```\n"}