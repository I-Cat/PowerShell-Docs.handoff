{"nodes":[{"pos":[13,46],"content":"Running DSC with user credentials","needQuote":true,"nodes":[{"content":"Running DSC with user credentials","pos":[0,33]}]},{"pos":[80,94],"content":"powershell,DSC","needQuote":true,"nodes":[{"content":"powershell,DSC","pos":[0,14]}]},{"content":"Running DSC with user credentials","pos":[192,225]},{"content":"Applies To: Windows PowerShell 5.0","pos":[230,264]},{"content":"You can run a DSC resource under a specified set of credentials by using the automatic <bpt id=\"p1\">**</bpt>PsDscRunAsCredential<ept id=\"p1\">**</ept> property in the configuration.","pos":[266,408],"source":"You can run a DSC resource under a specified set of credentials by using the automatic **PsDscRunAsCredential** property in the configuration."},{"content":"By default, DSC runs each resource as the system account.","pos":[409,467],"source":" \nBy default, DSC runs each resource as the system account."},{"content":"There are times when running as a user is necessary, such as installing MSI packages in a specific user context, setting a user's registry keys, accessing a user's specific local directory, or accessing a network share.","pos":[468,688],"source":" \nThere are times when running as a user is necessary, such as installing MSI packages in a specific user context, setting a user's registry keys, accessing a user's specific local directory, or accessing a network share."},{"content":"Every DSC resource has a <bpt id=\"p1\">**</bpt>PsDscRunAsCredential<ept id=\"p1\">**</ept> property that can be set to any user credentials (a <bpt id=\"p2\">[</bpt>PSCredential<ept id=\"p2\">](https://msdn.microsoft.com/en-us/library/ms572524(v=VS.85).aspx)</ept> object).","pos":[690,880],"source":"Every DSC resource has a **PsDscRunAsCredential** property that can be set to any user credentials (a [PSCredential](https://msdn.microsoft.com/en-us/library/ms572524(v=VS.85).aspx) object)."},{"content":"The credential can be hard-coded as the value of the property in the configuration, or you can set the value to <bpt id=\"p1\">[</bpt>Get-Credential<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/hh849815.aspx)</ept>, which will prompt the user for a credential when the configuration is compiled (for information about compiling configurations, see <bpt id=\"p2\">[</bpt>Configurations<ept id=\"p2\">](configurations.md)</ept>.","pos":[881,1238],"source":"\nThe credential can be hard-coded as the value of the property in the configuration, or you can set the value to [Get-Credential](https://technet.microsoft.com/en-us/library/hh849815.aspx),\nwhich will prompt the user for a credential when the configuration is compiled (for information about compiling configurations, see [Configurations](configurations.md)."},{"pos":[1241,1324],"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> The <bpt id=\"p2\">**</bpt>PsDscRunAsCredential<ept id=\"p2\">**</ept> property is not available in PowerShell 4.0.","source":"**Note:** The **PsDscRunAsCredential** property is not available in PowerShell 4.0."},{"content":"In the following example, <bpt id=\"p1\">**</bpt>Get-Credential<ept id=\"p1\">**</ept> is used to prompt the user for credentials.","pos":[1326,1414],"source":"In the following example, **Get-Credential** is used to prompt the user for credentials."},{"content":"The <bpt id=\"p1\">[</bpt>Registry<ept id=\"p1\">](registryResource.md)</ept> resource is used to change the registry key that specifies the background color for the Windows command prompt window.","pos":[1415,1570],"source":" \nThe [Registry](registryResource.md) resource is used to change the registry key that specifies the background color\nfor the Windows command prompt window."},{"pos":[2559,2843],"content":"**Note:** This example assumes that you have a valid certificate at `C:\\publicKeys\\targetNode.cer`, and that the thumbprint of that certificate is the value shown.\nFor information about encrypting credentials in DSC configuration MOF files, see [Securing the MOF file](secureMOF.md).","leadings":["",">"],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> This example assumes that you have a valid certificate at <ph id=\"ph1\">`C:\\publicKeys\\targetNode.cer`</ph>, and that the thumbprint of that certificate is the value shown.","pos":[0,163],"source":"**Note:** This example assumes that you have a valid certificate at `C:\\publicKeys\\targetNode.cer`, and that the thumbprint of that certificate is the value shown."},{"content":"For information about encrypting credentials in DSC configuration MOF files, see <bpt id=\"p1\">[</bpt>Securing the MOF file<ept id=\"p1\">](secureMOF.md)</ept>.","pos":[164,283],"source":"For information about encrypting credentials in DSC configuration MOF files, see [Securing the MOF file](secureMOF.md)."}]}],"content":"---\ntitle:   Running DSC with user credentials \nms.date:  2016-05-16\nkeywords:  powershell,DSC\ndescription:  \nms.topic:  article\nauthor:  eslesar\nmanager:  dongill\nms.prod:  powershell\n---\n\n# Running DSC with user credentials \n\n> Applies To: Windows PowerShell 5.0\n\nYou can run a DSC resource under a specified set of credentials by using the automatic **PsDscRunAsCredential** property in the configuration. \nBy default, DSC runs each resource as the system account. \nThere are times when running as a user is necessary, such as installing MSI packages in a specific user context, setting a user's registry keys, accessing a user's specific local directory, or accessing a network share.\n\nEvery DSC resource has a **PsDscRunAsCredential** property that can be set to any user credentials (a [PSCredential](https://msdn.microsoft.com/en-us/library/ms572524(v=VS.85).aspx) object).\nThe credential can be hard-coded as the value of the property in the configuration, or you can set the value to [Get-Credential](https://technet.microsoft.com/en-us/library/hh849815.aspx),\nwhich will prompt the user for a credential when the configuration is compiled (for information about compiling configurations, see [Configurations](configurations.md).\n\n>**Note:** The **PsDscRunAsCredential** property is not available in PowerShell 4.0.\n\nIn the following example, **Get-Credential** is used to prompt the user for credentials. \nThe [Registry](registryResource.md) resource is used to change the registry key that specifies the background color\nfor the Windows command prompt window.\n\n```powershell\nConfiguration ChangeCmdBackGroundColor    \n{\n    Import-DscResource -ModuleName PSDesiredStateConfiguration\n\n    Node $AllNodes.NodeName\n    {\n        Registry CmdPath\n        {\n            Key                  = 'HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Command Processor'\n            ValueName            = 'DefaultColor'\n            ValueData            = '1F'\n            ValueType            = 'DWORD'\n            Ensure               = 'Present'\n            Force                = $true\n            Hex                  = $true\n            PsDscRunAsCredential = Get-Credential\n        }\n    }                   \n}\n\n$configData = @{\n    AllNodes = @(\n        @{\n            NodeName             = 'localhost';\n            PSDscAllowDomainUser = $true\n            CertificateFile      = 'C:\\publicKeys\\targetNode.cer'\n            Thumbprint           = '7ee7f09d-4be0-41aa-a47f-96b9e3bdec25'\n        }\n    )\n}\n\nChangeCmdBackGroundColor -ConfigurationData $configData\n```\n>**Note:** This example assumes that you have a valid certificate at `C:\\publicKeys\\targetNode.cer`, and that the thumbprint of that certificate is the value shown.\n>For information about encrypting credentials in DSC configuration MOF files, see [Securing the MOF file](secureMOF.md).\n\n"}