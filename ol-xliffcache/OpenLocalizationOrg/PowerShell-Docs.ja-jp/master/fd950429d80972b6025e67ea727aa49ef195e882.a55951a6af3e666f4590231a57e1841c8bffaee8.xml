{"nodes":[{"pos":[12,31],"content":"Using Tab Expansion","needQuote":true,"nodes":[{"content":"Using Tab Expansion","pos":[0,19]}]},{"pos":[64,81],"content":"powershell,cmdlet","needQuote":true,"nodes":[{"content":"powershell,cmdlet","pos":[0,17]}]},{"content":"Using Tab Expansion","pos":[229,248]},{"content":"Command-line shells often provide a way to complete the names of long files or commands automatically, speeding up command entry and providing hints.","pos":[249,398]},{"content":"Windows PowerShell allows you to fill in file names and cmdlet names by pressing the <bpt id=\"p1\">**</bpt>Tab<ept id=\"p1\">**</ept> key.","pos":[399,496],"source":" Windows PowerShell allows you to fill in file names and cmdlet names by pressing the **Tab** key."},{"pos":[500,719],"content":"[!NOTE]\nTab expansion is controlled by the internal function TabExpansion. Since this function can be modified or overridden, this discussion is a guide to the behavior of the default Windows PowerShell configuration.","leadings":["","> "],"nodes":[{"content":"Tab expansion is controlled by the internal function TabExpansion. Since this function can be modified or overridden, this discussion is a guide to the behavior of the default Windows PowerShell configuration.","pos":[8,217],"nodes":[{"content":"Tab expansion is controlled by the internal function TabExpansion.","pos":[0,66]},{"content":"Since this function can be modified or overridden, this discussion is a guide to the behavior of the default Windows PowerShell configuration.","pos":[67,209]}]}]},{"content":"To fill in a filename or path from the available choices automatically, type part of the name and press the <bpt id=\"p1\">**</bpt>Tab<ept id=\"p1\">**</ept> key.","pos":[721,841],"source":"To fill in a filename or path from the available choices automatically, type part of the name and press the **Tab** key."},{"content":"Windows PowerShell will automatically expand the name to the first match that it finds.","pos":[842,929]},{"content":"Pressing the <bpt id=\"p1\">**</bpt>Tab<ept id=\"p1\">**</ept> key repeatedly will cycle through all of the available choices.","pos":[930,1014],"source":" Pressing the **Tab** key repeatedly will cycle through all of the available choices."},{"content":"The tab expansion of cmdlet names is slightly different.","pos":[1016,1072]},{"content":"To use tab expansion on a cmdlet name, type the entire first part of the name (the verb) and the hyphen that follows it.","pos":[1073,1193]},{"content":"You can fill in more of the name for a partial match.","pos":[1194,1247]},{"content":"For example, if you type <bpt id=\"p1\">**</bpt>get-co<ept id=\"p1\">**</ept> and then press the <bpt id=\"p2\">**</bpt>Tab<ept id=\"p2\">**</ept> key, Windows PowerShell will automatically expand this to the <bpt id=\"p3\">**</bpt>Get-Command<ept id=\"p3\">**</ept> cmdlet (notice that it also changes the case of letters to their standard form).","pos":[1248,1469],"source":" For example, if you type **get-co** and then press the **Tab** key, Windows PowerShell will automatically expand this to the **Get-Command** cmdlet (notice that it also changes the case of letters to their standard form)."},{"content":"If you press <bpt id=\"p1\">**</bpt>Tab<ept id=\"p1\">**</ept> key again, Windows PowerShell replaces this with the only other matching cmdlet name, <bpt id=\"p2\">**</bpt>Get-Content<ept id=\"p2\">**</ept>.","pos":[1470,1593],"source":" If you press **Tab** key again, Windows PowerShell replaces this with the only other matching cmdlet name, **Get-Content**."},{"content":"You can use tab expansion repeatedly on the same line.","pos":[1595,1649]},{"content":"For example, you can use tab expansion on the name of the <bpt id=\"p1\">**</bpt>Get-Content<ept id=\"p1\">**</ept> cmdlet by entering:","pos":[1650,1743],"source":" For example, you can use tab expansion on the name of the **Get-Content** cmdlet by entering:"},{"pos":[1771,1826],"content":"When you press the <bpt id=\"p1\">**</bpt>Tab<ept id=\"p1\">**</ept> key, the command expands to:","source":"When you press the **Tab** key, the command expands to:"},{"content":"You can then partially specify the path to the Active Setup log file and use tab expansion again:","pos":[1853,1950]},{"pos":[1998,2053],"content":"When you press the <bpt id=\"p1\">**</bpt>Tab<ept id=\"p1\">**</ept> key, the command expands to:","source":"When you press the **Tab** key, the command expands to:"},{"pos":[2106,2448],"content":"[!NOTE]\nOne limitation of the tab expansion process is that tabs are always interpreted as attempts to complete a word. If you copy and paste command examples into a Windows PowerShell console, make sure that the sample does not contain tabs; if it does, the results will be unpredictable and will almost certainly not be what you intended.","leadings":["","> "],"nodes":[{"content":"One limitation of the tab expansion process is that tabs are always interpreted as attempts to complete a word. If you copy and paste command examples into a Windows PowerShell console, make sure that the sample does not contain tabs; if it does, the results will be unpredictable and will almost certainly not be what you intended.","pos":[8,340],"nodes":[{"content":"One limitation of the tab expansion process is that tabs are always interpreted as attempts to complete a word.","pos":[0,111]},{"content":"If you copy and paste command examples into a Windows PowerShell console, make sure that the sample does not contain tabs; if it does, the results will be unpredictable and will almost certainly not be what you intended.","pos":[112,332]}]}]}],"content":"---\ntitle:  Using Tab Expansion\nms.date:  2016-05-11\nkeywords:  powershell,cmdlet\ndescription:  \nms.topic:  article\nauthor:  jpjofre\nmanager:  dongill\nms.prod:  powershell\nms.assetid:  c8730471-bf6a-43b8-ab1d-f9ef5a74f04e\n---\n\n# Using Tab Expansion\nCommand-line shells often provide a way to complete the names of long files or commands automatically, speeding up command entry and providing hints. Windows PowerShell allows you to fill in file names and cmdlet names by pressing the **Tab** key.\n\n> [!NOTE]\n> Tab expansion is controlled by the internal function TabExpansion. Since this function can be modified or overridden, this discussion is a guide to the behavior of the default Windows PowerShell configuration.\n\nTo fill in a filename or path from the available choices automatically, type part of the name and press the **Tab** key. Windows PowerShell will automatically expand the name to the first match that it finds. Pressing the **Tab** key repeatedly will cycle through all of the available choices.\n\nThe tab expansion of cmdlet names is slightly different. To use tab expansion on a cmdlet name, type the entire first part of the name (the verb) and the hyphen that follows it. You can fill in more of the name for a partial match. For example, if you type **get-co** and then press the **Tab** key, Windows PowerShell will automatically expand this to the **Get-Command** cmdlet (notice that it also changes the case of letters to their standard form). If you press **Tab** key again, Windows PowerShell replaces this with the only other matching cmdlet name, **Get-Content**.\n\nYou can use tab expansion repeatedly on the same line. For example, you can use tab expansion on the name of the **Get-Content** cmdlet by entering:\n\n```\nPS> Get-Con<Tab>\n```\n\nWhen you press the **Tab** key, the command expands to:\n\n```\nPS> Get-Content\n```\n\nYou can then partially specify the path to the Active Setup log file and use tab expansion again:\n\n```\nPS> Get-Content c:\\windows\\acts<Tab>\n```\n\nWhen you press the **Tab** key, the command expands to:\n\n```\nPS> Get-Content C:\\windows\\actsetup.log\n```\n\n> [!NOTE]\n> One limitation of the tab expansion process is that tabs are always interpreted as attempts to complete a word. If you copy and paste command examples into a Windows PowerShell console, make sure that the sample does not contain tabs; if it does, the results will be unpredictable and will almost certainly not be what you intended.\n\n"}