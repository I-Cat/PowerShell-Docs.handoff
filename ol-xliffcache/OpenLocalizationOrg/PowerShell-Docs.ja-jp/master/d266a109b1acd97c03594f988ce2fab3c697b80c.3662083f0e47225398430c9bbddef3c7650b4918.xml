{"nodes":[{"pos":[12,46],"content":"Managing Windows PowerShell Drives","needQuote":true,"nodes":[{"content":"Managing Windows PowerShell Drives","pos":[0,34]}]},{"pos":[79,96],"content":"powershell,cmdlet","needQuote":true,"nodes":[{"content":"powershell,cmdlet","pos":[0,17]}]},{"content":"Managing Windows PowerShell Drives","pos":[244,278]},{"content":"A <bpt id=\"p1\">*</bpt>Windows PowerShell drive<ept id=\"p1\">*</ept> is a data store location that you can access like a file system drive in Windows PowerShell.","pos":[279,400],"source":"A *Windows PowerShell drive* is a data store location that you can access like a file system drive in Windows PowerShell."},{"content":"The Windows PowerShell providers create some drives for you, such as the file system drives (including C: and D:), the registry drives (HKCU: and HKLM:), and the certificate drive (Cert:), and you can create your own Windows PowerShell drives.","pos":[401,644]},{"content":"These drives are very useful, but they are available only within Windows PowerShell.","pos":[645,729]},{"content":"You cannot access them by using other Windows tools, such as File Explorer or Cmd.exe.","pos":[730,816]},{"content":"Windows PowerShell uses the noun, <bpt id=\"p1\">**</bpt>PSDrive<ept id=\"p1\">**</ept>, for commands that work with Windows PowerShell drives.","pos":[818,919],"source":"Windows PowerShell uses the noun, **PSDrive**, for commands that work with Windows PowerShell drives."},{"content":"For a list of the Windows PowerShell drives in your Windows PowerShell session, use the <bpt id=\"p1\">**</bpt>Get-PSDrive<ept id=\"p1\">**</ept> cmdlet.","pos":[920,1031],"source":" For a list of the Windows PowerShell drives in your Windows PowerShell session, use the **Get-PSDrive** cmdlet."},{"pos":[1551,1710],"content":"Although the drives in the display vary with the drives on your system, the listing will look similar to the output of the <bpt id=\"p1\">**</bpt>Get-PSDrive<ept id=\"p1\">**</ept> command shown above.","source":"Although the drives in the display vary with the drives on your system, the listing will look similar to the output of the **Get-PSDrive** command shown above."},{"content":"File system drives are a subset of the Windows PowerShell drives.","pos":[1712,1777]},{"content":"You can identify the file system drives by the FileSystem entry in the Provider column.","pos":[1778,1865]},{"content":"(The file system drives in Windows PowerShell are supported by the Windows PowerShell FileSystem provider.)","pos":[1866,1973]},{"pos":[1975,2085],"content":"To see the syntax of the <bpt id=\"p1\">**</bpt>Get-PSDrive<ept id=\"p1\">**</ept> cmdlet, type a <bpt id=\"p2\">**</bpt>Get-Command<ept id=\"p2\">**</ept> command with the <bpt id=\"p3\">**</bpt>Syntax<ept id=\"p3\">**</ept> parameter:","source":"To see the syntax of the **Get-PSDrive** cmdlet, type a **Get-Command** command with the **Syntax** parameter:"},{"content":"The <bpt id=\"p1\">**</bpt>PSProvider<ept id=\"p1\">**</ept> parameter lets you display only the Windows PowerShell drives that are supported by a particular provider.","pos":[2341,2466],"source":"The **PSProvider** parameter lets you display only the Windows PowerShell drives that are supported by a particular provider."},{"content":"For example, to display only the Windows PowerShell drives that are supported by the Windows PowerShell FileSystem provider, type a <bpt id=\"p1\">**</bpt>Get-PSDrive<ept id=\"p1\">**</ept> command with the <bpt id=\"p2\">**</bpt>PSProvider<ept id=\"p2\">**</ept> parameter and the <bpt id=\"p3\">**</bpt>FileSystem<ept id=\"p3\">**</ept> value:","pos":[2467,2686],"source":" For example, to display only the Windows PowerShell drives that are supported by the Windows PowerShell FileSystem provider, type a **Get-PSDrive** command with the **PSProvider** parameter and the **FileSystem** value:"},{"pos":[3035,3246],"content":"To view the Windows PowerShell drives that represent registry hives, use the <bpt id=\"p1\">**</bpt>PSProvider<ept id=\"p1\">**</ept> parameter to display only the Windows PowerShell drives that are supported by the Windows PowerShell Registry provider:","source":"To view the Windows PowerShell drives that represent registry hives, use the **PSProvider** parameter to display only the Windows PowerShell drives that are supported by the Windows PowerShell Registry provider:"},{"content":"PS&gt; Get-PSDrive -PSProvider Registry Name       Provider      Root                                   CurrentLocation ----       --------      ----                                   --------------- HKCU       Registry      HKEY_CURRENT_USER HKLM       Registry      HKEY_LOCAL_MACHINE","pos":[3253,3536],"source":"PS> Get-PSDrive -PSProvider Registry\nName       Provider      Root                                   CurrentLocation\n----       --------      ----                                   ---------------\nHKCU       Registry      HKEY_CURRENT_USER\nHKLM       Registry      HKEY_LOCAL_MACHINE"},{"content":"You can also use the standard Location cmdlets with the Windows PowerShell drives:","pos":[3544,3626]},{"content":"PS&gt; Set-Location HKLM:\\SOFTWARE PS&gt; Push-Location .\\Microsoft PS&gt; Get-Location Path ---- HKLM:\\SOFTWARE\\Microsoft","pos":[3633,3746],"source":"PS> Set-Location HKLM:\\SOFTWARE\nPS> Push-Location .\\Microsoft\nPS> Get-Location\nPath\n----\nHKLM:\\SOFTWARE\\Microsoft"},{"content":"Adding New Windows PowerShell Drives (New-PSDrive)","pos":[3758,3808]},{"content":"You can add your own Windows PowerShell drives by using the <bpt id=\"p1\">**</bpt>New-PSDrive<ept id=\"p1\">**</ept> command.","pos":[3809,3893],"source":"You can add your own Windows PowerShell drives by using the **New-PSDrive** command."},{"content":"To get the syntax for the <bpt id=\"p1\">**</bpt>New-PSDrive<ept id=\"p1\">**</ept> command, enter the <bpt id=\"p2\">**</bpt>Get-Command<ept id=\"p2\">**</ept> command with the <bpt id=\"p3\">**</bpt>Syntax<ept id=\"p3\">**</ept> parameter:","pos":[3894,4009],"source":" To get the syntax for the **New-PSDrive** command, enter the **Get-Command** command with the **Syntax** parameter:"},{"content":"To create a new Windows PowerShell drive, you must supply three parameters:","pos":[4351,4426]},{"content":"A name for the drive (you can use any valid Windows PowerShell name)","pos":[4432,4500]},{"content":"The PSProvider (use \"FileSystem\" for file system locations and \"Registry\" for registry locations)","pos":[4506,4603]},{"content":"The root, that is, the path to the root of the new drive","pos":[4609,4665]},{"content":"For example, you can create a drive named \"Office\" that is mapped to the folder that contains the Microsoft Office applications on your computer, such as <bpt id=\"p1\">**</bpt>C:\\\\Program Files\\\\Microsoft Office\\\\OFFICE11<ept id=\"p1\">**</ept>.","pos":[4667,4871],"source":"For example, you can create a drive named \"Office\" that is mapped to the folder that contains the Microsoft Office applications on your computer, such as **C:\\\\Program Files\\\\Microsoft Office\\\\OFFICE11**."},{"content":"To create the drive, type the following command:","pos":[4872,4920]},{"pos":[5259,5310],"content":"[!NOTE]\nIn general, paths are not case-sensitive.","leadings":["","> "],"nodes":[{"content":"In general, paths are not case-sensitive.","pos":[8,49]}]},{"pos":[5312,5441],"content":"You refer to the new Windows PowerShell drive as you do all Windows PowerShell drives -- by its name followed by a colon (<bpt id=\"p1\">**</bpt>:<ept id=\"p1\">**</ept>).","source":"You refer to the new Windows PowerShell drive as you do all Windows PowerShell drives -- by its name followed by a colon (**:**)."},{"content":"A Windows PowerShell drive can make many tasks much simpler.","pos":[5443,5503]},{"content":"For example, some of the most important keys in the Windows registry have extremely long paths, making them cumbersome to access and difficult to remember.","pos":[5504,5659]},{"content":"Critical configuration information resides under <bpt id=\"p1\">**</bpt>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion<ept id=\"p1\">**</ept>.","pos":[5660,5778],"source":" Critical configuration information resides under **HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion**."},{"content":"To view and change items in the CurrentVersion registry key, you can create a Windows PowerShell drive that is rooted in that key by typing:","pos":[5779,5919]},{"content":"PS&gt; New-PSDrive -Name cvkey -PSProvider Registry -Root HKLM\\Software\\Microsoft\\W indows\\CurrentVersion Name       Provider      Root                                   CurrentLocation ----       --------      ----                                   --------------- cvkey      Registry      HKLM\\Software\\Microsoft\\Windows\\...","pos":[5926,6249],"source":"PS> New-PSDrive -Name cvkey -PSProvider Registry -Root HKLM\\Software\\Microsoft\\W\nindows\\CurrentVersion\nName       Provider      Root                                   CurrentLocation\n----       --------      ----                                   ---------------\ncvkey      Registry      HKLM\\Software\\Microsoft\\Windows\\..."},{"pos":[6257,6341],"content":"You can then change location to the <bpt id=\"p1\">**</bpt>cvkey:<ept id=\"p1\">**</ept> drive as you would any other drive:``","source":"You can then change location to the **cvkey:** drive as you would any other drive:``"},{"content":"or:","pos":[6360,6363]},{"content":"PS&gt; Set-Location cvkey: -PassThru Path ---- cvkey:\\","pos":[6370,6421],"source":"PS> Set-Location cvkey: -PassThru\nPath\n----\ncvkey:\\"},{"content":"The New-PsDrive cmdlet adds the new drive only to the current Windows PowerShell session.","pos":[6429,6518]},{"content":"If you close the Windows PowerShell window, the new drive is lost.","pos":[6519,6585]},{"content":"To save a Windows PowerShell drive, use the Export-Console cmdlet to export the current Windows PowerShell session, and then use the PowerShell.exe <bpt id=\"p1\">**</bpt>PSConsoleFile<ept id=\"p1\">**</ept> parameter to import it.","pos":[6586,6775],"source":" To save a Windows PowerShell drive, use the Export-Console cmdlet to export the current Windows PowerShell session, and then use the PowerShell.exe **PSConsoleFile** parameter to import it."},{"content":"Or, add the new drive to your Windows PowerShell profile.","pos":[6776,6833]},{"content":"Deleting Windows PowerShell Drives (Remove-PSDrive)","pos":[6839,6890]},{"content":"You can delete drives from Windows PowerShell by using the <bpt id=\"p1\">**</bpt>Remove-PSDrive<ept id=\"p1\">**</ept> cmdlet.","pos":[6891,6976],"source":"You can delete drives from Windows PowerShell by using the **Remove-PSDrive** cmdlet."},{"content":"The <bpt id=\"p1\">**</bpt>Remove-PSDrive<ept id=\"p1\">**</ept> cmdlet is easy to use; to delete a specific Windows PowerShell drive, you just supply the Windows PowerShell drive name.","pos":[6977,7120],"source":" The **Remove-PSDrive** cmdlet is easy to use; to delete a specific Windows PowerShell drive, you just supply the Windows PowerShell drive name."},{"pos":[7122,7257],"content":"For example, if you added the <bpt id=\"p1\">**</bpt>Office:<ept id=\"p1\">**</ept> Windows PowerShell drive, as shown in the <bpt id=\"p2\">**</bpt>New-PSDrive<ept id=\"p2\">**</ept> topic, you can delete it by typing:","source":"For example, if you added the **Office:** Windows PowerShell drive, as shown in the **New-PSDrive** topic, you can delete it by typing:"},{"pos":[7300,7418],"content":"To delete the <bpt id=\"p1\">**</bpt>cvkey:<ept id=\"p1\">**</ept> Windows PowerShell drive, also shown in the <bpt id=\"p2\">**</bpt>New-PSDrive<ept id=\"p2\">**</ept> topic, use the following command:","source":"To delete the **cvkey:** Windows PowerShell drive, also shown in the **New-PSDrive** topic, use the following command:"},{"content":"It's easy to delete a Windows PowerShell drive, but you can't delete it while you are in the drive.","pos":[7460,7559]},{"content":"For example:","pos":[7560,7572]},{"content":"Adding and Removing Drives Outside Windows PowerShell","pos":[7765,7818]},{"pos":[7819,8160],"content":"Windows PowerShell detects file system drives that are added or removed in Windows, including network drives that are mapped, USB drives that are attached, and drives that are deleted by using either the <bpt id=\"p1\">**</bpt>net use<ept id=\"p1\">**</ept> command or the <bpt id=\"p2\">**</bpt>WScript.NetworkMapNetworkDrive<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>RemoveNetworkDrive<ept id=\"p3\">**</ept> methods from a Windows Script Host (WSH) script.","source":"Windows PowerShell detects file system drives that are added or removed in Windows, including network drives that are mapped, USB drives that are attached, and drives that are deleted by using either the **net use** command or the **WScript.NetworkMapNetworkDrive** and **RemoveNetworkDrive** methods from a Windows Script Host (WSH) script."}],"content":"---\ntitle:  Managing Windows PowerShell Drives\nms.date:  2016-05-11\nkeywords:  powershell,cmdlet\ndescription:  \nms.topic:  article\nauthor:  jpjofre\nmanager:  dongill\nms.prod:  powershell\nms.assetid:  bd809e38-8de9-437a-a250-f30a667d11b4\n---\n\n# Managing Windows PowerShell Drives\nA *Windows PowerShell drive* is a data store location that you can access like a file system drive in Windows PowerShell. The Windows PowerShell providers create some drives for you, such as the file system drives (including C: and D:), the registry drives (HKCU: and HKLM:), and the certificate drive (Cert:), and you can create your own Windows PowerShell drives. These drives are very useful, but they are available only within Windows PowerShell. You cannot access them by using other Windows tools, such as File Explorer or Cmd.exe.\n\nWindows PowerShell uses the noun, **PSDrive**, for commands that work with Windows PowerShell drives. For a list of the Windows PowerShell drives in your Windows PowerShell session, use the **Get-PSDrive** cmdlet.\n\n```\nPS> Get-PSDrive\n\nName       Provider      Root                                   CurrentLocation\n----       --------      ----                                   ---------------\nA          FileSystem    A:\\\nAlias      Alias\nC          FileSystem    C:\\                                 ...And Settings\\me\ncert       Certificate   \\\nD          FileSystem    D:\\\nEnv        Environment\nFunction   Function\nHKCU       Registry      HKEY_CURRENT_USER\nHKLM       Registry      HKEY_LOCAL_MACHINE\nVariable   Variable\n```\n\nAlthough the drives in the display vary with the drives on your system, the listing will look similar to the output of the **Get-PSDrive** command shown above.\n\nFile system drives are a subset of the Windows PowerShell drives. You can identify the file system drives by the FileSystem entry in the Provider column. (The file system drives in Windows PowerShell are supported by the Windows PowerShell FileSystem provider.)\n\nTo see the syntax of the **Get-PSDrive** cmdlet, type a **Get-Command** command with the **Syntax** parameter:\n\n```\nPS> Get-Command -Name Get-PSDrive -Syntax\nGet-PSDrive [[-Name] <String[]>] [-Scope <String>] [-PSProvider <String[]>] [-V\nerbose] [-Debug] [-ErrorAction <ActionPreference>] [-ErrorVariable <String>] [-\nOutVariable <String>] [-OutBuffer <Int32>]\n```\n\nThe **PSProvider** parameter lets you display only the Windows PowerShell drives that are supported by a particular provider. For example, to display only the Windows PowerShell drives that are supported by the Windows PowerShell FileSystem provider, type a **Get-PSDrive** command with the **PSProvider** parameter and the **FileSystem** value:\n\n```\nPS> Get-PSDrive -PSProvider FileSystem\n\nName       Provider      Root                                   CurrentLocation\n----       --------      ----                                   ---------------\nA          FileSystem    A:\\\nC          FileSystem    C:\\                           ...nd Settings\\PowerUser\nD          FileSystem    D:\\\n```\n\nTo view the Windows PowerShell drives that represent registry hives, use the **PSProvider** parameter to display only the Windows PowerShell drives that are supported by the Windows PowerShell Registry provider:\n\n<pre>PS> Get-PSDrive -PSProvider Registry\nName       Provider      Root                                   CurrentLocation\n----       --------      ----                                   ---------------\nHKCU       Registry      HKEY_CURRENT_USER\nHKLM       Registry      HKEY_LOCAL_MACHINE</pre>\n\nYou can also use the standard Location cmdlets with the Windows PowerShell drives:\n\n<pre>PS> Set-Location HKLM:\\SOFTWARE\nPS> Push-Location .\\Microsoft\nPS> Get-Location\nPath\n----\nHKLM:\\SOFTWARE\\Microsoft</pre>\n\n### Adding New Windows PowerShell Drives (New-PSDrive)\nYou can add your own Windows PowerShell drives by using the **New-PSDrive** command. To get the syntax for the **New-PSDrive** command, enter the **Get-Command** command with the **Syntax** parameter:\n\n```\nPS> Get-Command -Name New-PSDrive -Syntax\nNew-PSDrive [-Name] <String> [-PSProvider] <String> [-Root] <String> [-Descript\nion <String>] [-Scope <String>] [-Credential <PSCredential>] [-Verbose] [-Debug\n] [-ErrorAction <ActionPreference>] [-ErrorVariable <String>] [-OutVariable <St\nring>] [-OutBuffer <Int32>] [-WhatIf] [-Confirm]\n```\n\nTo create a new Windows PowerShell drive, you must supply three parameters:\n\n-   A name for the drive (you can use any valid Windows PowerShell name)\n\n-   The PSProvider (use \"FileSystem\" for file system locations and \"Registry\" for registry locations)\n\n-   The root, that is, the path to the root of the new drive\n\nFor example, you can create a drive named \"Office\" that is mapped to the folder that contains the Microsoft Office applications on your computer, such as **C:\\\\Program Files\\\\Microsoft Office\\\\OFFICE11**. To create the drive, type the following command:\n\n```\nPS> New-PSDrive -Name Office -PSProvider FileSystem -Root \"C:\\Program Files\\Micr\nosoft Office\\OFFICE11\"\n\nName       Provider      Root                                   CurrentLocation\n----       --------      ----                                   ---------------\nOffice     FileSystem    C:\\Program Files\\Microsoft Offic...\n```\n\n> [!NOTE]\n> In general, paths are not case-sensitive.\n\nYou refer to the new Windows PowerShell drive as you do all Windows PowerShell drives -- by its name followed by a colon (**:**).\n\nA Windows PowerShell drive can make many tasks much simpler. For example, some of the most important keys in the Windows registry have extremely long paths, making them cumbersome to access and difficult to remember. Critical configuration information resides under **HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion**. To view and change items in the CurrentVersion registry key, you can create a Windows PowerShell drive that is rooted in that key by typing:\n\n<pre>PS> New-PSDrive -Name cvkey -PSProvider Registry -Root HKLM\\Software\\Microsoft\\W\nindows\\CurrentVersion\nName       Provider      Root                                   CurrentLocation\n----       --------      ----                                   ---------------\ncvkey      Registry      HKLM\\Software\\Microsoft\\Windows\\...</pre>\n\nYou can then change location to the **cvkey:** drive as you would any other drive:``\n\n`PS> cd cvkey:`\n\nor:\n\n<pre>PS> Set-Location cvkey: -PassThru\nPath\n----\ncvkey:\\</pre>\n\nThe New-PsDrive cmdlet adds the new drive only to the current Windows PowerShell session. If you close the Windows PowerShell window, the new drive is lost. To save a Windows PowerShell drive, use the Export-Console cmdlet to export the current Windows PowerShell session, and then use the PowerShell.exe **PSConsoleFile** parameter to import it. Or, add the new drive to your Windows PowerShell profile.\n\n### Deleting Windows PowerShell Drives (Remove-PSDrive)\nYou can delete drives from Windows PowerShell by using the **Remove-PSDrive** cmdlet. The **Remove-PSDrive** cmdlet is easy to use; to delete a specific Windows PowerShell drive, you just supply the Windows PowerShell drive name.\n\nFor example, if you added the **Office:** Windows PowerShell drive, as shown in the **New-PSDrive** topic, you can delete it by typing:\n\n```\nPS> Remove-PSDrive -Name Office\n```\n\nTo delete the **cvkey:** Windows PowerShell drive, also shown in the **New-PSDrive** topic, use the following command:\n\n```\nPS> Remove-PSDrive -Name cvkey\n```\n\nIt's easy to delete a Windows PowerShell drive, but you can't delete it while you are in the drive. For example:\n\n```\nPS> cd office:\nPS Office:\\> remove-psdrive -name office\nRemove-PSDrive : Cannot remove drive 'Office' because it is in use.\nAt line:1 char:15\n+ remove-psdrive  <<<< -name office\n```\n\n### Adding and Removing Drives Outside Windows PowerShell\nWindows PowerShell detects file system drives that are added or removed in Windows, including network drives that are mapped, USB drives that are attached, and drives that are deleted by using either the **net use** command or the **WScript.NetworkMapNetworkDrive** and **RemoveNetworkDrive** methods from a Windows Script Host (WSH) script.\n\n"}