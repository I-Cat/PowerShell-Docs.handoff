{"nodes":[{"content":"Register-PSRepository","pos":[2,23]},{"content":"Gets the registered repositories on a computer.","pos":[25,72]},{"content":"Description","pos":[77,88]},{"content":"The Register-PSRepository cmdlet registers the online repository for PowerShell modules.","pos":[90,178]},{"content":"After a repository is registered, you can reference it from the Find-Module, Install-Module, and Publish-Module cmdlets.","pos":[179,299]},{"content":"The registered repository becomes the default repository in Find-Module and Install-Module.","pos":[300,391]},{"content":"Registered repositories are user-specific.","pos":[394,436]},{"content":"They are not registered in a system-wide context.","pos":[437,486]},{"content":"Cmdlet syntax","pos":[492,505]},{"content":"Cmdlet online help reference","pos":[598,626]},{"pos":[628,698],"content":"<bpt id=\"p1\">[</bpt>Register-PSRepository<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=517129)</ept>","source":"[Register-PSRepository](http://go.microsoft.com/fwlink/?LinkID=517129)"},{"content":"Example commands","pos":[703,719]},{"content":"Register a PowerShell Repository","pos":[725,757]},{"content":"You can configure PowerShellGet to work against internal repositories.","pos":[758,828]},{"content":"After a repository is registered, you can use Find-Module and Install-Module to work with it.","pos":[829,923],"source":" \nAfter a repository is registered, you can use Find-Module and Install-Module to work with it."},{"content":"Register-PSRepository and Set-PSRepository cmdlets with script sharing support","pos":[2320,2398]},{"pos":[2400,2519],"content":"Use Register-PSRepository cmdlet to add the <bpt id=\"p1\">**</bpt>ScriptSourceLocation<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>ScriptPublishLocation<ept id=\"p2\">**</ept> to the PSRepository.","source":"Use Register-PSRepository cmdlet to add the **ScriptSourceLocation** and **ScriptPublishLocation** to the PSRepository."}],"content":"# Register-PSRepository\n\nGets the registered repositories on a computer.\n\n## Description\n\nThe Register-PSRepository cmdlet registers the online repository for PowerShell modules. After a repository is registered, you can reference it from the Find-Module, Install-Module, and Publish-Module cmdlets. The registered repository becomes the default repository in Find-Module and Install-Module. \n\nRegistered repositories are user-specific. They are not registered in a system-wide context.\n\n\n## Cmdlet syntax\n\n```powershell\nGet-Command -Name Register-PSRepository -Module PowerShellGet -Syntax\n```\n## Cmdlet online help reference\n\n[Register-PSRepository](http://go.microsoft.com/fwlink/?LinkID=517129)\n\n## Example commands\n\n### Register a PowerShell Repository\nYou can configure PowerShellGet to work against internal repositories. \nAfter a repository is registered, you can use Find-Module and Install-Module to work with it.\n\n```powershell\n# Register a default repository\nRegister-PSRepository –Name DemoRepo –SourceLocation \"https://www.myget.org/F/powershellgetdemo/api/v2\" –InstallationPolicy –Trusted\n\n# Get all of the registered repositories\nName                      InstallationPolicy   SourceLocation\n----                      ------------------   --------------\nPSGallery                 Untrusted            https://www.powershellgallery.com/api/v2/\nDemoRepo                  Trusted              https://www.myget.org/F/powershellgetdemo/api/v2\n\n\n# Search only the new repository for modules\nFind-Module -Repository DemoRepo\n\nVersion    Name                                Repository           Description\n-------    ----                                ----------           -----------\n2.12.0.0   xActiveDirectory                    DemoRepo             The xActiveDirectory module is originally part of the Windows PowerShell Desired State Configuration (DSC) Resource Kit. This version has been modified for use in Azure. This module contains the xADD...\n1.1.1      SomeModule                          DemoRepo             Module description.\n\n# By default, PowerShellGet operates against all registered repositories when none is specified. In this example, the “SomeModule” module is installed from the DemoRepo.\nInstall-Module SomeModule\n\n# Removing a repository\nUnregister-PSRepository DemoRepo\n```\n\n\n### Register-PSRepository and Set-PSRepository cmdlets with script sharing support\n\nUse Register-PSRepository cmdlet to add the **ScriptSourceLocation** and **ScriptPublishLocation** to the PSRepository.\n\n```powershell\n\n# Register an GalleryINT repository with Scripts and Modules support\n\nRegister-PSRepository -Name GalleryINT `\n                      -SourceLocation https://customgallery.cloudapp.net `\n                      -InstallationPolicy Trusted `\n                      -Verbose\n\nNuGet provider is required to continue\nPowerShellGet requires NuGet provider version '2.8.5.201' or newer to interact with NuGet-based repositories. The NuGet provider must be available in 'C:\\Program\nFiles\\PackageManagement\\ProviderAssemblies' or 'C:\\Users\\manikb\\AppData\\Local\\PackageManagement\\ProviderAssemblies'. You can also install the NuGet provider by running\n'Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force'. Do you want PowerShellGet to install and import the NuGet provider now?\n[Y] Yes [N] No [S] Suspend [?] Help (default is \"Y\"): Y\nVERBOSE: Installing NuGet provider.\nVERBOSE: The specified assembly 'C:\\Program Files\\PackageManagement\\ProviderAssemblies\\nuget-anycpu.exe' is installed at top level directory. However it is recommended that the assemblies\nshould be installed under its ProviderName\\Version folder.\nVERBOSE: Installing the package 'https://oneget.org/nuget-2.8.5.201.package.swidtag'.\nVERBOSE: Installed the package 'nuget' to 'C:\\Program Files\\PackageManagement\\ProviderAssemblies\\nuget\\2.8.5.201\\Microsoft.PackageManagement.NuGetProvider.dll'.\nVERBOSE: The provider 'NuGet' has already been imported. Trying to import it again.\nVERBOSE: Importing package provider 'NuGet'.\nVERBOSE: Performing the operation \"Register Module Repository\" on target \"Module Repository 'GalleryINT' (https://customgallery.cloudapp.net/) in provider 'PowerShellGet'\".\nVERBOSE: User did not specify the PackageManagement provider name, trying with the provider name 'NuGet'.\nVERBOSE: Successfully registered the repository 'GalleryINT' with source location 'https://customgallery.cloudapp.net/api/v2/'.\nVERBOSE: Repository details, Name = 'GalleryINT', Location = 'https://customgallery.cloudapp.net/api/v2/'; IsTrusted = 'True'; IsRegistered = 'True'.\n\n# Get the registered repository details\nGet-PSRepository -Name GalleryINT\n\nName                      InstallationPolicy   SourceLocation\n----                      ------------------   --------------\nGalleryINT                 Trusted              https://customgallery.cloudapp.net/api/v2/\n\n\nGet-PSRepository -Name GalleryINT | Format-List * -Force\n\nName : GalleryINT\nSourceLocation : https://customgallery.cloudapp.net/api/v2/\nTrusted : True\nRegistered : True\nInstallationPolicy : Trusted\nPackageManagementProvider : NuGet\nPublishLocation : https://customgallery.cloudapp.net/api/v2/package/\nScriptSourceLocation : https://customgallery.cloudapp.net/api/v2/items/psscript/\nScriptPublishLocation : https://customgallery.cloudapp.net/api/v2/package/\nProviderOptions : {}\n\n```\n"}