{"nodes":[{"content":"id:{33C83E13-F3E5-17B4-6512-207F3D3C5AB6}","pos":[0,41]},{"content":"title:Introduction to Mobile Development","pos":[44,84]},{"content":"pdftype:none","pos":[87,99]},{"content":"article:<bpt id=\"p1\">[</bpt>Hello, iOS<ept id=\"p1\">](/guides/ios/getting_started/hello,_world)</ept>","pos":[102,164],"source":"article:[Hello, iOS](/guides/ios/getting_started/hello,_world)"},{"content":"article:<bpt id=\"p1\">[</bpt>Hello, Android<ept id=\"p1\">](/guides/android/getting_started/hello,_world)</ept>","pos":[167,237],"source":"article:[Hello, Android](/guides/android/getting_started/hello,_world)"},{"content":"xamu: <bpt id=\"p1\">[</bpt>Xamarin University<ept id=\"p1\">](https://university.xamarin.com/)</ept>","pos":[240,299],"source":"xamu: [Xamarin University](https://university.xamarin.com/)"},{"content":"sample: <bpt id=\"p1\">[</bpt>Samples<ept id=\"p1\">](/samples-all/)</ept>","pos":[302,334],"source":"sample: [Samples](/samples-all/)"},{"content":"vide: <bpt id=\"p1\">[</bpt>Videos<ept id=\"p1\">](/videos/)</ept>","pos":[337,361],"source":"vide: [Videos](/videos/)"},{"content":"Building mobile applications can be as easy as opening up your IDE, throwing something together, doing a quick bit of testing, and submitting to an App Store – all done in an afternoon.","pos":[388,573],"source":"Building mobile applications can be as easy as opening up your IDE, throwing\nsomething together, doing a quick bit of testing, and submitting to an App Store\n– all done in an afternoon."},{"content":"Or it can be an extremely involved process that involves rigorous up-front design, usability testing, QA testing on thousands of devices, a full beta lifecycle, and then deployment a number of different ways.","pos":[574,782],"source":" Or it can be an extremely involved process that\ninvolves rigorous up-front design, usability testing, QA testing on thousands of\ndevices, a full beta lifecycle, and then deployment a number of different\nways."},{"pos":[784,910],"content":"In this document, we’re going to take a thorough introductory examination of building a Xamarin mobile application, including:","source":"In this document, we’re going to take a thorough introductory examination\nof building a Xamarin mobile application, including:"},{"pos":[917,1045],"content":"<bpt id=\"p1\">[</bpt> <bpt id=\"p2\">**</bpt>Requirements<ept id=\"p2\">**</ept><ept id=\"p1\">](#Requirements)</ept> – We’ll enumerate and examine the requirements for building for iOS and Android applications.","source":"[ **Requirements**](#Requirements) – We’ll enumerate and examine the requirements for building for iOS and Android applications."},{"pos":[1051,1151],"content":"<bpt id=\"p1\">[</bpt> <bpt id=\"p2\">**</bpt>Introduction to Xamarin<ept id=\"p2\">**</ept><ept id=\"p1\">](#Introduction_to_Xamarin)</ept> – List of features of the Xamarin platform.","source":"[ **Introduction to Xamarin**](#Introduction_to_Xamarin) – List of features of the Xamarin platform."},{"content":"<bpt id=\"p1\">[</bpt> <bpt id=\"p2\">**</bpt>How Does Xamarin Work?<ept id=\"p2\">**</ept><ept id=\"p1\">](#How_Does_Xamarin_Work)</ept>","pos":[1157,1210],"source":"[ **How Does Xamarin Work?**](#How_Does_Xamarin_Work)"},{"content":"– A brief overview of how Xamarin works to bring C# to iOS and Android.","pos":[1211,1282]},{"content":"<bpt id=\"p1\">[</bpt> <bpt id=\"p2\">**</bpt>Get started!<ept id=\"p2\">**</ept><ept id=\"p1\">](#Sample_App)</ept>","pos":[1288,1320],"source":"[ **Get started!**](#Sample_App)"},{"content":"– Dive in to building your first Xamarin app, for iOS, Android, or all the platforms using Xamarin.Forms.","pos":[1321,1426]},{"content":"This document is intended to introduce the Xamarin platform.","pos":[1429,1489]},{"content":"To learn more about the <bpt id=\"p1\">*</bpt>process<ept id=\"p1\">*</ept> of building mobile applications from design through to testing, refer to the <bpt id=\"p2\">[</bpt>Introduction to the Mobile Software Development Lifecycle<ept id=\"p2\">](/guides/cross-platform/getting_started/introduction_to_mobile_sdlc/)</ept> document.","pos":[1490,1739],"source":" To learn more about the *process* of building mobile applications from design through to testing, refer to the [Introduction to the Mobile Software Development Lifecycle](/guides/cross-platform/getting_started/introduction_to_mobile_sdlc/) document."},{"pos":[1769,1781],"content":"Requirements","linkify":"Requirements","nodes":[{"content":"Requirements","pos":[0,12]}]},{"content":"If you’d like to develop for iOS, whether you want to code in Xamarin Studio or Visual Studio, you must have an Apple Macintosh computer running at least OS X Yosemite on hand.","pos":[1783,1959],"source":"If you’d like to develop for iOS, whether you want to code in Xamarin Studio or Visual Studio, you must have an Apple Macintosh\ncomputer running at least OS X Yosemite on hand."},{"content":"Although Xamarin applications are based on the .NET BCL and are written in C#, Xamarin.iOS requires the iOS SDK and Xcode in order to compile.","pos":[1960,2102],"source":" Although Xamarin applications are based on\nthe .NET BCL and are written in C#, Xamarin.iOS requires the iOS SDK and Xcode in\norder to compile."},{"content":"Additionally, the iOS Device Simulator is part of the iOS SDK, and therefore only available on Mac.","pos":[2103,2202],"source":" Additionally, the iOS Device Simulator is part of the iOS SDK,\nand therefore only available on Mac."},{"content":"In order to download the iOS SDK, you must install Xcode, which can be downloaded for free from the App Store.","pos":[2203,2313]},{"content":"In addition to the iOS SDK, Xcode will also install iOS simulator for development and testing, and with the addition of free provisioning in Xcode 7, it is possible to test on device without being part of the Apple Developer program.","pos":[2314,2547]},{"content":"⚠️ in order to distribute your Xamarin.iOS you must be a member of <bpt id=\"p1\">[</bpt>Apple’s Developer Program<ept id=\"p1\">](http://developer.apple.com/)</ept>.","pos":[2552,2676],"source":"⚠️ in order to distribute your Xamarin.iOS you must be a member of [Apple’s Developer Program](http://developer.apple.com/)."},{"content":"This program requires an upgraded membership that costs $99 USD/year.","pos":[2677,2746],"source":" This program requires an upgraded membership that costs\n$99 USD/year."},{"content":"All the tutorials presented here are based on the latest version.","pos":[2748,2813]},{"content":"Installation is covered in the next tutorial.","pos":[2814,2859],"source":"\nInstallation is covered in the next tutorial."},{"pos":[2901,2924],"content":"Introduction to Xamarin","linkify":"Introduction to Xamarin","nodes":[{"content":"Introduction to Xamarin","pos":[0,23]}]},{"content":"When considering how to build iOS and Android applications, many people think that the native languages, Objective-C, Swift, and Java, are the only choice.","pos":[2926,3081],"source":"When considering how to build iOS and Android applications, many people think\nthat the native languages, Objective-C, Swift, and Java, are the only\nchoice."},{"content":"However, over the past few years, an entire new ecosystem of platforms for building mobile applications has emerged.","pos":[3082,3198],"source":" However, over the past few years, an entire new ecosystem of platforms\nfor building mobile applications has emerged."},{"pos":[3200,3536],"content":"Xamarin is unique in this space by offering a single language – C#, class library, and runtime that works across all three mobile platforms of iOS, Android, and Windows Phone (Windows Phone’s native language is already C#), while still compiling native (non-interpreted) applications that are performant enough even for demanding games.","source":"Xamarin is unique in this space by offering a single language – C#, class\nlibrary, and runtime that works across all three mobile platforms of iOS,\nAndroid, and Windows Phone (Windows Phone’s native language is already\nC#), while still compiling native (non-interpreted) applications that are\nperformant enough even for demanding games."},{"content":"Each of these platforms has a different feature set and each varies in its ability to write native applications – that is, applications that compile down to native code and that interop fluently with the underlying Java subsystem.","pos":[3538,3768],"source":"Each of these platforms has a different feature set and each varies in its\nability to write native applications – that is, applications that compile down\nto native code and that interop fluently with the underlying Java subsystem."},{"content":"For example, some platforms only allow you to build apps in HTML and JavaScript, whereas some are very low-level and only allow C/C++ code.","pos":[3769,3908],"source":" For\nexample, some platforms only allow you to build apps in HTML and JavaScript, whereas some are very low-level and only allow C/C++ code."},{"content":"Some platforms don’t even utilize the native control toolkit.","pos":[3909,3970],"source":" Some platforms don’t even utilize the native\ncontrol toolkit."},{"pos":[3972,4112],"content":"Xamarin is unique in that it combines all of the power of the native platforms and adds a number of powerful features of its own, including:","source":"Xamarin is unique in that it combines all of the power of the native\nplatforms and adds a number of powerful features of its own, including:"},{"content":"<bpt id=\"p1\">**</bpt>Complete Binding for the underlying SDKs<ept id=\"p1\">**</ept> – Xamarin contains bindings for nearly the entire underlying platform SDKs in both iOS and Android.","pos":[4119,4263],"source":"**Complete Binding for the underlying SDKs** – Xamarin contains bindings for nearly the entire underlying platform SDKs in both iOS and Android."},{"content":"Additionally, these bindings are strongly-typed, which means that they’re easy to navigate and use, and provide robust compile-time type checking and during development.","pos":[4264,4433]},{"content":"This leads to fewer runtime errors and higher quality applications.","pos":[4434,4501]},{"content":"<bpt id=\"p1\">**</bpt>Objective-C, Java, C, and C++ Interop<ept id=\"p1\">**</ept> – Xamarin provides facilities for directly invoking Objective-C, Java, C, and C++ libraries, giving you the power to use a wide array of 3rd party code that has already been created.","pos":[4507,4731],"source":"**Objective-C, Java, C, and C++ Interop** – Xamarin provides facilities for directly invoking Objective-C, Java, C, and C++ libraries, giving you the power to use a wide array of 3rd party code that has already been created."},{"content":"This lets you take advantage of existing iOS and Android libraries written in Objective-C, Java or C/C++.","pos":[4732,4837]},{"content":"Additionally, Xamarin offers binding projects that allow you to easily bind native Objective-C and Java libraries using a declarative syntax.","pos":[4838,4979]},{"pos":[4985,5307],"content":"<bpt id=\"p1\">**</bpt>Modern Language Constructs<ept id=\"p1\">**</ept> – Xamarin applications are written in C#, a modern language that includes significant improvements over Objective-C and Java such as  <bpt id=\"p2\">*</bpt>Dynamic Language Features<ept id=\"p2\">*</ept> ,  <bpt id=\"p3\">*</bpt>Functional Constructs<ept id=\"p3\">*</ept> such as  <bpt id=\"p4\">*</bpt>Lambdas<ept id=\"p4\">*</ept> ,  <bpt id=\"p5\">*</bpt>LINQ<ept id=\"p5\">*</ept> ,  <bpt id=\"p6\">*</bpt>Parallel Programming<ept id=\"p6\">*</ept> features, sophisticated  <bpt id=\"p7\">*</bpt>Generics<ept id=\"p7\">*</ept> , and more.","source":"**Modern Language Constructs** – Xamarin applications are written in C#, a modern language that includes significant improvements over Objective-C and Java such as  *Dynamic Language Features* ,  *Functional Constructs* such as  *Lambdas* ,  *LINQ* ,  *Parallel Programming* features, sophisticated  *Generics* , and more."},{"content":"<bpt id=\"p1\">**</bpt>Amazing Base Class Library (BCL)<ept id=\"p1\">**</ept> – Xamarin applications use the .NET BCL, a massive collection of classes that have comprehensive and streamlined features such as powerful XML, Database, Serialization, IO, String, and Networking support, just to name a few.","pos":[5313,5574],"source":"**Amazing Base Class Library (BCL)** – Xamarin applications use the .NET BCL, a massive collection of classes that have comprehensive and streamlined features such as powerful XML, Database, Serialization, IO, String, and Networking support, just to name a few."},{"content":"Additionally, existing C# code can be compiled for use in your applications, which provides access to thousands upon thousands of libraries that will let you do things that aren’t already covered in the BCL.","pos":[5575,5782]},{"content":"<bpt id=\"p1\">**</bpt>Modern Integrated Development Environment (IDE)<ept id=\"p1\">**</ept> – Xamarin uses Xamarin Studio on Mac OS X, and also Xamarin Studio or Visual Studio on Windows.","pos":[5788,5935],"source":"**Modern Integrated Development Environment (IDE)** – Xamarin uses Xamarin Studio on Mac OS X, and also Xamarin Studio or Visual Studio on Windows."},{"content":"These are both modern IDE’s that include features such as code auto completion, a sophisticated Project and Solution management system, a comprehensive project template library, integrated source control, and many others.","pos":[5936,6157]},{"content":"<bpt id=\"p1\">**</bpt>Mobile Cross Platform Support<ept id=\"p1\">**</ept> – Xamarin offers sophisticated cross-platform support for the three major mobile platforms of iOS, Android, and Windows Phone.","pos":[6163,6323],"source":"**Mobile Cross Platform Support** – Xamarin offers sophisticated cross-platform support for the three major mobile platforms of iOS, Android, and Windows Phone."},{"content":"Applications can be written to share up to 90% of their code, and our Xamarin.Mobile library offers a unified API to access common resources across all three platforms.","pos":[6324,6492]},{"content":"This can significantly reduce both development costs and time to market for mobile developers that target the three most popular mobile platforms.","pos":[6493,6639]},{"pos":[6642,6840],"content":"Because of Xamarin’s powerful and comprehensive feature set, it fills a void for application developers that want to use a modern language and platform to develop cross-platform mobile applications.","source":"Because of Xamarin’s powerful and comprehensive feature set, it fills a\nvoid for application developers that want to use a modern language and platform\nto develop cross-platform mobile applications."},{"content":"ℹ️ This Getting Started series focuses on getting started building iOS and Android applications.","pos":[6845,6941],"source":"ℹ️ This Getting Started series focuses on getting started building iOS and\nAndroid applications."},{"content":"If you’re interested in building for Windows Phone, Microsoft offers tutorials <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](http://dev.windowsphone.com/en-us/develop)</ept>.","pos":[6942,7071],"source":" If you’re interested in building for Windows Phone,\nMicrosoft offers tutorials [here](http://dev.windowsphone.com/en-us/develop)."},{"content":"If you’re interested in learning more about cross-platform development with Xamarin (including Windows Phone), you can find our guide <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](/guides/ios/application_fundamentals/building_cross_platform_applications)</ept>.","pos":[7072,7288],"source":" If\nyou’re interested in learning more about cross-platform development with\nXamarin (including Windows Phone), you can find our guide [here](/guides/ios/application_fundamentals/building_cross_platform_applications)."},{"content":"Let’s take a look at how this all works.","pos":[7290,7330]},{"pos":[7372,7394],"content":"How Does Xamarin Work?","linkify":"How Does Xamarin Work?","nodes":[{"content":"How Does Xamarin Work?","pos":[0,22]}]},{"content":"Xamarin offers two commercial products: Xamarin.iOS and Xamarin.Android.","pos":[7396,7468]},{"content":"They’re both built on top of <bpt id=\"p1\">*</bpt>Mono<ept id=\"p1\">*</ept>, an open-source version of the .NET Framework based on the published .NET ECMA standards.","pos":[7469,7594],"source":" They’re both built on\ntop of *Mono*, an open-source version of the .NET Framework based on the\npublished .NET ECMA standards."},{"content":"Mono has been around almost as long as the .NET framework itself, and runs on nearly every imaginable platform including Linux, Unix, FreeBSD, and Mac OS X.","pos":[7595,7751],"source":" Mono has been around almost as long as the .NET\nframework itself, and runs on nearly every imaginable platform including Linux,\nUnix, FreeBSD, and Mac OS X."},{"content":"On iOS, Xamarin’s <bpt id=\"p1\">*</bpt>Ahead-of-Time<ept id=\"p1\">*</ept> ( <bpt id=\"p2\">*</bpt>AOT<ept id=\"p2\">*</ept>) Compiler compiles Xamarin.iOS applications directly to native ARM assembly code.","pos":[7753,7876],"source":"On iOS, Xamarin’s *Ahead-of-Time* ( *AOT*) Compiler compiles\nXamarin.iOS applications directly to native ARM assembly code."},{"content":"On Android, Xamarin’s compiler compiles down to <bpt id=\"p1\">*</bpt>Intermediate Language<ept id=\"p1\">*</ept> ( <bpt id=\"p2\">*</bpt>IL<ept id=\"p2\">*</ept>), which is then <bpt id=\"p3\">*</bpt>Just-in-Time<ept id=\"p3\">*</ept> ( <bpt id=\"p4\">*</bpt>JIT<ept id=\"p4\">*</ept>) compiled to native assembly when the application launches.","pos":[7877,8054],"source":" On Android,\nXamarin’s compiler compiles down to *Intermediate Language*\n( *IL*), which is then *Just-in-Time* ( *JIT*) compiled to\nnative assembly when the application launches."},{"pos":[8056,8224],"content":"In both cases, Xamarin applications utilize a runtime that automatically handles things such as memory allocation, garbage collection, underlying platform interop, etc.","source":"In both cases, Xamarin applications utilize a runtime that automatically\nhandles things such as memory allocation, garbage collection, underlying\nplatform interop, etc."},{"content":"[[ide name=\"vs\"]] This will contain information about <bpt id=\"p1\">_</bpt>Visual Studio<ept id=\"p1\">_</ept>.","pos":[8226,8296],"source":"[[ide name=\"vs\"]]\nThis will contain information about _Visual Studio_."},{"content":"This will be <bpt id=\"p1\">[</bpt>markdown<ept id=\"p1\">](https://xamarin.com)</ept> [[/ide]]","pos":[8297,8350],"source":" This will be [markdown](https://xamarin.com)\n[[/ide]]"},{"content":"[[ide name=\"xs\"]] This will contain information about <bpt id=\"p1\">_</bpt>Xamarin Studio<ept id=\"p1\">_</ept>.","pos":[8352,8423],"source":"[[ide name=\"xs\"]]\nThis will contain information about _Xamarin Studio_."},{"content":"This will be <bpt id=\"p1\">[</bpt>markdown<ept id=\"p1\">](https://xamarin.com)</ept> [[/ide]]","pos":[8424,8477],"source":" This will be [markdown](https://xamarin.com)\n[[/ide]]"},{"pos":[8533,8567],"content":"MonoTouch.dll and Mono.Android.dll","linkify":"MonoTouch.dll and Mono.Android.dll","nodes":[{"content":"MonoTouch.dll and Mono.Android.dll","pos":[0,34]}]},{"content":"Xamarin applications are built against a subset of the .NET BCL known as the Xamarin Mobile Profile.","pos":[8569,8669],"source":"Xamarin applications are built against a subset of the .NET BCL known as the\nXamarin Mobile Profile."},{"content":"This profile has been created specifically for mobile applications and packaged in the MonoTouch.dll and Mono.Android.dll (for iOS and Android respectively).","pos":[8670,8827],"source":" This profile has been created specifically for mobile\napplications and packaged in the MonoTouch.dll and Mono.Android.dll (for iOS and\nAndroid respectively)."},{"content":"This is much like the way Silverlight (and Moonlight) applications are built against the Silverlight/Moonlight .NET Profile.","pos":[8828,8952],"source":" This is much like the way Silverlight (and Moonlight)\napplications are built against the Silverlight/Moonlight .NET Profile."},{"content":"In fact, the Xamarin Mobile profile is equivalent to the Silverlight 4.0 profile with a bunch of BCL classes added back in.","pos":[8953,9076],"source":" In fact,\nthe Xamarin Mobile profile is equivalent to the Silverlight 4.0 profile with a\nbunch of BCL classes added back in."},{"pos":[9078,9290],"content":"For a full list of available assemblies and classes, see the <bpt id=\"p1\">[</bpt>Xamarin.iOS Assembly List<ept id=\"p1\">](/guides/ios/advanced_topics/assemblies)</ept> and the <bpt id=\"p2\">[</bpt>Xamarin.Android Assembly List<ept id=\"p2\">](/guides/android/advanced_topics/assemblies)</ept>","source":"For a full list of available assemblies and classes, see the [Xamarin.iOS Assembly List](/guides/ios/advanced_topics/assemblies) and the [Xamarin.Android Assembly List](/guides/android/advanced_topics/assemblies)"},{"pos":[9292,9457],"content":"In addition to the BCL, these .dlls include wrappers for nearly the entire iOS SDK and Android SDK that allow you to invoke the underlying SDK APIs directly from C#.","source":"In addition to the BCL, these .dlls include wrappers for nearly the entire\niOS SDK and Android SDK that allow you to invoke the underlying SDK APIs\ndirectly from C#."},{"pos":[9497,9515],"content":"Application Output","linkify":"Application Output","nodes":[{"content":"Application Output","pos":[0,18]}]},{"content":"When Xamarin applications are compiled, the result is an Application Package, either an .app file in iOS, or .apk file in Android.","pos":[9517,9647],"source":"When Xamarin applications are compiled, the result is an Application Package,\neither an .app file in iOS, or .apk file in Android."},{"content":"These files are indistinguishable from application packages built with the platform's default IDEs and are deployable in the exact same way.","pos":[9648,9788],"source":" These files are\nindistinguishable from application packages built with the platform's default\nIDEs and are deployable in the exact same way."},{"pos":[9817,9832],"content":"Getting Started","linkify":"Getting Started","nodes":[{"content":"Getting Started","pos":[0,15]}]},{"content":"Now you've learned a little about how Xamarin works, it's time to dive in!","pos":[9834,9908]},{"content":"The next step is to start building your first app using one of these guides:","pos":[9910,9986]},{"pos":[9990,10050],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Hello, iOS<ept id=\"p2\">**</ept><ept id=\"p1\">](/guides/ios/getting_started/hello%2c_world)</ept>","source":"[**Hello, iOS**](/guides/ios/getting_started/hello%2c_world)"},{"pos":[10077,10145],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Hello, Android<ept id=\"p2\">**</ept><ept id=\"p1\">](/guides/android/getting_started/hello%2c_world)</ept>","source":"[**Hello, Android**](/guides/android/getting_started/hello%2c_world)"},{"pos":[10176,10293],"content":"<bpt id=\"p1\">[</bpt><bpt id=\"p2\">**</bpt>Introduction to Xamarin.Forms<ept id=\"p2\">**</ept><ept id=\"p1\">](http://developer.xamarin.com/guides/xamarin-forms/introduction-to-xamarin-forms/)</ept>","source":"[**Introduction to Xamarin.Forms**](http://developer.xamarin.com/guides/xamarin-forms/introduction-to-xamarin-forms/)"},{"pos":[10389,10396],"content":"Summary","linkify":"Summary","nodes":[{"content":"Summary","pos":[0,7]}]},{"content":"This document has merely introduced the Xamarin platform.","pos":[10398,10455]},{"content":"The real fun starts when you get your first app up-and-running.","pos":[10456,10519]},{"content":"Check out the <bpt id=\"p1\">[</bpt>Hello, iOS<ept id=\"p1\">](/guides/ios/getting_started/hello%2c_world)</ept>, <bpt id=\"p2\">[</bpt>Hello, Android<ept id=\"p2\">](/guides/android/getting_started/hello%2c_world)</ept>, and <bpt id=\"p3\">[</bpt>Introduction to Xamarin.Forms<ept id=\"p3\">](http://developer.xamarin.com/guides/xamarin-forms/introduction-to-xamarin-forms/)</ept> guides to begin.","pos":[10520,10792],"source":" Check out the [Hello, iOS](/guides/ios/getting_started/hello%2c_world), [Hello, Android](/guides/android/getting_started/hello%2c_world), and [Introduction to Xamarin.Forms](http://developer.xamarin.com/guides/xamarin-forms/introduction-to-xamarin-forms/) guides to begin."}],"content":"id:{33C83E13-F3E5-17B4-6512-207F3D3C5AB6}  \ntitle:Introduction to Mobile Development  \npdftype:none  \narticle:[Hello, iOS](/guides/ios/getting_started/hello,_world)  \narticle:[Hello, Android](/guides/android/getting_started/hello,_world)  \nxamu: [Xamarin University](https://university.xamarin.com/)  \nsample: [Samples](/samples-all/)  \nvide: [Videos](/videos/)  \n\n<a name=\"Overview\" />\n\nBuilding mobile applications can be as easy as opening up your IDE, throwing\nsomething together, doing a quick bit of testing, and submitting to an App Store\n– all done in an afternoon. Or it can be an extremely involved process that\ninvolves rigorous up-front design, usability testing, QA testing on thousands of\ndevices, a full beta lifecycle, and then deployment a number of different\nways.\n\nIn this document, we’re going to take a thorough introductory examination\nof building a Xamarin mobile application, including:\n\n1.   [ **Requirements**](#Requirements) – We’ll enumerate and examine the requirements for building for iOS and Android applications.\n1.   [ **Introduction to Xamarin**](#Introduction_to_Xamarin) – List of features of the Xamarin platform.\n1.   [ **How Does Xamarin Work?**](#How_Does_Xamarin_Work) – A brief overview of how Xamarin works to bring C# to iOS and Android.\n1.   [ **Get started!**](#Sample_App) – Dive in to building your first Xamarin app, for iOS, Android, or all the platforms using Xamarin.Forms.\n\n\nThis document is intended to introduce the Xamarin platform. To learn more about the *process* of building mobile applications from design through to testing, refer to the [Introduction to the Mobile Software Development Lifecycle](/guides/cross-platform/getting_started/introduction_to_mobile_sdlc/) document.\n\n<a name=\"Requirements\" />\n# Requirements\n\nIf you’d like to develop for iOS, whether you want to code in Xamarin Studio or Visual Studio, you must have an Apple Macintosh\ncomputer running at least OS X Yosemite on hand. Although Xamarin applications are based on\nthe .NET BCL and are written in C#, Xamarin.iOS requires the iOS SDK and Xcode in\norder to compile. Additionally, the iOS Device Simulator is part of the iOS SDK,\nand therefore only available on Mac. In order to download the iOS SDK, you must install Xcode, which can be downloaded for free from the App Store. In addition to the iOS SDK, Xcode will also install iOS simulator for development and testing, and with the addition of free provisioning in Xcode 7, it is possible to test on device without being part of the Apple Developer program.\n\n>  ⚠️ in order to distribute your Xamarin.iOS you must be a member of [Apple’s Developer Program](http://developer.apple.com/). This program requires an upgraded membership that costs\n$99 USD/year.\n\nAll the tutorials presented here are based on the latest version.\nInstallation is covered in the next tutorial.\n\n\n<a name=\"Introduction_to_Xamarin\" />\n# Introduction to Xamarin\n\nWhen considering how to build iOS and Android applications, many people think\nthat the native languages, Objective-C, Swift, and Java, are the only\nchoice. However, over the past few years, an entire new ecosystem of platforms\nfor building mobile applications has emerged.\n\nXamarin is unique in this space by offering a single language – C#, class\nlibrary, and runtime that works across all three mobile platforms of iOS,\nAndroid, and Windows Phone (Windows Phone’s native language is already\nC#), while still compiling native (non-interpreted) applications that are\nperformant enough even for demanding games.\n\nEach of these platforms has a different feature set and each varies in its\nability to write native applications – that is, applications that compile down\nto native code and that interop fluently with the underlying Java subsystem. For\nexample, some platforms only allow you to build apps in HTML and JavaScript, whereas some are very low-level and only allow C/C++ code. Some platforms don’t even utilize the native\ncontrol toolkit.\n\nXamarin is unique in that it combines all of the power of the native\nplatforms and adds a number of powerful features of its own, including:\n\n1.   **Complete Binding for the underlying SDKs** – Xamarin contains bindings for nearly the entire underlying platform SDKs in both iOS and Android. Additionally, these bindings are strongly-typed, which means that they’re easy to navigate and use, and provide robust compile-time type checking and during development. This leads to fewer runtime errors and higher quality applications.\n1.   **Objective-C, Java, C, and C++ Interop** – Xamarin provides facilities for directly invoking Objective-C, Java, C, and C++ libraries, giving you the power to use a wide array of 3rd party code that has already been created. This lets you take advantage of existing iOS and Android libraries written in Objective-C, Java or C/C++. Additionally, Xamarin offers binding projects that allow you to easily bind native Objective-C and Java libraries using a declarative syntax.\n1.   **Modern Language Constructs** – Xamarin applications are written in C#, a modern language that includes significant improvements over Objective-C and Java such as  *Dynamic Language Features* ,  *Functional Constructs* such as  *Lambdas* ,  *LINQ* ,  *Parallel Programming* features, sophisticated  *Generics* , and more.\n1.   **Amazing Base Class Library (BCL)** – Xamarin applications use the .NET BCL, a massive collection of classes that have comprehensive and streamlined features such as powerful XML, Database, Serialization, IO, String, and Networking support, just to name a few. Additionally, existing C# code can be compiled for use in your applications, which provides access to thousands upon thousands of libraries that will let you do things that aren’t already covered in the BCL.\n1.   **Modern Integrated Development Environment (IDE)** – Xamarin uses Xamarin Studio on Mac OS X, and also Xamarin Studio or Visual Studio on Windows. These are both modern IDE’s that include features such as code auto completion, a sophisticated Project and Solution management system, a comprehensive project template library, integrated source control, and many others.\n1.   **Mobile Cross Platform Support** – Xamarin offers sophisticated cross-platform support for the three major mobile platforms of iOS, Android, and Windows Phone. Applications can be written to share up to 90% of their code, and our Xamarin.Mobile library offers a unified API to access common resources across all three platforms. This can significantly reduce both development costs and time to market for mobile developers that target the three most popular mobile platforms.\n\n\nBecause of Xamarin’s powerful and comprehensive feature set, it fills a\nvoid for application developers that want to use a modern language and platform\nto develop cross-platform mobile applications.\n\n>  ℹ️ This Getting Started series focuses on getting started building iOS and\nAndroid applications. If you’re interested in building for Windows Phone,\nMicrosoft offers tutorials [here](http://dev.windowsphone.com/en-us/develop). If\nyou’re interested in learning more about cross-platform development with\nXamarin (including Windows Phone), you can find our guide [here](/guides/ios/application_fundamentals/building_cross_platform_applications).\n\nLet’s take a look at how this all works.\n\n <a name=\"How_Does_Xamarin_Work\" />\n\n\n# How Does Xamarin Work?\n\nXamarin offers two commercial products: Xamarin.iOS and Xamarin.Android. They’re both built on\ntop of *Mono*, an open-source version of the .NET Framework based on the\npublished .NET ECMA standards. Mono has been around almost as long as the .NET\nframework itself, and runs on nearly every imaginable platform including Linux,\nUnix, FreeBSD, and Mac OS X.\n\nOn iOS, Xamarin’s *Ahead-of-Time* ( *AOT*) Compiler compiles\nXamarin.iOS applications directly to native ARM assembly code. On Android,\nXamarin’s compiler compiles down to *Intermediate Language*\n( *IL*), which is then *Just-in-Time* ( *JIT*) compiled to\nnative assembly when the application launches.\n\nIn both cases, Xamarin applications utilize a runtime that automatically\nhandles things such as memory allocation, garbage collection, underlying\nplatform interop, etc.\n\n[[ide name=\"vs\"]]\nThis will contain information about _Visual Studio_. This will be [markdown](https://xamarin.com)\n[[/ide]]\n\n[[ide name=\"xs\"]]\nThis will contain information about _Xamarin Studio_. This will be [markdown](https://xamarin.com)\n[[/ide]]\n\n <a name=\"MonoTouch.dll_and_Mono.Android.dll\" />\n\n\n## MonoTouch.dll and Mono.Android.dll\n\nXamarin applications are built against a subset of the .NET BCL known as the\nXamarin Mobile Profile. This profile has been created specifically for mobile\napplications and packaged in the MonoTouch.dll and Mono.Android.dll (for iOS and\nAndroid respectively). This is much like the way Silverlight (and Moonlight)\napplications are built against the Silverlight/Moonlight .NET Profile. In fact,\nthe Xamarin Mobile profile is equivalent to the Silverlight 4.0 profile with a\nbunch of BCL classes added back in.\n\nFor a full list of available assemblies and classes, see the [Xamarin.iOS Assembly List](/guides/ios/advanced_topics/assemblies) and the [Xamarin.Android Assembly List](/guides/android/advanced_topics/assemblies)\n\nIn addition to the BCL, these .dlls include wrappers for nearly the entire\niOS SDK and Android SDK that allow you to invoke the underlying SDK APIs\ndirectly from C#.\n\n <a name=\"Application_Output\" />\n\n\n## Application Output\n\nWhen Xamarin applications are compiled, the result is an Application Package,\neither an .app file in iOS, or .apk file in Android. These files are\nindistinguishable from application packages built with the platform's default\nIDEs and are deployable in the exact same way.\n\n\n<a name=\"Sample_App\" />\n# Getting Started\n\nNow you've learned a little about how Xamarin works, it's time to dive in!\n\nThe next step is to start building your first app using one of these guides:\n\n* [**Hello, iOS**](/guides/ios/getting_started/hello%2c_world)\n\n![](/Images/ios.png)\n\n\n* [**Hello, Android**](/guides/android/getting_started/hello%2c_world)\n\n![](/Images/android.png)\n\n\n* [**Introduction to Xamarin.Forms**](http://developer.xamarin.com/guides/xamarin-forms/introduction-to-xamarin-forms/)\n\n\n```\nvar value = new String(10);\nUITableView view = new UITableView(); // this is code\n```\n\n# Summary\n\nThis document has merely introduced the Xamarin platform. The real fun starts when you get your first app up-and-running. Check out the [Hello, iOS](/guides/ios/getting_started/hello%2c_world), [Hello, Android](/guides/android/getting_started/hello%2c_world), and [Introduction to Xamarin.Forms](http://developer.xamarin.com/guides/xamarin-forms/introduction-to-xamarin-forms/) guides to begin.\n"}