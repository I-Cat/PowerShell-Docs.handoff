{"nodes":[{"pos":[13,44],"content":"DSC for Linux nxScript Resource","needQuote":true,"nodes":[{"content":"DSC for Linux nxScript Resource","pos":[0,31]}]},{"pos":[77,91],"content":"powershell,DSC","needQuote":true,"nodes":[{"content":"powershell,DSC","pos":[0,14]}]},{"content":"DSC for Linux nxScript Resource","pos":[189,220]},{"pos":[222,354],"content":"The <bpt id=\"p1\">**</bpt>nxScript<ept id=\"p1\">**</ept> resource in PowerShell Desired State Configuration (DSC) provides a mechanism to run Linux scripts on a Linux node.","source":"The **nxScript** resource in PowerShell Desired State Configuration (DSC) provides a mechanism to run Linux scripts on a Linux node."},{"content":"Syntax","pos":[359,365]},{"content":"Properties","pos":[572,582]},{"content":"Property","pos":[587,595]},{"content":"Description","pos":[599,610]},{"content":"GetScript","pos":[626,635]},{"content":"Provides a script that runs when you invoke the <bpt id=\"p1\">[</bpt>Get-DscConfiguration<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/dn521625.aspx)</ept> cmdlet.","pos":[637,774],"source":"Provides a script that runs when you invoke the [Get-DscConfiguration](https://technet.microsoft.com/en-us/library/dn521625.aspx) cmdlet."},{"content":"The script must begin with a shebang, such as #!/bin/bash.","pos":[775,833]},{"content":"SetScript","pos":[838,847]},{"content":"Provides a script.","pos":[849,867]},{"content":"When you invoke the <bpt id=\"p1\">[</bpt>Start-DscConfiguration<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/dn521623.aspx)</ept> cmdlet, the <bpt id=\"p2\">**</bpt>TestScript<ept id=\"p2\">**</ept> runs first.","pos":[868,1010],"source":" When you invoke the [Start-DscConfiguration](https://technet.microsoft.com/en-us/library/dn521623.aspx) cmdlet, the **TestScript** runs first."},{"content":"If the <bpt id=\"p1\">**</bpt>TestScript<ept id=\"p1\">**</ept> block returns an exit code other than 0, the <bpt id=\"p2\">**</bpt>SetScript<ept id=\"p2\">**</ept> block will run.","pos":[1011,1107],"source":" If the **TestScript** block returns an exit code other than 0, the **SetScript** block will run."},{"content":"If the <bpt id=\"p1\">**</bpt>TestScript<ept id=\"p1\">**</ept> returns an exit code of 0, the <bpt id=\"p2\">**</bpt>SetScript<ept id=\"p2\">**</ept> will not run.","pos":[1108,1188],"source":" If the **TestScript** returns an exit code of 0, the **SetScript** will not run."},{"content":"The script must begin with a shebang, such as <ph id=\"ph1\">`#!/bin/bash`</ph>.","pos":[1189,1249],"source":" The script must begin with a shebang, such as `#!/bin/bash`."},{"content":"TestScript","pos":[1254,1264]},{"content":"Provides a script.","pos":[1266,1284]},{"content":"When you invoke the <bpt id=\"p1\">[</bpt>Start-DscConfiguration<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/dn521623.aspx)</ept> cmdlet, this script runs.","pos":[1285,1414],"source":" When you invoke the [Start-DscConfiguration](https://technet.microsoft.com/en-us/library/dn521623.aspx) cmdlet, this script runs."},{"content":"If it returns an exit code other than 0, the SetScript will run.","pos":[1415,1479]},{"content":"If it returns an exit code of 0, the <bpt id=\"p1\">**</bpt>SetScript<ept id=\"p1\">**</ept> will not run.","pos":[1480,1544],"source":" If it returns an exit code of 0, the **SetScript** will not run."},{"content":"The <bpt id=\"p1\">**</bpt>TestScript<ept id=\"p1\">**</ept> also runs when you invoke the <bpt id=\"p2\">[</bpt>Test-DscConfiguration<ept id=\"p2\">](https://technet.microsoft.com/en-us/library/dn407382.aspx)</ept> cmdlet.","pos":[1545,1684],"source":" The **TestScript** also runs when you invoke the [Test-DscConfiguration](https://technet.microsoft.com/en-us/library/dn407382.aspx) cmdlet."},{"content":"However, in this case, the <bpt id=\"p1\">**</bpt>SetScript<ept id=\"p1\">**</ept> will not run, no matter what exit code is returned from the <bpt id=\"p2\">**</bpt>TestScript<ept id=\"p2\">**</ept>.","pos":[1685,1801],"source":" However, in this case, the **SetScript** will not run, no matter what exit code is returned from the **TestScript**."},{"content":"The <bpt id=\"p1\">**</bpt>TestScript<ept id=\"p1\">**</ept> must return an exit code of 0 if the actual configuration matches the current desired state configuration, and an exit code other than 0 if it does not match.","pos":[1802,1979],"source":" The **TestScript** must return an exit code of 0 if the actual configuration matches the current desired state configuration, and an exit code other than 0 if it does not match."},{"content":"(The current desired state configuration is the last configuration enacted on the node that is using DSC).","pos":[1980,2086]},{"content":"The script must begin with a shebang, such as 1#!/bin/bash.1","pos":[2087,2147]},{"content":"User","pos":[2152,2156]},{"content":"The user to run the script as.","pos":[2158,2188]},{"content":"Group","pos":[2193,2198]},{"content":"The group to run the script as.","pos":[2200,2231]},{"content":"DependsOn","pos":[2236,2245]},{"content":"Indicates that the configuration of another resource must run before this resource is configured.","pos":[2248,2345]},{"content":"For example, if the <bpt id=\"p1\">**</bpt>ID<ept id=\"p1\">**</ept> of the resource configuration script block that you want to run first is <bpt id=\"p2\">**</bpt>ResourceName<ept id=\"p2\">**</ept> and its type is <bpt id=\"p3\">**</bpt>ResourceType<ept id=\"p3\">**</ept>, the syntax for using this property is <ph id=\"ph1\">`DependsOn = \"[ResourceType]ResourceName\"`</ph>.","pos":[2346,2578],"source":" For example, if the **ID** of the resource configuration script block that you want to run first is **ResourceName** and its type is **ResourceType**, the syntax for using this property is `DependsOn = \"[ResourceType]ResourceName\"`."},{"content":"Example","pos":[2585,2592]},{"pos":[2594,2713],"content":"The following example demonstrates the use of the <bpt id=\"p1\">**</bpt>nxScript<ept id=\"p1\">**</ept> resource to perform additional configuration management.","source":"The following example demonstrates the use of the **nxScript** resource to perform additional configuration management."}],"content":"---\ntitle:   DSC for Linux nxScript Resource\nms.date:  2016-05-16\nkeywords:  powershell,DSC\ndescription:  \nms.topic:  article\nauthor:  eslesar\nmanager:  dongill\nms.prod:  powershell\n---\n\n# DSC for Linux nxScript Resource\n\nThe **nxScript** resource in PowerShell Desired State Configuration (DSC) provides a mechanism to run Linux scripts on a Linux node.\n\n## Syntax\n\n```\nnxScript <string> #ResourceName\n{\n    GetScript = <string>\n    SetScript = <string>\n    TestScript = <string>\n    [ User = <string> ]\n    { Group = <string> ]\n    [ DependsOn = <string[]> ]\n\n}\n```\n\n## Properties\n\n|  Property |  Description | \n|---|---|\n| GetScript| Provides a script that runs when you invoke the [Get-DscConfiguration](https://technet.microsoft.com/en-us/library/dn521625.aspx) cmdlet. The script must begin with a shebang, such as #!/bin/bash.| \n| SetScript| Provides a script. When you invoke the [Start-DscConfiguration](https://technet.microsoft.com/en-us/library/dn521623.aspx) cmdlet, the **TestScript** runs first. If the **TestScript** block returns an exit code other than 0, the **SetScript** block will run. If the **TestScript** returns an exit code of 0, the **SetScript** will not run. The script must begin with a shebang, such as `#!/bin/bash`.| \n| TestScript| Provides a script. When you invoke the [Start-DscConfiguration](https://technet.microsoft.com/en-us/library/dn521623.aspx) cmdlet, this script runs. If it returns an exit code other than 0, the SetScript will run. If it returns an exit code of 0, the **SetScript** will not run. The **TestScript** also runs when you invoke the [Test-DscConfiguration](https://technet.microsoft.com/en-us/library/dn407382.aspx) cmdlet. However, in this case, the **SetScript** will not run, no matter what exit code is returned from the **TestScript**. The **TestScript** must return an exit code of 0 if the actual configuration matches the current desired state configuration, and an exit code other than 0 if it does not match. (The current desired state configuration is the last configuration enacted on the node that is using DSC). The script must begin with a shebang, such as 1#!/bin/bash.1| \n| User| The user to run the script as.| \n| Group| The group to run the script as.| \n| DependsOn | Indicates that the configuration of another resource must run before this resource is configured. For example, if the **ID** of the resource configuration script block that you want to run first is **ResourceName** and its type is **ResourceType**, the syntax for using this property is `DependsOn = \"[ResourceType]ResourceName\"`.| \n\n## Example\n\nThe following example demonstrates the use of the **nxScript** resource to perform additional configuration management.\n\n```\nImport-DSCResource -Module nx \n\nNode $node {\nnxScript KeepDirEmpty{\n\n    GetScript = @\"\n#!/bin/bash\nls /tmp/mydir/ | wc -l\n\"@\n\n    SetScript = @\"\n#!/bin/bash\nrm -rf /tmp/mydir/*\n\"@\n\n    TestScript = @'\n#!/bin/bash\nfilecount=`ls /tmp/mydir | wc -l`\nif [ $filecount -gt 0 ]\nthen\n    exit 1\nelse\n    exit 0\nfi\n'@\n} \n}\n```\n\n"}