{"nodes":[{"content":"Interact with Symbolic links using improved Item cmdlets","pos":[2,58]},{"content":"To support symbolic links, <bpt id=\"p1\">**</bpt>\\*-Item<ept id=\"p1\">**</ept> and a few related cmdlets have been extended.","pos":[60,144],"source":"To support symbolic links, **\\*-Item** and a few related cmdlets have been extended."},{"content":"Now you can create symbolic links in a single, simple line with <bpt id=\"p1\">**</bpt>New-Item<ept id=\"p1\">**</ept>.","pos":[145,222],"source":" Now you can create symbolic links in a single, simple line with **New-Item**."},{"content":"You’ll notice that the Item-related cmdlets (<bpt id=\"p1\">**</bpt>Remove-Item, Get-ChildItem<ept id=\"p1\">**</ept>) behave very similarly to before.","pos":[223,332],"source":" You’ll notice that the Item-related cmdlets (**Remove-Item, Get-ChildItem**) behave very similarly to before."},{"content":"The following shows some use cases of the new capabilities:","pos":[334,393]},{"content":"NEW-ITEM","pos":[398,406]},{"content":"SYMBOLIC LINK FILES","pos":[412,431]},{"content":"SYMBOLIC LINK DIRECTORIES","pos":[1027,1052]},{"content":"HARD LINKS","pos":[1684,1694]},{"content":"DIRECTORY JUNCTIONS","pos":[1877,1896]},{"content":"GET-CHILDITEM","pos":[2055,2068]},{"content":"REMOVE-ITEM","pos":[3425,3436]}],"content":"# Interact with Symbolic links using improved Item cmdlets\n\nTo support symbolic links, **\\*-Item** and a few related cmdlets have been extended. Now you can create symbolic links in a single, simple line with **New-Item**. You’ll notice that the Item-related cmdlets (**Remove-Item, Get-ChildItem**) behave very similarly to before.\n\nThe following shows some use cases of the new capabilities:\n\n## NEW-ITEM\n\n### SYMBOLIC LINK FILES\n\n```powershell\n# Create a new symbolic link file named MySymLinkFile.txt in C:\\Temp which links to $pshome\\profile.ps1\ncd C:\\Temp\nNew-Item -ItemType SymbolicLink -Name MySymLinkFile.txt -Target $pshome\\profile.ps1 \n\n# Target is an alias to the Value parameter\n# All 3 commands below are equivalent to above\nNew-Item -ItemType SymbolicLink -Path C:\\Temp -Name MySymLinkFile.txt -Value $pshome\\profile.ps1\nNew-Item -ItemType SymbolicLink -Path C:\\Temp\\MySymLinkFile.txt -Value $pshome\\profile.ps1\nNew-Item -ItemType SymbolicLink -Name C:\\Temp\\MySymLinkFile.txt -Value $pshome\\profile.ps1\n```\n\n### SYMBOLIC LINK DIRECTORIES\n\n```powershell\n# Create a new symbolic link directory named MySymLinkDir in C:\\Temp which links to the $pshome folder\n# ItemType is the same for files and directories - autodetect based on specified target\ncd C:\\Temp\nNew-Item -ItemType SymbolicLink -Name MySymLinkDir -Target $pshome \n\n# Target is an alias to the Value parameter\n# Similar to above, any combination of Path and Name also works\nNew-Item -ItemType SymbolicLink -Path C:\\Temp -Name MySymLinkDir -Value $pshome\nNew-Item -ItemType SymbolicLink -Path C:\\Temp\\MySymLinkDir -Value $pshome\nNew-Item -ItemType SymbolicLink -Name C:\\Temp\\MySymLinkDir -Value $pshome\n```\n\n### HARD LINKS\n\n```powershell\nNew-Item -ItemType HardLink -Path C:\\Temp -Name MyHardLinkFile.txt -Value $pshome\\profile.ps1\n# Same combinations of Path and Name allowed as described above\n```\n\n### DIRECTORY JUNCTIONS\n\n```powershell\nNew-Item -ItemType Junction -Path C:\\Temp\\MyJunctionDir -Value $pshome\n# Same combinations of Path and Name allowed as described above\n```\n\n## GET-CHILDITEM\n\n```powershell\n# Append link type column to Mode property and display with Get-ChildItem\n# Use 'l' for all link types\n# Increase the width of the Length column by 4 (from 10 to 14)\nGet-ChildItem C:\\Temp | sort LastWriteTime -Descending\n\nDirectory: C:\\Temp\n\nMode LastWriteTime Length Name\n---- ------------- ------ ----\n-a---- 6/13/2014 3:00 PM 16 File.txt\n-a---- 6/13/2014 3:00 PM 98956046499840 My90TB.vhd\nd----- 6/13/2014 3:00 PM Directory\n-a---l 6/13/2014 3:21 PM 0 MySymLinkFile.txt\nd----l 6/13/2014 3:22 PM MySymLinkDir\n-a---l 6/13/2014 3:23 PM 23304 MyHardLinkFile.txt\nd----l 6/13/2014 3:24 PM MyJunctionDir\n\n# New Target property works with any link type\n# Not displayed in the default table view, but displayed in the default list view\n\n# New LinkType property with values: SymbolicLink\nGet-ChildItem C:\\Temp\\MySymLinkFile.txt | Format-List\n\nDirectory: C:\\Temp\n\nName : MySymLinkFile.txt\nLength : 0\nMode : -a---l\nLinkType : SymbolicLink\nTarget : C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\profile.ps1\nCreationTime : 6/16/2014 3:21:01 PM\nLastWriteTime : 6/16/2014 3:21:01 PM\nLastAccessTime : 6/16/2014 3:21:01 PM\nVersionInfo : File: C:\\Temp\\MySymLinkFile.txt\nInternalName:\nOriginalFilename:\nFileVersion:\nFileDescription:\nProduct:\nProductVersion:\nDebug: False\nPatched: False\nPreRelease: False\nPrivateBuild: False\nSpecialBuild: False\nLanguage:\n```\n\n## REMOVE-ITEM\n\n```powershell\n# Works like any other item type\n# Removes MySymLinkFile.txt\nRemove-Item C:\\Temp\\MySymLinkFile.txt\n\n# Returns an error as this is a reparse point.\nRemove-Item C:\\Temp\\MySymLinkDir\n\n# Removes the files in the target directory and MySymLinkDir\nRemove-Item C:\\Temp\\MySymLinkDir -Force\n```\n"}