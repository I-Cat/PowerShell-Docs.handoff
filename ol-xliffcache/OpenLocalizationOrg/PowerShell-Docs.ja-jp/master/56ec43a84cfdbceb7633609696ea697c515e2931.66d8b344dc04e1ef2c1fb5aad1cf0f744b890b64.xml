{"nodes":[{"content":"Import-DscResource keyword supports -ModuleVersion parameter","pos":[2,62]},{"content":"We have added a new parameter to the <ph id=\"ph1\">`Import-DscResource`</ph> dynamic keyword available when authoring DSC configurations.","pos":[64,182],"source":"We have added a new parameter to the `Import-DscResource` dynamic keyword available when authoring DSC configurations."},{"content":"Configuration authors can now specify exactly which module version to load the DSC resources from.","pos":[183,282],"source":" Configuration authors can now specify exactly which module version to \nload the DSC resources from."},{"content":"The new syntax of the keyword is:","pos":[283,316]},{"pos":[447,498],"content":"<bpt id=\"p1\">**</bpt>Name<ept id=\"p1\">**</ept>: Names of one or more reosurces to import.","source":"**Name**: Names of one or more reosurces to import."},{"pos":[501,594],"content":"<bpt id=\"p1\">**</bpt>ModuleName<ept id=\"p1\">**</ept>: Module names or ModuleSpecification objects of one or more modules to import.","source":"**ModuleName**: Module names or ModuleSpecification objects of one or more modules to import."},{"content":"<bpt id=\"p1\">**</bpt>ModuleVersion<ept id=\"p1\">**</ept>: Version of module ot import.","pos":[597,644],"source":"**ModuleVersion**: Version of module ot import."},{"content":"If used, ModuleName must represent only one module by name.","pos":[645,704]},{"content":"In the Windows PowerShell ISE, it shows up with IntelliSense:","pos":[707,768]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>: the <ph id=\"ph1\">`–ModuleVersion`</ph> parameter can only be used in combination with the <ph id=\"ph2\">`–ModuleName`</ph> parameter.","pos":[820,926],"source":"**Note**: the `–ModuleVersion` parameter can only be used in combination with the `–ModuleName` parameter."},{"content":"It cannot be used with resource names using only the <ph id=\"ph1\">`–Name`</ph> parameter.","pos":[927,998],"source":" It cannot be used with resource names using only the `–Name` parameter."},{"pos":[1000,1202],"content":"Before this, the only way to specify the module version when loading DSC resources was by using the Module specification object e.g.: <ph id=\"ph1\">`–ModuleName @{ModuleName=\"UserConfigProvider\";ModuleVersion=\"3.0\"}`</ph>","source":"Before this, the only way to specify the module version when loading DSC resources was by using the Module specification object e.g.: `–ModuleName @{ModuleName=\"UserConfigProvider\";ModuleVersion=\"3.0\"}`"}],"content":"# Import-DscResource keyword supports -ModuleVersion parameter\n\nWe have added a new parameter to the `Import-DscResource` dynamic keyword available when authoring DSC configurations. Configuration authors can now specify exactly which module version to \nload the DSC resources from. The new syntax of the keyword is:\n\n```powershell\nImport-DscResource [-Name <ResourceName(s)>] [-ModuleName <ModuleName(s)>] [-ModuleVersion <ModuleVersion>]\n```\n\n* **Name**: Names of one or more reosurces to import.\n* **ModuleName**: Module names or ModuleSpecification objects of one or more modules to import.\n* **ModuleVersion**: Version of module ot import. If used, ModuleName must represent only one module by name. \n\nIn the Windows PowerShell ISE, it shows up with IntelliSense:\n\n![](../images/Import-DscResource-Modversion.jpg)\n\n**Note**: the `–ModuleVersion` parameter can only be used in combination with the `–ModuleName` parameter. It cannot be used with resource names using only the `–Name` parameter.\n\nBefore this, the only way to specify the module version when loading DSC resources was by using the Module specification object e.g.: `–ModuleName @{ModuleName=\"UserConfigProvider\";ModuleVersion=\"3.0\"}`\n\n"}