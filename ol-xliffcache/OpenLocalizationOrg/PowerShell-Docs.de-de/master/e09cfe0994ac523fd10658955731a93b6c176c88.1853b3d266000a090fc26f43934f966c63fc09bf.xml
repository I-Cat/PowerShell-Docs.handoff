{"nodes":[{"pos":[11,54],"content":"FullyQuilifiedModuleName for 'using module'","needQuote":true,"nodes":[{"content":"FullyQuilifiedModuleName for 'using module'","pos":[0,43]}]},{"content":"FullyQuilifiedModuleName for 'using module'","pos":[93,136]},{"pos":[164,257],"content":"Now <ph id=\"ph1\">`using module`</ph> behaives the same way as other module-related constructions in PowerShell.","source":"Now `using module` behaives the same way as other module-related constructions in PowerShell."},{"content":"WMF 5.0 Problems","pos":[259,275]},{"pos":[290,358],"content":"User doesn't have a way to specify module version in <ph id=\"ph1\">`using module`</ph>.","source":"User doesn't have a way to specify module version in `using module`."},{"content":"If there are multiply versions of the module available on the system, user will get an error.","pos":[361,454]},{"content":"WMF 5.1","pos":[456,463]},{"content":"User can use <ph id=\"ph1\">`ModuleSpecification`</ph> <bpt id=\"p1\">[</bpt>hashtable<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/jj136290(v=vs.85).aspx)</ept>.","pos":[478,590],"source":"User can use `ModuleSpecification` [hashtable](https://msdn.microsoft.com/en-us/library/jj136290(v=vs.85).aspx)."},{"content":"This hashtable has the same format as <ph id=\"ph1\">`Get-Module -FullyQualifiedName`</ph>","pos":[591,662],"source":" \nThis hashtable has the same format as `Get-Module -FullyQualifiedName`"},{"pos":[664,745],"content":"<bpt id=\"p1\">**</bpt>Example:<ept id=\"p1\">**</ept> <ph id=\"ph1\">`using module @{ModuleName = 'PSReadLine'; RequiredVersion = '1.1'}`</ph>","source":"**Example:** `using module @{ModuleName = 'PSReadLine'; RequiredVersion = '1.1'}`"},{"pos":[749,878],"content":"If there are multiply versions of the module, powershell uses <bpt id=\"p1\">**</bpt>same resolution logic<ept id=\"p1\">**</ept> as <ph id=\"ph1\">`Import-Module`</ph> and doesn't error out.","source":"If there are multiply versions of the module, powershell uses **same resolution logic** as `Import-Module` and doesn't error out."},{"pos":[882,963],"content":"This makes <ph id=\"ph1\">`using module`</ph> alligned with <ph id=\"ph2\">`Import-Module`</ph> and <ph id=\"ph3\">`Import-DscResource`</ph>.","source":"This makes `using module` alligned with `Import-Module` and `Import-DscResource`."}],"content":"---\ntitle: FullyQuilifiedModuleName for 'using module'\nauthor: jaimeo\ncontributor: vors\n---\n\nFullyQuilifiedModuleName for 'using module'\n=========================\n\nNow `using module` behaives the same way as other module-related constructions in PowerShell.\n\nWMF 5.0 Problems\n----------\n\n* User doesn't have a way to specify module version in `using module`.\n* If there are multiply versions of the module available on the system, user will get an error.\n\nWMF 5.1\n----------\n\n* User can use `ModuleSpecification` [hashtable](https://msdn.microsoft.com/en-us/library/jj136290(v=vs.85).aspx). \nThis hashtable has the same format as `Get-Module -FullyQualifiedName`\n\n**Example:** `using module @{ModuleName = 'PSReadLine'; RequiredVersion = '1.1'}`\n\n* If there are multiply versions of the module, powershell uses **same resolution logic** as `Import-Module` and doesn't error out.\n\n* This makes `using module` alligned with `Import-Module` and `Import-DscResource`.\n"}