{"nodes":[{"pos":[13,45],"content":"Setting up a DSC SMB pull server","needQuote":true,"nodes":[{"content":"Setting up a DSC SMB pull server","pos":[0,32]}]},{"pos":[78,92],"content":"powershell,DSC","needQuote":true,"nodes":[{"content":"powershell,DSC","pos":[0,14]}]},{"content":"Setting up a DSC SMB pull server","pos":[190,222]},{"content":"Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0","pos":[225,283]},{"pos":[285,501],"content":"A DSC <bpt id=\"p1\">[</bpt>SMB<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/hh831795.aspx)</ept> pull server is an SMB file share that makes DSC configuration files and/or DSC resources available to target nodes when those nodes ask for them.","source":"A DSC [SMB](https://technet.microsoft.com/en-us/library/hh831795.aspx) pull server is an SMB file share that makes DSC configuration files and/or DSC resources\navailable to target nodes when those nodes ask for them."},{"content":"To use an SMB pull server for DSC, you have to:","pos":[503,550]},{"content":"Set up an SMB file share on a server running PowerShell 4.0 or higher","pos":[553,622]},{"content":"Configure a client running PowerShell 4.0 or higher to pull from that SMB share","pos":[625,704]},{"content":"Using the xSmbShare resource to create an SMB file share","pos":[709,765]},{"content":"There are a number of ways to set up an SMB file share, but let's look at how you can do this by using DSC.","pos":[767,874]},{"content":"Install the xSmbShare resource","pos":[880,910]},{"pos":[912,1040],"content":"Call the <bpt id=\"p1\">[</bpt>Install-Module<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/dn807162.aspx)</ept> cmdlet to install the <bpt id=\"p2\">**</bpt>xSmbShare<ept id=\"p2\">**</ept> module.","source":"Call the [Install-Module](https://technet.microsoft.com/en-us/library/dn807162.aspx) cmdlet to install the **xSmbShare** module."},{"pos":[1042,1447],"content":"**Note**: **Install-Module** is included in the **PowerShellGet** module, which is included in PowerShell 5.0. You can download the **PowerShellGet** module for PowerShell 3.0 and 4.0\nat [PackageManagement PowerShell Modules Preview](https://www.microsoft.com/en-us/download/details.aspx?id=49186). The **xSmbShare** contains the DSC resource **xSmbShare**, which can be used\nto create an SMB file share.","leadings":["",">",""],"nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>: <bpt id=\"p2\">**</bpt>Install-Module<ept id=\"p2\">**</ept> is included in the <bpt id=\"p3\">**</bpt>PowerShellGet<ept id=\"p3\">**</ept> module, which is included in PowerShell 5.0.","pos":[0,110],"source":"**Note**: **Install-Module** is included in the **PowerShellGet** module, which is included in PowerShell 5.0."},{"content":"You can download the <bpt id=\"p1\">**</bpt>PowerShellGet<ept id=\"p1\">**</ept> module for PowerShell 3.0 and 4.0 at <bpt id=\"p2\">[</bpt>PackageManagement PowerShell Modules Preview<ept id=\"p2\">](https://www.microsoft.com/en-us/download/details.aspx?id=49186)</ept>.","pos":[111,298],"source":" You can download the **PowerShellGet** module for PowerShell 3.0 and 4.0\nat [PackageManagement PowerShell Modules Preview](https://www.microsoft.com/en-us/download/details.aspx?id=49186)."},{"content":"The <bpt id=\"p1\">**</bpt>xSmbShare<ept id=\"p1\">**</ept> contains the DSC resource <bpt id=\"p2\">**</bpt>xSmbShare<ept id=\"p2\">**</ept>, which can be used to create an SMB file share.","pos":[299,404],"source":" The **xSmbShare** contains the DSC resource **xSmbShare**, which can be used\nto create an SMB file share."}]},{"content":"Create the directory and file share","pos":[1453,1488]},{"pos":[1490,1654],"content":"The following configuration uses the <bpt id=\"p1\">[</bpt>File<ept id=\"p1\">](fileResource.md)</ept> resource to create the directory for the share, and the <bpt id=\"p2\">**</bpt>xSmbShare<ept id=\"p2\">**</ept> resource to set up the SMB share:","source":"The following configuration uses the [File](fileResource.md) resource to create the directory for the share, and the **xSmbShare** resource to set up the SMB share:"},{"content":"The configuration creates the directory <ph id=\"ph1\">`C:\\DscSmbShare`</ph> if it doesn't already exists, and then uses that directory as an SMB file share.","pos":[2333,2470],"source":"The configuration creates the directory `C:\\DscSmbShare` if it doesn't already exists, and then uses that directory as an SMB file share."},{"content":"<bpt id=\"p1\">**</bpt>FullAccess<ept id=\"p1\">**</ept> should be given to any account that needs to write to or delete from the file share, and <bpt id=\"p2\">**</bpt>ReadAccess<ept id=\"p2\">**</ept> must be given to any client nodes that will get configurations and/or DSC resources from the share ( this is because DSC runs as the system account by default, so the computer itself has to have access to the share).","pos":[2471,2806],"source":"**FullAccess** should be given to any\naccount that needs to write to or delete from the file share, and **ReadAccess** must be given to any client nodes that will get configurations and/or DSC resources from the share (\nthis is because DSC runs as the system account by default, so the computer itself has to have access to the share)."},{"content":"Give file system access to the pull client","pos":[2813,2855]},{"content":"Giving <bpt id=\"p1\">**</bpt>ReadAccess<ept id=\"p1\">**</ept> to a client node allows that node to access the SMB share, but not to files or folders within that share.","pos":[2857,2984],"source":"Giving **ReadAccess** to a client node allows that node to access the SMB share, but not to files or folders within that share."},{"content":"You have to explicitly grant client nodes access to the SMB share folder and sub-folders.","pos":[2985,3074],"source":" You have to explicitly grant client nodes access to the SMB share\nfolder and sub-folders."},{"content":"We can do this with DSC by adding using the <bpt id=\"p1\">**</bpt>cNtfsPermissionEntry<ept id=\"p1\">**</ept> resource, which is contained in the <bpt id=\"p2\">[</bpt>CNtfsAccessControl<ept id=\"p2\">](https://www.powershellgallery.com/packages/cNtfsAccessControl/1.2.0)</ept> module.","pos":[3075,3277],"source":" We can do this with DSC by adding using the **cNtfsPermissionEntry** resource, which is contained in the [CNtfsAccessControl](https://www.powershellgallery.com/packages/cNtfsAccessControl/1.2.0)\nmodule."},{"content":"The following configuration adds a <bpt id=\"p1\">**</bpt>cNtfsPermissionEntry<ept id=\"p1\">**</ept> block that grants ReadAndExecute access to the pull client:","pos":[3278,3397],"source":" The following configuration adds a **cNtfsPermissionEntry** block that grants ReadAndExecute access to the pull client:"},{"content":"Placing configurations and resources","pos":[4662,4698]},{"content":"Save any configuration MOF files and/or DSC resources that you want client nodes to pull in the SMB share folder.","pos":[4700,4813]},{"content":"Any configuration MOF file must be named <bpt id=\"p1\">_</bpt>ConfigurationID<ept id=\"p1\">_</ept>.mof, where <bpt id=\"p2\">_</bpt>ConfigurationID<ept id=\"p2\">_</ept> is the value of the <bpt id=\"p3\">**</bpt>ConfigurationID<ept id=\"p3\">**</ept> property of the target node's LCM.","pos":[4815,4977],"source":"Any configuration MOF file must be named _ConfigurationID_.mof, where _ConfigurationID_ is the value of the **ConfigurationID** property of the target node's LCM."},{"content":"For more information about setting up pull clients, see <bpt id=\"p1\">[</bpt>Setting up a pull client using configuration ID<ept id=\"p1\">](pullClientConfigID.md)</ept>.","pos":[4978,5107],"source":" For more information about\nsetting up pull clients, see [Setting up a pull client using configuration ID](pullClientConfigID.md)."},{"content":"<bpt id=\"p1\">**</bpt>Note:<ept id=\"p1\">**</ept> You must use configuration IDs if you are using an SMB pull server.","pos":[5110,5187],"source":"**Note:** You must use configuration IDs if you are using an SMB pull server."},{"content":"Configuration names are not supported for SMB.","pos":[5188,5234]},{"pos":[5236,5335],"content":"Any resources needed by the client must be placed in the SMB share folder as archived <ph id=\"ph1\">`.zip`</ph> files.","source":"Any resources needed by the client must be placed in the SMB share folder as archived `.zip` files."},{"content":"Creating the MOF checksum","pos":[5342,5367]},{"content":"A configuration MOF file needs to be paired with a checksum file so that an LCM on a target node can validate the configuration.","pos":[5368,5496]},{"content":"To create a checksum, call the <bpt id=\"p1\">[</bpt>New-DSCCheckSum<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/dn521622.aspx)</ept> cmdlet.","pos":[5497,5613],"source":" \nTo create a checksum, call the [New-DSCCheckSum](https://technet.microsoft.com/en-us/library/dn521622.aspx) cmdlet."},{"content":"The cmdlet takes a <bpt id=\"p1\">**</bpt>Path<ept id=\"p1\">**</ept> parameter that specifies the folder where the configuration MOF is located.","pos":[5614,5718],"source":" The cmdlet takes a **Path** parameter that specifies the folder \nwhere the configuration MOF is located."},{"content":"The cmdlet creates a checksum file named <ph id=\"ph1\">`ConfigurationMOFName.mof.checksum`</ph>, where <ph id=\"ph2\">`ConfigurationMOFName`</ph> is the name of the configuration mof file.","pos":[5719,5868],"source":" The cmdlet creates a checksum file named `ConfigurationMOFName.mof.checksum`, where `ConfigurationMOFName` is the name of the configuration mof file."},{"content":"If there are more than one configuration MOF files in the specified folder, a checksum is created for each configuration in the folder.","pos":[5869,6005],"source":" \nIf there are more than one configuration MOF files in the specified folder, a checksum is created for each configuration in the folder."},{"pos":[6007,6233],"content":"The checksum file must be present in the same directory as the configuration MOF file (<ph id=\"ph1\">`$env:PROGRAMFILES\\WindowsPowerShell\\DscService\\Configuration`</ph> by default), and have the same name with the <ph id=\"ph2\">`.checksum`</ph> extension appended.","source":"The checksum file must be present in the same directory as the configuration MOF file (`$env:PROGRAMFILES\\WindowsPowerShell\\DscService\\Configuration` by default), and have the same name with the `.checksum` extension appended."},{"pos":[6236,6340],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>: If you change the configuration MOF file in any way, you must also recreate the checksum file.","source":"**Note**: If you change the configuration MOF file in any way, you must also recreate the checksum file."},{"content":"Acknowledgements","pos":[6345,6361]},{"content":"Special thanks to the following:","pos":[6363,6395]},{"content":"Mike F. Robbins, whose posts on using SMB for DSC helped inform the content in this topic.","pos":[6399,6489]},{"content":"His blog is at <bpt id=\"p1\">[</bpt>Mike F Robbins<ept id=\"p1\">](http://mikefrobbins.com/)</ept>.","pos":[6490,6548],"source":" His blog is at [Mike F Robbins](http://mikefrobbins.com/)."},{"content":"Serge Nikalaichyk, who authored the <bpt id=\"p1\">**</bpt>cNtfsAccessControl<ept id=\"p1\">**</ept> module.","pos":[6551,6617],"source":"Serge Nikalaichyk, who authored the **cNtfsAccessControl** module."},{"content":"The source for this module is at https://github.com/SNikalaichyk/cNtfsAccessControl.","pos":[6618,6702]},{"content":"See also","pos":[6707,6715]},{"pos":[6718,6788],"content":"<bpt id=\"p1\">[</bpt>Windows PowerShell Desired State Configuration Overview<ept id=\"p1\">](overview.md)</ept>","source":"[Windows PowerShell Desired State Configuration Overview](overview.md)"},{"pos":[6791,6843],"content":"<bpt id=\"p1\">[</bpt>Enacting configurations<ept id=\"p1\">](enactingConfigurations.md)</ept>","source":"[Enacting configurations](enactingConfigurations.md)"},{"pos":[6846,6918],"content":"<bpt id=\"p1\">[</bpt>Setting up a pull client using configuration ID<ept id=\"p1\">](pullClientConfigID.md)</ept>","source":"[Setting up a pull client using configuration ID](pullClientConfigID.md)"}],"content":"---\ntitle:   Setting up a DSC SMB pull server\nms.date:  2016-05-16\nkeywords:  powershell,DSC\ndescription:  \nms.topic:  article\nauthor:  eslesar\nmanager:  dongill\nms.prod:  powershell\n---\n\n# Setting up a DSC SMB pull server\n\n>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0\n\nA DSC [SMB](https://technet.microsoft.com/en-us/library/hh831795.aspx) pull server is an SMB file share that makes DSC configuration files and/or DSC resources\navailable to target nodes when those nodes ask for them.\n\nTo use an SMB pull server for DSC, you have to:\n- Set up an SMB file share on a server running PowerShell 4.0 or higher\n- Configure a client running PowerShell 4.0 or higher to pull from that SMB share\n\n## Using the xSmbShare resource to create an SMB file share\n\nThere are a number of ways to set up an SMB file share, but let's look at how you can do this by using DSC.\n\n### Install the xSmbShare resource\n\nCall the [Install-Module](https://technet.microsoft.com/en-us/library/dn807162.aspx) cmdlet to install the **xSmbShare** module.\n>**Note**: **Install-Module** is included in the **PowerShellGet** module, which is included in PowerShell 5.0. You can download the **PowerShellGet** module for PowerShell 3.0 and 4.0\n>at [PackageManagement PowerShell Modules Preview](https://www.microsoft.com/en-us/download/details.aspx?id=49186). The **xSmbShare** contains the DSC resource **xSmbShare**, which can be used\nto create an SMB file share.\n\n### Create the directory and file share\n\nThe following configuration uses the [File](fileResource.md) resource to create the directory for the share, and the **xSmbShare** resource to set up the SMB share:\n\n```powershell\nConfiguration SmbShare {\n\nImport-DscResource -ModuleName PSDesiredStateConfiguration\nImport-DscResource -ModuleName xSmbShare\n \n    Node localhost {\n \n        File CreateFolder {\n \n            DestinationPath = 'C:\\DscSmbShare'\n            Type = 'Directory'\n            Ensure = 'Present'\n \n        }\n \n        xSMBShare CreateShare {\n \n            Name = 'DscSmbShare'\n            Path = 'C:\\DscSmbShare'\n            FullAccess = 'admininstrator'\n            ReadAccess = 'myDomain\\Contoso-Server$'\n            FolderEnumerationMode = 'AccessBased'\n            Ensure = 'Present'\n            DependsOn = '[File]CreateFolder'\n \n        }\n        \n    }\n \n}\n```\n\nThe configuration creates the directory `C:\\DscSmbShare` if it doesn't already exists, and then uses that directory as an SMB file share. **FullAccess** should be given to any\naccount that needs to write to or delete from the file share, and **ReadAccess** must be given to any client nodes that will get configurations and/or DSC resources from the share (\nthis is because DSC runs as the system account by default, so the computer itself has to have access to the share).\n\n\n### Give file system access to the pull client\n\nGiving **ReadAccess** to a client node allows that node to access the SMB share, but not to files or folders within that share. You have to explicitly grant client nodes access to the SMB share\nfolder and sub-folders. We can do this with DSC by adding using the **cNtfsPermissionEntry** resource, which is contained in the [CNtfsAccessControl](https://www.powershellgallery.com/packages/cNtfsAccessControl/1.2.0)\nmodule. The following configuration adds a **cNtfsPermissionEntry** block that grants ReadAndExecute access to the pull client:\n\n```powershell\nConfiguration DSCSMB {\n\nImport-DscResource -ModuleName PSDesiredStateConfiguration\nImport-DscResource -ModuleName xSmbShare\nImport-DscResource -ModuleName cNtfsAccessControl\n \n    Node localhost {\n \n        File CreateFolder {\n \n            DestinationPath = 'DscSmbShare'\n            Type = 'Directory'\n            Ensure = 'Present'\n \n        }\n \n        xSMBShare CreateShare {\n \n            Name = 'DscSmbShare'\n            Path = 'DscSmbShare'\n            FullAccess = 'administrator'\n            ReadAccess = 'myDomain\\Contoso-Server$'\n            FolderEnumerationMode = 'AccessBased'\n            Ensure = 'Present'\n            DependsOn = '[File]CreateFolder'\n \n        }\n\n        cNtfsPermissionEntry PermissionSet1 {\n            \n        Ensure = 'Present'\n        Path = 'C:\\DSCSMB'\n        Principal = 'myDomain\\Contoso-Server$'\n        AccessControlInformation = @(\n            cNtfsAccessControlInformation\n            {\n                AccessControlType = 'Allow'\n                FileSystemRights = 'ReadAndExecute'\n                Inheritance = 'ThisFolderSubfoldersAndFiles'\n                NoPropagateInherit = $false\n            }\n        )\n        DependsOn = '[File]CreateFolder'\n        \n        }\n \n        \n    }\n \n}\n```\n\n## Placing configurations and resources\n\nSave any configuration MOF files and/or DSC resources that you want client nodes to pull in the SMB share folder.\n\nAny configuration MOF file must be named _ConfigurationID_.mof, where _ConfigurationID_ is the value of the **ConfigurationID** property of the target node's LCM. For more information about\nsetting up pull clients, see [Setting up a pull client using configuration ID](pullClientConfigID.md).\n\n>**Note:** You must use configuration IDs if you are using an SMB pull server. Configuration names are not supported for SMB.\n\nAny resources needed by the client must be placed in the SMB share folder as archived `.zip` files.  \n\n## Creating the MOF checksum\nA configuration MOF file needs to be paired with a checksum file so that an LCM on a target node can validate the configuration. \nTo create a checksum, call the [New-DSCCheckSum](https://technet.microsoft.com/en-us/library/dn521622.aspx) cmdlet. The cmdlet takes a **Path** parameter that specifies the folder \nwhere the configuration MOF is located. The cmdlet creates a checksum file named `ConfigurationMOFName.mof.checksum`, where `ConfigurationMOFName` is the name of the configuration mof file. \nIf there are more than one configuration MOF files in the specified folder, a checksum is created for each configuration in the folder.\n\nThe checksum file must be present in the same directory as the configuration MOF file (`$env:PROGRAMFILES\\WindowsPowerShell\\DscService\\Configuration` by default), and have the same name with the `.checksum` extension appended.\n\n>**Note**: If you change the configuration MOF file in any way, you must also recreate the checksum file.\n\n## Acknowledgements\n\nSpecial thanks to the following:\n\n- Mike F. Robbins, whose posts on using SMB for DSC helped inform the content in this topic. His blog is at [Mike F Robbins](http://mikefrobbins.com/).\n- Serge Nikalaichyk, who authored the **cNtfsAccessControl** module. The source for this module is at https://github.com/SNikalaichyk/cNtfsAccessControl.\n\n## See also\n- [Windows PowerShell Desired State Configuration Overview](overview.md)\n- [Enacting configurations](enactingConfigurations.md)\n- [Setting up a pull client using configuration ID](pullClientConfigID.md)\n\n \n"}