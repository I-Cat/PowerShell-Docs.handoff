{"nodes":[{"pos":[13,54],"content":"Console Improvements in WMF 5.1 (Preview)","needQuote":true,"nodes":[{"content":"Console Improvements in WMF 5.1 (Preview)","pos":[0,41]}]},{"pos":[87,107],"content":"PowerShell, DSC, WMF","needQuote":true,"nodes":[{"content":"PowerShell, DSC, WMF","pos":[0,20]}]},{"content":"Console Improvements in WMF 5.1 (Preview)","pos":[223,264]},{"content":"PowerShell console improvements","pos":[270,301]},{"content":"The following changes have been made to powershell.exe in WMF 5.1 to improve the console experience:","pos":[303,403]},{"content":"VT100 support","pos":[408,421]},{"content":"Windows 10 added support for <bpt id=\"p1\">[</bpt>VT100 escape sequences<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/windows/desktop/mt638032(v=vs.85).aspx)</ept>.","pos":[423,558],"source":"Windows 10 added support for [VT100 escape sequences](https://msdn.microsoft.com/en-us/library/windows/desktop/mt638032(v=vs.85).aspx)."},{"content":"PowerShell will ignore certain VT100 formatting escape sequences when calculating table widths.","pos":[559,654],"source":"\nPowerShell will ignore certain VT100 formatting escape sequences when calculating table widths."},{"content":"PowerShell also added a new API that can be used in formatting code to determine if VT100 is supported.","pos":[656,759]},{"content":"For example:","pos":[760,773],"source":" \nFor example:"},{"content":"Here is a complete <bpt id=\"p1\">[</bpt>example<ept id=\"p1\">](https://gist.github.com/lzybkr/dcb973dccd54900b67783c48083c28f7)</ept> that can be used to highlight matches from Select-String.","pos":[918,1069],"source":"Here is a complete [example](https://gist.github.com/lzybkr/dcb973dccd54900b67783c48083c28f7) that can be used to highlight matches from Select-String."},{"content":"Save the example in a file named <ph id=\"ph1\">`MatchInfo.format.ps1xml`</ph>, then to use it, in your profile or elsewhere, run <ph id=\"ph2\">`Update-FormatData -Prepend MatchInfo.format.ps1xml`</ph>.","pos":[1070,1233],"source":"\nSave the example in a file named `MatchInfo.format.ps1xml`, then to use it, in your profile or elsewhere, run `Update-FormatData -Prepend MatchInfo.format.ps1xml`."},{"pos":[1235,1379],"content":"Note that VT100 escape sequences are only supported starting with the Windows 10 Anniversary update; they are not supported on earlier systems.","source":"Note that VT100 escape sequences are only supported starting with the Windows 10 Anniversary update; \nthey are not supported on earlier systems."},{"content":"Vi mode support in PSReadline","pos":[1388,1417]},{"content":"<bpt id=\"p1\">[</bpt>PSReadline<ept id=\"p1\">](https://github.com/lzybkr/PSReadLine)</ept> adds support for vi mode.","pos":[1419,1495],"source":"[PSReadline](https://github.com/lzybkr/PSReadLine) adds support for vi mode."},{"content":"To use vi mode, run <ph id=\"ph1\">`Set-PSReadline -EditMode vi`</ph>.","pos":[1496,1546],"source":" To use vi mode, run `Set-PSReadline -EditMode vi`."},{"content":"Redirected stdin with interactive input","pos":[1552,1591]},{"pos":[1594,1747],"content":"In earlier versions, starting PowerShell with <ph id=\"ph1\">`powershell -File -`</ph> was required when stdin was redirected and you wanted to enter commands interactively.","source":"In earlier versions, starting PowerShell with `powershell -File -` was required when stdin was redirected and\nyou wanted to enter commands interactively."},{"content":"With WMF 5.1, this hard to discover option is no longer necessary.","pos":[1749,1815]},{"content":"You can start PowerShell without any options, e.g. <ph id=\"ph1\">`powershell`</ph>.","pos":[1816,1881],"source":" \nYou can start PowerShell without any options, e.g. `powershell`."},{"content":"Note that PSReadline does not currently support redirected stdin, and the built-in command-line editing experience with redirected stdin is extremely limited, for example, arrow keys don't work.","pos":[1883,2077],"source":"Note that PSReadline does not currently support redirected stdin, and the built-in command-line editing experience with redirected\nstdin is extremely limited, for example, arrow keys don't work."},{"content":"A future release of PSReadline should address this issue.","pos":[2078,2136],"source":" \nA future release of PSReadline should address this issue."}],"content":"---\ntitle:   Console Improvements in WMF 5.1 (Preview)\nms.date:  2016-07-13\nkeywords:  PowerShell, DSC, WMF\ndescription:  \nms.topic:  article\nauthor:  keithb\nmanager:  dongill\nms.prod:  powershell\nms.technology: WMF\n---\n\n# Console Improvements in WMF 5.1 (Preview)#\n\n## PowerShell console improvements\n\nThe following changes have been made to powershell.exe in WMF 5.1 to improve the console experience:\n\n###VT100 support\n\nWindows 10 added support for [VT100 escape sequences](https://msdn.microsoft.com/en-us/library/windows/desktop/mt638032(v=vs.85).aspx).\nPowerShell will ignore certain VT100 formatting escape sequences when calculating table widths.\n\nPowerShell also added a new API that can be used in formatting code to determine if VT100 is supported. \nFor example:\n\n```\nif ($host.UI.SupportsVirtualTerminal)\n{\n    $esc = [char]0x1b\n    \"A yellow ${esc}[93mhello${esc}[0m\"\n}\nelse\n{\n    \"A default hello\"\n}\n```\nHere is a complete [example](https://gist.github.com/lzybkr/dcb973dccd54900b67783c48083c28f7) that can be used to highlight matches from Select-String.\nSave the example in a file named `MatchInfo.format.ps1xml`, then to use it, in your profile or elsewhere, run `Update-FormatData -Prepend MatchInfo.format.ps1xml`.\n\nNote that VT100 escape sequences are only supported starting with the Windows 10 Anniversary update; \nthey are not supported on earlier systems.   \n\n### Vi mode support in PSReadline\n\n[PSReadline](https://github.com/lzybkr/PSReadLine) adds support for vi mode. To use vi mode, run `Set-PSReadline -EditMode vi`.\n\n### Redirected stdin with interactive input \n\nIn earlier versions, starting PowerShell with `powershell -File -` was required when stdin was redirected and\nyou wanted to enter commands interactively.\n\nWith WMF 5.1, this hard to discover option is no longer necessary. \nYou can start PowerShell without any options, e.g. `powershell`.\n\nNote that PSReadline does not currently support redirected stdin, and the built-in command-line editing experience with redirected\nstdin is extremely limited, for example, arrow keys don't work. \nA future release of PSReadline should address this issue.   \n"}