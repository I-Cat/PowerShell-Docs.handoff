<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0aed5bb627825b74fe4df29cbe2f0bc53f90c23</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\secureMOF.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77a9a2dd6d9b73e55682c596bf5ab8b288ecb7e6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb04b258c0c33bf4ae03dc9b871b3039b00c21b8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Securing the MOF File</source>
          <target state="new">Securing the MOF File</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,DSC</source>
          <target state="new">powershell,DSC</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Securing the MOF File</source>
          <target state="new">Securing the MOF File</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="new">Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>DSC tells the target nodes what configuration they should have by sending a MOF file with that information to each node, where the Local Configuration Manager (LCM) implements the desired configuration.</source>
          <target state="new">DSC tells the target nodes what configuration they should have by sending a MOF file with that information to each node, where the Local Configuration Manager (LCM) implements the desired configuration.</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Because this file contains the details of the configuration, it’s important to keep it secure.</source>
          <target state="new">Because this file contains the details of the configuration, it’s important to keep it secure.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To do this, you can set the LCM to check the credentials of a user.</source>
          <target state="new">To do this, you can set the LCM to check the credentials of a user.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This topic describes how to transmit those credentials securely to the target node by encrypting them with certificates.</source>
          <target state="new">This topic describes how to transmit those credentials securely to the target node by encrypting them with certificates.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> This topic discusses certificates used for encryption.</source>
          <target state="new"><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept> This topic discusses certificates used for encryption.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For encryption, a self-signed certificate is sufficient, because the private key is always kept secret and encryption does not imply trust of the document.</source>
          <target state="new">For encryption, a self-signed certificate is sufficient, because the private key is always kept secret and encryption does not imply trust of the document.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Self-signed certificates should <bpt id="p1">*</bpt>not<ept id="p1">*</ept> be used for authentication purposes.</source>
          <target state="new">Self-signed certificates should <bpt id="p1">*</bpt>not<ept id="p1">*</ept> be used for authentication purposes.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You should use a certificate from a trusted Certification Authority (CA) for any authentication purposes.</source>
          <target state="new">You should use a certificate from a trusted Certification Authority (CA) for any authentication purposes.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="new">Prerequisites</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To successfully encrypt the credentials used to secure a DSC configuration, make sure you have the following:</source>
          <target state="new">To successfully encrypt the credentials used to secure a DSC configuration, make sure you have the following:</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Some means of issuing and distributing certificates<ept id="p1">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Some means of issuing and distributing certificates<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This topic and its examples assume you are using Active Directory Certification Authority.</source>
          <target state="new">This topic and its examples assume you are using Active Directory Certification Authority.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more background information on Active Directory Certificate Services, see <bpt id="p1">[</bpt>Active Directory Certificate Services Overview<ept id="p1">](https://technet.microsoft.com/library/hh831740.aspx)</ept> and <bpt id="p2">[</bpt>Active Directory Certificate Services in Windows Server 2008<ept id="p2">](https://technet.microsoft.com/windowsserver/dd448615.aspx)</ept>.</source>
          <target state="new">For more background information on Active Directory Certificate Services, see <bpt id="p1">[</bpt>Active Directory Certificate Services Overview<ept id="p1">](https://technet.microsoft.com/library/hh831740.aspx)</ept> and <bpt id="p2">[</bpt>Active Directory Certificate Services in Windows Server 2008<ept id="p2">](https://technet.microsoft.com/windowsserver/dd448615.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Administrative access to the target node or nodes<ept id="p1">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Administrative access to the target node or nodes<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Each target node has an encryption-capable certificate saved its Personal Store<ept id="p1">**</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Each target node has an encryption-capable certificate saved its Personal Store<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, the path to the store is Cert:\LocalMachine\My.</source>
          <target state="new">In Windows PowerShell, the path to the store is Cert:\LocalMachine\My.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The examples in this topic use the “workstation authentication” template, which you can find (along with other certificate templates) at <bpt id="p1">[</bpt>Default Certificate Templates<ept id="p1">](https://technet.microsoft.com/library/cc740061(v=WS.10).aspx)</ept>.</source>
          <target state="new">The examples in this topic use the “workstation authentication” template, which you can find (along with other certificate templates) at <bpt id="p1">[</bpt>Default Certificate Templates<ept id="p1">](https://technet.microsoft.com/library/cc740061(v=WS.10).aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you will be running this configuration on a computer other than the target node, <bpt id="p1">**</bpt>export the public key of the certificate<ept id="p1">**</ept>, and then import it to the computer you will run the configuration from.</source>
          <target state="new">If you will be running this configuration on a computer other than the target node, <bpt id="p1">**</bpt>export the public key of the certificate<ept id="p1">**</ept>, and then import it to the computer you will run the configuration from.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Make sure that you export only the <bpt id="p1">**</bpt>public<ept id="p1">**</ept> key; keep the private key secure.</source>
          <target state="new">Make sure that you export only the <bpt id="p1">**</bpt>public<ept id="p1">**</ept> key; keep the private key secure.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Overall process</source>
          <target state="new">Overall process</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Set up the certificates, keys, and thumbprints, making sure that each target node has copies of the certificate and the configuration computer has the public key and thumbprint.</source>
          <target state="new">Set up the certificates, keys, and thumbprints, making sure that each target node has copies of the certificate and the configuration computer has the public key and thumbprint.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Create a configuration data block that contains the path and thumbprint of the public key.</source>
          <target state="new">Create a configuration data block that contains the path and thumbprint of the public key.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Create a configuration script that defines your desired configuration for the target node and sets up decryption on the target nodes by commanding the Local Configuration manager to decrypt the configuration data using the certificate and its thumbprint.</source>
          <target state="new">Create a configuration script that defines your desired configuration for the target node and sets up decryption on the target nodes by commanding the Local Configuration manager to decrypt the configuration data using the certificate and its thumbprint.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Run the configuration, which will set the Local Configuration Manager settings and start the DSC configuration.</source>
          <target state="new">Run the configuration, which will set the Local Configuration Manager settings and start the DSC configuration.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Diagram1</source>
          <target state="new">Diagram1</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Certificate Requirements</source>
          <target state="new">Certificate Requirements</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To enact credential encryption, a public key certificate must be available on the <bpt id="p1">_</bpt>Target Node<ept id="p1">_</ept> that is <bpt id="p2">**</bpt>trusted<ept id="p2">**</ept> by the computer being used to author the DSC configuration.</source>
          <target state="new">To enact credential encryption, a public key certificate must be available on the <bpt id="p1">_</bpt>Target Node<ept id="p1">_</ept> that is <bpt id="p2">**</bpt>trusted<ept id="p2">**</ept> by the computer being used to author the DSC configuration.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This public key certificate has specific requirements for it to be used for DSC credential encryption:</source>
          <target state="new">This public key certificate has specific requirements for it to be used for DSC credential encryption:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Key Usage<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Key Usage<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Must contain: 'KeyEncipherment' and 'DataEncipherment'.</source>
          <target state="new">Must contain: 'KeyEncipherment' and 'DataEncipherment'.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Should <bpt id="p1">_</bpt>not<ept id="p1">_</ept> contain: 'Digital Signature'.</source>
          <target state="new">Should <bpt id="p1">_</bpt>not<ept id="p1">_</ept> contain: 'Digital Signature'.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Enhanced Key Usage<ept id="p1">**</ept>:</source>
          <target state="new"><bpt id="p1">**</bpt>Enhanced Key Usage<ept id="p1">**</ept>:</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Must contain: Document Encryption (1.3.6.1.4.1.311.80.1).</source>
          <target state="new">Must contain: Document Encryption (1.3.6.1.4.1.311.80.1).</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Should <bpt id="p1">_</bpt>not<ept id="p1">_</ept> contain: Client Authentication (1.3.6.1.5.5.7.3.2) and Server Authentication (1.3.6.1.5.5.7.3.1).</source>
          <target state="new">Should <bpt id="p1">_</bpt>not<ept id="p1">_</ept> contain: Client Authentication (1.3.6.1.5.5.7.3.2) and Server Authentication (1.3.6.1.5.5.7.3.1).</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The Private Key for the certificate is available on the *Target Node_.</source>
          <target state="new">The Private Key for the certificate is available on the *Target Node_.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Provider<ept id="p1">**</ept> for the certificate must be "Microsoft RSA SChannel Cryptographic Provider".</source>
          <target state="new">The <bpt id="p1">**</bpt>Provider<ept id="p1">**</ept> for the certificate must be "Microsoft RSA SChannel Cryptographic Provider".</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Recommended Best Practice:<ept id="p1">**</ept> Although you can use a certificate with containing a Key Usage of 'Digital Signature' or one of the Authentication EKU's, this will enable the encryption key to be more easily misused and vulnerable to attack.</source>
          <target state="new"><bpt id="p1">**</bpt>Recommended Best Practice:<ept id="p1">**</ept> Although you can use a certificate with containing a Key Usage of 'Digital Signature' or one of the Authentication EKU's, this will enable the encryption key to be more easily misused and vulnerable to attack.</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>So it is best practice to use a certificate created specifically for the purpose of securing DSC credentials that omits these Key Usage and EKUs.</source>
          <target state="new">So it is best practice to use a certificate created specifically for the purpose of securing DSC credentials that omits these Key Usage and EKUs.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Any existing certificate on the <bpt id="p1">_</bpt>Target Node<ept id="p1">_</ept> that meets these criteria can be used to secure DSC credentials.</source>
          <target state="new">Any existing certificate on the <bpt id="p1">_</bpt>Target Node<ept id="p1">_</ept> that meets these criteria can be used to secure DSC credentials.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Certificate creation</source>
          <target state="new">Certificate creation</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>There are two approaches you can take to create and use the required Encryption Certificate (public-private key pair).</source>
          <target state="new">There are two approaches you can take to create and use the required Encryption Certificate (public-private key pair).</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Create it on the <bpt id="p1">**</bpt>Target Node<ept id="p1">**</ept> and export just the public key to the <bpt id="p2">**</bpt>Authoring Node<ept id="p2">**</ept></source>
          <target state="new">Create it on the <bpt id="p1">**</bpt>Target Node<ept id="p1">**</ept> and export just the public key to the <bpt id="p2">**</bpt>Authoring Node<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Create it on the <bpt id="p1">**</bpt>Authoring Node<ept id="p1">**</ept> and export the entire key pair to the <bpt id="p2">**</bpt>Target Node<ept id="p2">**</ept></source>
          <target state="new">Create it on the <bpt id="p1">**</bpt>Authoring Node<ept id="p1">**</ept> and export the entire key pair to the <bpt id="p2">**</bpt>Target Node<ept id="p2">**</ept></target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Method 1 is recommended because the private key used to decrypt credentials in the MOF stays on the Target Node at all times.</source>
          <target state="new">Method 1 is recommended because the private key used to decrypt credentials in the MOF stays on the Target Node at all times.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Creating the Certificate on the Target Node</source>
          <target state="new">Creating the Certificate on the Target Node</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The private key must be kept secret, because is used to decrypt the MOF on the <bpt id="p1">**</bpt>Target Node<ept id="p1">**</ept> The easiest way to do that is to create the private key certificate on the <bpt id="p2">**</bpt>Target Node<ept id="p2">**</ept>, and copy the <bpt id="p3">**</bpt>public key certificate<ept id="p3">**</ept> to the computer being used to author the DSC configuration into a MOF file.</source>
          <target state="new">The private key must be kept secret, because is used to decrypt the MOF on the <bpt id="p1">**</bpt>Target Node<ept id="p1">**</ept> The easiest way to do that is to create the private key certificate on the <bpt id="p2">**</bpt>Target Node<ept id="p2">**</ept>, and copy the <bpt id="p3">**</bpt>public key certificate<ept id="p3">**</ept> to the computer being used to author the DSC configuration into a MOF file.</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example:</source>
          <target state="new">The following example:</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>creates a certificate on the <bpt id="p1">**</bpt>Target node<ept id="p1">**</ept></source>
          <target state="new">creates a certificate on the <bpt id="p1">**</bpt>Target node<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>exports the public key certificate on the <bpt id="p1">**</bpt>Target node<ept id="p1">**</ept>.</source>
          <target state="new">exports the public key certificate on the <bpt id="p1">**</bpt>Target node<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>imports the public key certificate into the <bpt id="p1">**</bpt>my<ept id="p1">**</ept> certificate store on the <bpt id="p2">**</bpt>Authoring node<ept id="p2">**</ept>.</source>
          <target state="new">imports the public key certificate into the <bpt id="p1">**</bpt>my<ept id="p1">**</ept> certificate store on the <bpt id="p2">**</bpt>Authoring node<ept id="p2">**</ept>.</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>On the Target Node: create and export the certificate</source>
          <target state="new">On the Target Node: create and export the certificate</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Authoring Node: Windows Server 2016 and Windows 10</source>
          <target state="new">Authoring Node: Windows Server 2016 and Windows 10</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Once exported, the <ph id="ph1">```DscPublicKey.cer```</ph> would need to be copied to the <bpt id="p1">**</bpt>Authoring Node<ept id="p1">**</ept>.</source>
          <target state="new">Once exported, the <ph id="ph1">```DscPublicKey.cer```</ph> would need to be copied to the <bpt id="p1">**</bpt>Authoring Node<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Authoring Node: Windows Server 2012 R2/Windows 8.1 and earlier</source>
          <target state="new">Authoring Node: Windows Server 2012 R2/Windows 8.1 and earlier</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Because the New-SelfSignedCertificate cmdlet on Windows Operating Systems prior to Windows 10 and Windows Server 2016 do not support the <bpt id="p1">**</bpt>Type<ept id="p1">**</ept> parameter, an alternate method of creating this certificate is required on these operating systems.</source>
          <target state="new">Because the New-SelfSignedCertificate cmdlet on Windows Operating Systems prior to Windows 10 and Windows Server 2016 do not support the <bpt id="p1">**</bpt>Type<ept id="p1">**</ept> parameter, an alternate method of creating this certificate is required on these operating systems.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In this case you can use <ph id="ph1">```makecert.exe```</ph> or <ph id="ph2">```certutil.exe```</ph> to create the certificate.</source>
          <target state="new">In this case you can use <ph id="ph1">```makecert.exe```</ph> or <ph id="ph2">```certutil.exe```</ph> to create the certificate.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>An alternate method is to <bpt id="p1">[</bpt>download the New-SelfSignedCertificateEx.ps1 script from Microsoft Script Center<ept id="p1">](https://gallery.technet.microsoft.com/scriptcenter/Self-signed-certificate-5920a7c6)</ept> and use it to create the certificate instead:</source>
          <target state="new">An alternate method is to <bpt id="p1">[</bpt>download the New-SelfSignedCertificateEx.ps1 script from Microsoft Script Center<ept id="p1">](https://gallery.technet.microsoft.com/scriptcenter/Self-signed-certificate-5920a7c6)</ept> and use it to create the certificate instead:</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Once exported, the <ph id="ph1">```DscPublicKey.cer```</ph> would need to be copied to the <bpt id="p1">**</bpt>Authoring Node<ept id="p1">**</ept>.</source>
          <target state="new">Once exported, the <ph id="ph1">```DscPublicKey.cer```</ph> would need to be copied to the <bpt id="p1">**</bpt>Authoring Node<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>On the Authoring Node: import the cert’s public key</source>
          <target state="new">On the Authoring Node: import the cert’s public key</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Creating the Certificate on the Authoring Node</source>
          <target state="new">Creating the Certificate on the Authoring Node</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Alternately, the encryption certificate can be created on the <bpt id="p1">**</bpt>Authoring Node<ept id="p1">**</ept>, exported with the <bpt id="p2">**</bpt>private key<ept id="p2">**</ept> as a PFX file and then imported on the <bpt id="p3">**</bpt>Target Node<ept id="p3">**</ept>.</source>
          <target state="new">Alternately, the encryption certificate can be created on the <bpt id="p1">**</bpt>Authoring Node<ept id="p1">**</ept>, exported with the <bpt id="p2">**</bpt>private key<ept id="p2">**</ept> as a PFX file and then imported on the <bpt id="p3">**</bpt>Target Node<ept id="p3">**</ept>.</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This is the current method for implementing DSC credential encryption on <bpt id="p1">_</bpt>Nano Server<ept id="p1">_</ept>.</source>
          <target state="new">This is the current method for implementing DSC credential encryption on <bpt id="p1">_</bpt>Nano Server<ept id="p1">_</ept>.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Although the PFX is secured with a password it should be kept secure during transit.</source>
          <target state="new">Although the PFX is secured with a password it should be kept secure during transit.</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following example:</source>
          <target state="new">The following example:</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>creates a certificate on the <bpt id="p1">**</bpt>Authoring node<ept id="p1">**</ept>.</source>
          <target state="new">creates a certificate on the <bpt id="p1">**</bpt>Authoring node<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>exports the certificate including the private key on the <bpt id="p1">**</bpt>Authoring node<ept id="p1">**</ept>.</source>
          <target state="new">exports the certificate including the private key on the <bpt id="p1">**</bpt>Authoring node<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>removes the private key from the <bpt id="p1">**</bpt>Authoring node<ept id="p1">**</ept>, but keeps the public key certificate in the <bpt id="p2">**</bpt>my<ept id="p2">**</ept> store.</source>
          <target state="new">removes the private key from the <bpt id="p1">**</bpt>Authoring node<ept id="p1">**</ept>, but keeps the public key certificate in the <bpt id="p2">**</bpt>my<ept id="p2">**</ept> store.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>imports the private key certificate into the root certificate store on the <bpt id="p1">**</bpt>Target node<ept id="p1">**</ept>.</source>
          <target state="new">imports the private key certificate into the root certificate store on the <bpt id="p1">**</bpt>Target node<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>it must be added to the root store so that it will be trusted by the <bpt id="p1">**</bpt>Target node<ept id="p1">**</ept>.</source>
          <target state="new">it must be added to the root store so that it will be trusted by the <bpt id="p1">**</bpt>Target node<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>On the Authoring Node: create and export the certificate</source>
          <target state="new">On the Authoring Node: create and export the certificate</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Target Node: Windows Server 2016 and Windows 10</source>
          <target state="new">Target Node: Windows Server 2016 and Windows 10</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Once exported, the <ph id="ph1">```DscPrivateKey.cer```</ph> would need to be copied to the <bpt id="p1">**</bpt>Target Node<ept id="p1">**</ept>.</source>
          <target state="new">Once exported, the <ph id="ph1">```DscPrivateKey.cer```</ph> would need to be copied to the <bpt id="p1">**</bpt>Target Node<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Target Node: Windows Server 2012 R2/Windows 8.1 and earlier</source>
          <target state="new">Target Node: Windows Server 2012 R2/Windows 8.1 and earlier</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Because the New-SelfSignedCertificate cmdlet on Windows Operating Systems prior to Windows 10 and Windows Server 2016 do not support the <bpt id="p1">**</bpt>Type<ept id="p1">**</ept> parameter, an alternate method of creating this certificate is required on these operating systems.</source>
          <target state="new">Because the New-SelfSignedCertificate cmdlet on Windows Operating Systems prior to Windows 10 and Windows Server 2016 do not support the <bpt id="p1">**</bpt>Type<ept id="p1">**</ept> parameter, an alternate method of creating this certificate is required on these operating systems.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In this case you can use <ph id="ph1">```makecert.exe```</ph> or <ph id="ph2">```certutil.exe```</ph> to create the certificate.</source>
          <target state="new">In this case you can use <ph id="ph1">```makecert.exe```</ph> or <ph id="ph2">```certutil.exe```</ph> to create the certificate.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>An alternate method is to <bpt id="p1">[</bpt>download the New-SelfSignedCertificateEx.ps1 script from Microsoft Script Center<ept id="p1">](https://gallery.technet.microsoft.com/scriptcenter/Self-signed-certificate-5920a7c6)</ept> and use it to create the certificate instead:</source>
          <target state="new">An alternate method is to <bpt id="p1">[</bpt>download the New-SelfSignedCertificateEx.ps1 script from Microsoft Script Center<ept id="p1">](https://gallery.technet.microsoft.com/scriptcenter/Self-signed-certificate-5920a7c6)</ept> and use it to create the certificate instead:</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>On the Target Node: import the cert’s private key as a trusted root</source>
          <target state="new">On the Target Node: import the cert’s private key as a trusted root</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Configuration data</source>
          <target state="new">Configuration data</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The configuration data block defines which target nodes to operate on, whether or not to encrypt the credentials, the means of encryption, and other information.</source>
          <target state="new">The configuration data block defines which target nodes to operate on, whether or not to encrypt the credentials, the means of encryption, and other information.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information on the configuration data block, see <bpt id="p1">[</bpt>Separating Configuration and Environment Data<ept id="p1">](configData.md)</ept>.</source>
          <target state="new">For more information on the configuration data block, see <bpt id="p1">[</bpt>Separating Configuration and Environment Data<ept id="p1">](configData.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The elements that can be configured for each node that are related to credential encryption are:</source>
          <target state="new">The elements that can be configured for each node that are related to credential encryption are:</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NodeName<ept id="p1">**</ept> - the name of the target node that the credential encryption is being configured for.</source>
          <target state="new"><bpt id="p1">**</bpt>NodeName<ept id="p1">**</ept> - the name of the target node that the credential encryption is being configured for.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PsDscAllowPlainTextPassword<ept id="p1">**</ept> - whether unencrypted credentials will be allowed to be passed to this node.</source>
          <target state="new"><bpt id="p1">**</bpt>PsDscAllowPlainTextPassword<ept id="p1">**</ept> - whether unencrypted credentials will be allowed to be passed to this node.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This is <bpt id="p1">**</bpt>not recommended<ept id="p1">**</ept>.</source>
          <target state="new">This is <bpt id="p1">**</bpt>not recommended<ept id="p1">**</ept>.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Thumbprint<ept id="p1">**</ept> - the thumbprint of the certificate that will be used to decrypt the credentials in the DSC Configuration on the <bpt id="p2">_</bpt>Target Node<ept id="p2">_</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>Thumbprint<ept id="p1">**</ept> - the thumbprint of the certificate that will be used to decrypt the credentials in the DSC Configuration on the <bpt id="p2">_</bpt>Target Node<ept id="p2">_</ept>.</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>This certificate must exist in the Local Machine certificate store on the Target Node.<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>This certificate must exist in the Local Machine certificate store on the Target Node.<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>CertificateFile<ept id="p1">**</ept> - the certificate file (containing the public key only) that should be used to encrypt the credentials for the <bpt id="p2">_</bpt>Target Node<ept id="p2">_</ept>.</source>
          <target state="new"><bpt id="p1">**</bpt>CertificateFile<ept id="p1">**</ept> - the certificate file (containing the public key only) that should be used to encrypt the credentials for the <bpt id="p2">_</bpt>Target Node<ept id="p2">_</ept>.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>This must be either a DER encoded binary X.509 or Base-64 encoded X.509 format certificate file.</source>
          <target state="new">This must be either a DER encoded binary X.509 or Base-64 encoded X.509 format certificate file.</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This example shows a configuration data block that specifies a target node to act on named targetNode, the path to the public key certificate file (named targetNode.cer), and the thumbprint for the public key.</source>
          <target state="new">This example shows a configuration data block that specifies a target node to act on named targetNode, the path to the public key certificate file (named targetNode.cer), and the thumbprint for the public key.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Configuration script</source>
          <target state="new">Configuration script</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>In the configuration script itself, use the <ph id="ph1">`PsCredential`</ph> parameter to ensure that credentials are stored for the shortest possible time.</source>
          <target state="new">In the configuration script itself, use the <ph id="ph1">`PsCredential`</ph> parameter to ensure that credentials are stored for the shortest possible time.</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When you run the supplied example, DSC will prompt you for credentials and then encrypt the MOF file using the CertificateFile that is associated with the target node in the configuration data block.</source>
          <target state="new">When you run the supplied example, DSC will prompt you for credentials and then encrypt the MOF file using the CertificateFile that is associated with the target node in the configuration data block.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This code example copies a file from a share that is secured to a user.</source>
          <target state="new">This code example copies a file from a share that is secured to a user.</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Setting up decryption</source>
          <target state="new">Setting up decryption</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Before <bpt id="p1">[</bpt><ph id="ph1">`Start-DscConfiguration`</ph><ept id="p1">](https://technet.microsoft.com/en-us/library/dn521623.aspx)</ept> can work, you have to tell the Local Configuration Manager on each target node which certificate to use to decrypt the credentials, using the CertificateID resource to verify the certificate’s thumbprint.</source>
          <target state="new">Before <bpt id="p1">[</bpt><ph id="ph1">`Start-DscConfiguration`</ph><ept id="p1">](https://technet.microsoft.com/en-us/library/dn521623.aspx)</ept> can work, you have to tell the Local Configuration Manager on each target node which certificate to use to decrypt the credentials, using the CertificateID resource to verify the certificate’s thumbprint.</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This example function will find the appropriate local certificate (you might have to customize it so it will find the exact certificate you want to use):</source>
          <target state="new">This example function will find the appropriate local certificate (you might have to customize it so it will find the exact certificate you want to use):</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>With the certificate identified by its thumbprint, the configuration script can be updated to use the value:</source>
          <target state="new">With the certificate identified by its thumbprint, the configuration script can be updated to use the value:</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Running the configuration</source>
          <target state="new">Running the configuration</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>At this point, you can run the configuration, which will output two files:</source>
          <target state="new">At this point, you can run the configuration, which will output two files:</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>.meta.mof file that configures the Local Configuration Manager to decrypt the credentials using the certificate that is stored on the local machine store and identified by its thumbprint. <bpt id="p2">[</bpt><ph id="ph1">`Set-DscLocalConfigurationManager`</ph><ept id="p2">](https://technet.microsoft.com/en-us/library/dn521621.aspx)</ept> applies the <ept id="p1">*</ept>.meta.mof file.</source>
          <target state="new">A <bpt id="p1">*</bpt>.meta.mof file that configures the Local Configuration Manager to decrypt the credentials using the certificate that is stored on the local machine store and identified by its thumbprint. <bpt id="p2">[</bpt><ph id="ph1">`Set-DscLocalConfigurationManager`</ph><ept id="p2">](https://technet.microsoft.com/en-us/library/dn521621.aspx)</ept> applies the <ept id="p1">*</ept>.meta.mof file.</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A MOF file that actually applies the configuration.</source>
          <target state="new">A MOF file that actually applies the configuration.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Start-DscConfiguration applies the configuration.</source>
          <target state="new">Start-DscConfiguration applies the configuration.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>These commands will accomplish those steps:</source>
          <target state="new">These commands will accomplish those steps:</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This example would push the DSC configuration to the target node.</source>
          <target state="new">This example would push the DSC configuration to the target node.</target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The DSC configuration can also be applied using a DSC Pull Server if one is available.</source>
          <target state="new">The DSC configuration can also be applied using a DSC Pull Server if one is available.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Setting up a DSC pull client<ept id="p1">](pullClient.md)</ept> for more information on applying DSC configurations using a DSC Pull Server.</source>
          <target state="new">See <bpt id="p1">[</bpt>Setting up a DSC pull client<ept id="p1">](pullClient.md)</ept> for more information on applying DSC configurations using a DSC Pull Server.</target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Credential Encryption Module Example</source>
          <target state="new">Credential Encryption Module Example</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Here is a full example that incorporates all of these steps, plus a helper cmdlet that exports and copies the public keys:</source>
          <target state="new">Here is a full example that incorporates all of these steps, plus a helper cmdlet that exports and copies the public keys:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>