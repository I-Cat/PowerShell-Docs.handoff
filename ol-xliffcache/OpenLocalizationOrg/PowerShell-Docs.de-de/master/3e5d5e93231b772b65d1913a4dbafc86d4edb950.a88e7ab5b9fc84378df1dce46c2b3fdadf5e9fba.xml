{"nodes":[{"content":"Module Analysis Cache","pos":[2,23]},{"pos":[27,181],"content":"Starting with version 5.1, PowerShell provides the following control over the file that is used to cache data about a module like the commands it exports.","source":"Starting with version 5.1, PowerShell provides the following control\nover the file that is used to cache data about a module like the commands it exports."},{"content":"By default, this cache is stored in the file <ph id=\"ph1\">`${env:LOCALAPPDATA}\\Microsoft\\Windows\\PowerShell\\ModuleAnalysisCache`</ph>.","pos":[183,299],"source":"By default, this cache is stored in the file `${env:LOCALAPPDATA}\\Microsoft\\Windows\\PowerShell\\ModuleAnalysisCache`."},{"content":"The cache is typically read at startup while searching for a command and is written on a background thread sometime after a module is imported.","pos":[300,443],"source":"\nThe cache is typically read at startup while searching for a command\nand is written on a background thread sometime after a module is imported."},{"content":"To change the default location of the cache, set the environment variable PSModuleAnalysisCachePath before starting PowerShell.","pos":[445,572],"source":"To change the default location of the cache, set the environment variable PSModuleAnalysisCachePath\nbefore starting PowerShell."},{"content":"Changes to this environment variable will only affect children processes.","pos":[573,646]},{"content":"The value should name a full path (including filename) that PowerShell has permission to create and write files.","pos":[647,759],"source":"\nThe value should name a full path (including filename) that PowerShell has permission to create and write files."},{"content":"To disable the file cache - this value can be set to an invalid location, for example","pos":[760,845],"source":"\nTo disable the file cache - this value can be set to an invalid location, for example"},{"content":"This sets the path to an invalid device.","pos":[905,945]},{"content":"No error if PowerShell can't write to the path, though you can see an error reporting via a tracer:","pos":[946,1045],"source":" No error if PowerShell can't write to the path, though you can see\nan error reporting via a tracer:"},{"content":"When writing out the cache, PowerShell will check for modules that no longer exist to avoid an unnecessarily large cache.","pos":[1171,1292],"source":"When writing out the cache, PowerShell will check for modules that no longer exist\nto avoid an unnecessarily large cache."},{"content":"Sometimes these checks are not desirable, in which case you can turn them off by setting","pos":[1293,1381],"source":"\nSometimes these checks are not desirable, in which case you can turn them off by setting"},{"content":"Setting this environment variable will take effect immediately in the current process.","pos":[1447,1533]}],"content":"# Module Analysis Cache #\n\nStarting with version 5.1, PowerShell provides the following control\nover the file that is used to cache data about a module like the commands it exports.\n\nBy default, this cache is stored in the file `${env:LOCALAPPDATA}\\Microsoft\\Windows\\PowerShell\\ModuleAnalysisCache`.\nThe cache is typically read at startup while searching for a command\nand is written on a background thread sometime after a module is imported.\n\nTo change the default location of the cache, set the environment variable PSModuleAnalysisCachePath\nbefore starting PowerShell. Changes to this environment variable will only affect children processes.\nThe value should name a full path (including filename) that PowerShell has permission to create and write files.\nTo disable the file cache - this value can be set to an invalid location, for example\n\n```PowerShell\n$env:PSModuleAnalysisCachePath = 'nul'\n```\n\nThis sets the path to an invalid device. No error if PowerShell can't write to the path, though you can see\nan error reporting via a tracer:\n\n```PowerShell\nTrace-Command -PSHost -Name Modules -Expression { Import-Module Microsoft.PowerShell.Management -Force }\n```\n\nWhen writing out the cache, PowerShell will check for modules that no longer exist\nto avoid an unnecessarily large cache.\nSometimes these checks are not desirable, in which case you can turn them off by setting\n\n```PowerShell\n$env:PSDisableModuleAnalysisCacheCleanup = 1\n```\n\nSetting this environment variable will take effect immediately in the current process."}