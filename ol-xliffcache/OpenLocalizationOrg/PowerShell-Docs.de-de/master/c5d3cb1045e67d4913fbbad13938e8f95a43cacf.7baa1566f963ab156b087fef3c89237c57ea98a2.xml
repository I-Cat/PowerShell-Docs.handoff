{"nodes":[{"pos":[13,74],"content":"PowerShell Desired State Configuration partial configurations","needQuote":true,"nodes":[{"content":"PowerShell Desired State Configuration partial configurations","pos":[0,61]}]},{"pos":[107,121],"content":"powershell,DSC","needQuote":true,"nodes":[{"content":"powershell,DSC","pos":[0,14]}]},{"content":"PowerShell Desired State Configuration partial configurations","pos":[219,280]},{"content":"Applies To: Windows PowerShell 5.0","pos":[283,317]},{"content":"In PowerShell 5.0, Desired State Configuration (DSC) allows configurations to be delivered in fragments and from multiple sources.","pos":[319,449]},{"content":"The Local Configuration Manager (LCM) on the target node puts the fragments together before applying them as a single configuration.","pos":[450,583],"source":" The Local Configuration Manager (LCM) on the \ntarget node puts the fragments together before applying them as a single configuration."},{"content":"This capability allows sharing control of configuration between teams or individuals.","pos":[584,669]},{"content":"For example, if two or more teams of developers are collaborating on a service, they might each want to create configurations to manage their part of the service.","pos":[670,833],"source":" \nFor example, if two or more teams of developers are collaborating on a service, they might each want to create configurations to manage their part of the service."},{"content":"Each of these configurations could be pulled from different pull servers, and they could be added at different stages of development.","pos":[834,968],"source":" Each of \nthese configurations could be pulled from different pull servers, and they could be added at different stages of development."},{"content":"Partial configurations also allow different individuals or teams to control different aspects of configuring nodes without having to coordinate the editing of a single configuration document.","pos":[969,1161],"source":" Partial configurations also allow different \nindividuals or teams to control different aspects of configuring nodes without having to coordinate the editing of a single configuration document."},{"content":"For example, one team might be responsible for deploying a VM and operating system, while another team might deploy other applications and services on that VM.","pos":[1162,1322],"source":" For example, one team \nmight be responsible for deploying a VM and operating system, while another team might deploy other applications and services on that VM."},{"content":"With partial configurations, each team can create its own configuration, without either of them being unnecessarily complicated.","pos":[1323,1452],"source":" With partial configurations, each team \ncan create its own configuration, without either of them being unnecessarily complicated."},{"content":"You can use partial configurations in push mode, pull mode, or a combination of the two.","pos":[1454,1542]},{"content":"Partial configurations in push mode","pos":[1547,1582]},{"content":"To use partial configurations in push mode, you configure the LCM on the target node to receive the partial configurations.","pos":[1583,1706]},{"content":"Each partial configuration must be pushed to the target by using the Publish-DSCConfiguration cmdlet.","pos":[1707,1809],"source":" Each partial configuration must be pushed to the \ntarget by using the Publish-DSCConfiguration cmdlet."},{"content":"The target node then combines the partial configuration into a single configuration, and you can apply the configuration by calling the <bpt id=\"p1\">[</bpt>Start-DscConfiguration<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/dn521623.aspx)</ept> cmdlet.","pos":[1810,2038],"source":" The target node then combines the partial configuration into a single configuration, and you can apply the configuration by \ncalling the [Start-DscConfiguration](https://technet.microsoft.com/en-us/library/dn521623.aspx) cmdlet."},{"content":"Configuring the LCM for push-mode partial configurations","pos":[2044,2100]},{"content":"To configure the LCM for partial configurations in push mode, you create a <bpt id=\"p1\">**</bpt>DSCLocalConfigurationManager<ept id=\"p1\">**</ept> configuration with one <bpt id=\"p2\">**</bpt>PartialConfiguration<ept id=\"p2\">**</ept> block for each partial configuration.","pos":[2101,2295],"source":"To configure the LCM for partial configurations in push mode, you create a **DSCLocalConfigurationManager** configuration with one **PartialConfiguration** block for each partial \nconfiguration."},{"content":"For more information about configuring the LCM, see <bpt id=\"p1\">[</bpt>Windows Configuring the Local Configuration Manager<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/mt421188.aspx)</ept>.","pos":[2296,2461],"source":" For more information about configuring the LCM, see [Windows Configuring the Local Configuration Manager](https://technet.microsoft.com/en-us/library/mt421188.aspx)."},{"content":"The following example shows an LCM configuration that expects two partial configurations—one that deploys the OS, and one that deploys and configures SharePoint.","pos":[2462,2624],"source":" \nThe following example shows an LCM configuration that expects two partial configurations—one that deploys the OS, and one that deploys and configures SharePoint."},{"content":"The <bpt id=\"p1\">**</bpt>RefreshMode<ept id=\"p1\">**</ept> for each partial configuration is set to \"Push\".","pos":[3158,3226],"source":"The **RefreshMode** for each partial configuration is set to \"Push\"."},{"content":"The names of the <bpt id=\"p1\">**</bpt>PartialConfiguration<ept id=\"p1\">**</ept> blocks (in this case, \"ServiceAccountConfig\" and \"SharePointConfig\") must match exactly the names of the configurations that are pushed to the target node.","pos":[3227,3425],"source":" The names of the **PartialConfiguration** blocks (in this case, \"ServiceAccountConfig\" and \n\"SharePointConfig\") must match exactly the names of the configurations that are pushed to the target node."},{"content":"Publishing and starting push-mode partial configurations","pos":[3431,3487]},{"content":"PartialConfig folder structure","pos":[3490,3520]},{"content":"You then call <bpt id=\"p1\">**</bpt>Publish-DSCConfiguration<ept id=\"p1\">**</ept> for each configuration, passing the folders that contain the configuration documents as the Path parameters.","pos":[3552,3703],"source":"You then call **Publish-DSCConfiguration** for each configuration, passing the folders that contain the configuration documents as the Path parameters."},{"content":"After publishing both configurations, you can call <ph id=\"ph1\">`Start-DSCConfiguration –UseExisting`</ph> on the target node.","pos":[3704,3813],"source":" After publishing \nboth configurations, you can call `Start-DSCConfiguration –UseExisting` on the target node."},{"content":"Partial configurations in pull mode","pos":[3818,3853]},{"content":"Partial configurations can be pulled from one or more pull servers (for more information about pull servers, see <bpt id=\"p1\">[</bpt>Windows PowerShell Desired State Configuration Pull Servers<ept id=\"p1\">](pullServer.md)</ept>.","pos":[3855,4046],"source":"Partial configurations can be pulled from one or more pull servers (for more information about pull servers, see \n[Windows PowerShell Desired State Configuration Pull Servers](pullServer.md)."},{"content":"To do this, you have to configure the LCM on the target node to pull the partial configurations, and name and locate the configuration documents properly on the pull servers.","pos":[4047,4222],"source":" To do this, you have to configure the LCM on the target node to pull the partial configurations, \nand name and locate the configuration documents properly on the pull servers."},{"content":"Configuring the LCM for pull node configurations","pos":[4228,4276]},{"content":"To configure the LCM to pull partial configurations from a pull server, you define the pull server in either a <bpt id=\"p1\">**</bpt>ConfigurationRepositoryWeb<ept id=\"p1\">**</ept> (for an HTTP pull server) or <bpt id=\"p2\">**</bpt>ConfigurationRepositoryShare<ept id=\"p2\">**</ept> (for an SMB pull server) block.","pos":[4278,4514],"source":"To configure the LCM to pull partial configurations from a pull server, you define the pull server in either a **ConfigurationRepositoryWeb** (for an HTTP pull server) or \n**ConfigurationRepositoryShare** (for an SMB pull server) block."},{"content":"You then create <bpt id=\"p1\">**</bpt>PartialConfiguration<ept id=\"p1\">**</ept> blocks that refer to the pull server by using the <bpt id=\"p2\">**</bpt>ConfigurationSource<ept id=\"p2\">**</ept> property.","pos":[4515,4640],"source":" You then create **PartialConfiguration** blocks that refer to the pull server by using the **ConfigurationSource** \nproperty."},{"content":"You also need to create a <bpt id=\"p1\">**</bpt>Settings<ept id=\"p1\">**</ept> block to specify that the LCM uses pull mode, and to specify the <bpt id=\"p2\">**</bpt>ConfigurationNames<ept id=\"p2\">**</ept> or <bpt id=\"p3\">**</bpt>ConfigurationID<ept id=\"p3\">**</ept> that the pull server and target node use to identify the configurations.","pos":[4641,4864],"source":" You also need to create a **Settings** block to specify that the LCM uses pull mode, and to specify the **ConfigurationNames** or **ConfigurationID** that the pull \nserver and target node use to identify the configurations."},{"content":"The following meta-configuration defines an HTTP pull server named CONTOSO-PullSrv and two partial configurations that use that pull server.","pos":[4865,5006],"source":" The following meta-configuration defines an HTTP pull server named CONTOSO-PullSrv and two partial configurations \nthat use that pull server."},{"content":"For more information about configuring the LCM using <bpt id=\"p1\">**</bpt>ConfigurationNames<ept id=\"p1\">**</ept>, see <bpt id=\"p2\">[</bpt>Setting up a pull client using configuration names<ept id=\"p2\">](pullClientConfigNames.md)</ept>.","pos":[5008,5168],"source":"For more information about configuring the LCM using **ConfigurationNames**, see [Setting up a pull client using configuration names](pullClientConfigNames.md)."},{"content":"For information about configuring the LCM using <bpt id=\"p1\">**</bpt>ConfigurationID<ept id=\"p1\">**</ept>, see <bpt id=\"p2\">[</bpt>Setting up a pull client using configuration ID<ept id=\"p2\">](pullClientConfigID.md)</ept>.","pos":[5169,5316],"source":" \nFor information about configuring the LCM using **ConfigurationID**, see [Setting up a pull client using configuration ID](pullClientConfigID.md)."},{"content":"Configuring the LCM for pull mode configurations using configuration names","pos":[5323,5397]},{"content":"Configuring the LCM for pull mode configurations using ConfigurationID","pos":[6794,6864]},{"pos":[8168,8369],"content":"You can pull partial configurations from more than one pull server—you would just need to define each pull server, and then refer to the appropriate pull server in each <bpt id=\"p1\">**</bpt>PartialConfiguration<ept id=\"p1\">**</ept> block.","source":"You can pull partial configurations from more than one pull server—you would just need to define each pull server, and then refer to the appropriate pull server in each \n**PartialConfiguration** block."},{"pos":[8371,8616],"content":"After creating the meta-configuration, you must run it to create a configuration document (a MOF file), and then call <bpt id=\"p1\">[</bpt>Set-DscLocalConfigurationManager<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/dn521621(v=wps.630).aspx)</ept> to configure the LCM.","source":"After creating the meta-configuration, you must run it to create a configuration document (a MOF file), and then call \n[Set-DscLocalConfigurationManager](https://technet.microsoft.com/en-us/library/dn521621(v=wps.630).aspx) to configure the LCM."},{"content":"Naming and placing the configuration documents on the pull server (ConfigurationNames)","pos":[8622,8708]},{"content":"The partial configuration documents must be placed in the folder specified as the <bpt id=\"p1\">**</bpt>ConfigurationPath<ept id=\"p1\">**</ept> in the <ph id=\"ph1\">`web.config`</ph> file for the pull server (typically <ph id=\"ph2\">`C:\\Program Files\\WindowsPowerShell\\DscService\\Configuration`</ph>).","pos":[8710,8934],"source":"The partial configuration documents must be placed in the folder specified as the **ConfigurationPath** in the `web.config` file for the pull server \n(typically `C:\\Program Files\\WindowsPowerShell\\DscService\\Configuration`)."},{"content":"The configuration documents must be named as follows: <ph id=\"ph1\">`ConfigurationName.mof`</ph>, where <bpt id=\"p1\">_</bpt>ConfigurationName<ept id=\"p1\">_</ept> is the name of the partial configuration.","pos":[8935,9082],"source":" The configuration documents must be named as follows: `ConfigurationName.mof`, \nwhere _ConfigurationName_ is the name of the partial configuration."},{"content":"For our example, the configuration documents should be named as follows:","pos":[9083,9156],"source":" For our example, the configuration \ndocuments should be named as follows:"},{"content":"Naming and placing the configuration documents on the pull server (ConfigurationID)","pos":[9281,9364]},{"content":"The partial configuration documents must be placed in the folder specified as the <bpt id=\"p1\">**</bpt>ConfigurationPath<ept id=\"p1\">**</ept> in the <ph id=\"ph1\">`web.config`</ph> file for the pull server (typically <ph id=\"ph2\">`C:\\Program Files\\WindowsPowerShell\\DscService\\Configuration`</ph>).","pos":[9366,9590],"source":"The partial configuration documents must be placed in the folder specified as the **ConfigurationPath** in the `web.config` file for the pull server \n(typically `C:\\Program Files\\WindowsPowerShell\\DscService\\Configuration`)."},{"content":"The configuration documents must be named as follows: <bpt id=\"p1\">_</bpt>ConfigurationName<ept id=\"p1\">_</ept>.","pos":[9591,9665],"source":" The configuration documents must be named as follows: _ConfigurationName_."},{"content":"<bpt id=\"p1\">_</bpt>ConfigurationID<ept id=\"p1\">_</ept><ph id=\"ph1\">`.mof`</ph>, where <bpt id=\"p2\">_</bpt>ConfigurationName<ept id=\"p2\">_</ept> is the name of the partial configuration and <bpt id=\"p3\">_</bpt>ConfigurationID<ept id=\"p3\">_</ept> is the configuration ID defined in the LCM on the target node.","pos":[9666,9843],"source":"_ConfigurationID_`.mof`, \nwhere _ConfigurationName_ is the name of the partial configuration and _ConfigurationID_ is the configuration ID defined in the LCM on the target node."},{"content":"For our example, the configuration documents should be named as follows:","pos":[9844,9917],"source":" For our example, the \nconfiguration documents should be named as follows:"},{"content":"Running partial configurations from a pull server","pos":[10191,10240]},{"content":"After the LCM on the target node has been configured, and the configuration documents have been created and properly named on the pull server, the target node will pull the partial configurations, combine them, and apply the resulting configuration at regular intervals as specified by the <bpt id=\"p1\">**</bpt>RefreshFrequencyMins<ept id=\"p1\">**</ept> property of the LCM.","pos":[10242,10578],"source":"After the LCM on the target node has been configured, and the configuration documents have been created and properly named on the pull server, the target node will pull the partial \nconfigurations, combine them, and apply the resulting configuration at regular intervals as specified by the **RefreshFrequencyMins** property of the LCM."},{"content":"If you want to force a refresh, you can call the <bpt id=\"p1\">[</bpt>Update-DscConfiguration<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/mt143541.aspx)</ept> cmdlet, to pull the configurations, and then <ph id=\"ph1\">`Start-DSCConfiguration –UseExisting`</ph> to apply them.","pos":[10579,10812],"source":" If you want to force a \nrefresh, you can call the [Update-DscConfiguration](https://technet.microsoft.com/en-us/library/mt143541.aspx) cmdlet, to pull the configurations, and then \n`Start-DSCConfiguration –UseExisting` to apply them."},{"content":"Partial configurations in mixed push and pull modes","pos":[10818,10869]},{"content":"You can also mix push and pull modes for partial configurations.","pos":[10871,10935]},{"content":"That is, you could have one partial configuration that is pulled from a pull server, while another partial configuration is pushed.","pos":[10936,11068],"source":" That is, you could have one partial configuration that is pulled from a pull server, while another partial \nconfiguration is pushed."},{"content":"Treat each partial configuration as you would, depending on its refresh mode as described in the previous sections.","pos":[11069,11184]},{"content":"For example, the following meta-configuration describes the same example, with the service account partial configuration in pull mode and the SharePoint partial configuration in push mode.","pos":[11185,11374],"source":" For example, the following \nmeta-configuration describes the same example, with the service account partial configuration in pull mode and the SharePoint partial configuration in push mode."},{"content":"Mixed push and pull modes using ConfigurationNames","pos":[11380,11430]},{"content":"Mixed push and pull modes using ConfigurationID","pos":[12838,12885]},{"pos":[14001,14155],"content":"Note that the <bpt id=\"p1\">**</bpt>RefreshMode<ept id=\"p1\">**</ept> specified in the Settings block is \"Pull\", but the <bpt id=\"p2\">**</bpt>RefreshMode<ept id=\"p2\">**</ept> for the SharePointConfig partial configuration is \"Push\".","source":"Note that the **RefreshMode** specified in the Settings block is \"Pull\", but the **RefreshMode** for the SharePointConfig partial configuration is \"Push\"."},{"content":"Name and locate the configuration MOF files as described above for their respective refresh modes.","pos":[14157,14255]},{"content":"Call <bpt id=\"p1\">**</bpt>Publish-DSCConfiguration<ept id=\"p1\">**</ept> to publish the <ph id=\"ph1\">`SharePointConfig`</ph> partial configuration, and either wait for the <ph id=\"ph2\">`ServiceAccountConfig`</ph> configuration to be pulled from the pull server, or force a refresh by calling <bpt id=\"p2\">[</bpt>Update-DscConfiguration<ept id=\"p2\">](https://technet.microsoft.com/en-us/library/mt143541(v=wps.630).aspx)</ept>.","pos":[14256,14571],"source":" Call **Publish-DSCConfiguration** to publish the `SharePointConfig` \npartial configuration, and either wait for the `ServiceAccountConfig` configuration to be pulled from the pull server, or force a refresh by calling \n[Update-DscConfiguration](https://technet.microsoft.com/en-us/library/mt143541(v=wps.630).aspx)."},{"content":"Example ServiceAccountConfig Partial Configuration","pos":[14576,14626]},{"content":"Example SharePointConfig Partial Configuration","pos":[15512,15558]},{"content":"See Also","pos":[16024,16032]},{"pos":[16035,16124],"content":"<bpt id=\"p1\">**</bpt>Concepts<ept id=\"p1\">**</ept><ph id=\"ph1\">\n</ph><bpt id=\"p2\">[</bpt>Windows PowerShell Desired State Configuration Pull Servers<ept id=\"p2\">](pullServer.md)</ept>","source":"**Concepts**\n[Windows PowerShell Desired State Configuration Pull Servers](pullServer.md)"},{"pos":[16127,16239],"content":"<bpt id=\"p1\">[</bpt>Windows Configuring the Local Configuration Manager<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/mt421188.aspx)</ept>","source":"[Windows Configuring the Local Configuration Manager](https://technet.microsoft.com/en-us/library/mt421188.aspx)"}],"content":"---\ntitle:   PowerShell Desired State Configuration partial configurations\nms.date:  2016-05-16\nkeywords:  powershell,DSC\ndescription:  \nms.topic:  article\nauthor:  eslesar\nmanager:  dongill\nms.prod:  powershell\n---\n\n# PowerShell Desired State Configuration partial configurations\n\n>Applies To: Windows PowerShell 5.0\n\nIn PowerShell 5.0, Desired State Configuration (DSC) allows configurations to be delivered in fragments and from multiple sources. The Local Configuration Manager (LCM) on the \ntarget node puts the fragments together before applying them as a single configuration. This capability allows sharing control of configuration between teams or individuals. \nFor example, if two or more teams of developers are collaborating on a service, they might each want to create configurations to manage their part of the service. Each of \nthese configurations could be pulled from different pull servers, and they could be added at different stages of development. Partial configurations also allow different \nindividuals or teams to control different aspects of configuring nodes without having to coordinate the editing of a single configuration document. For example, one team \nmight be responsible for deploying a VM and operating system, while another team might deploy other applications and services on that VM. With partial configurations, each team \ncan create its own configuration, without either of them being unnecessarily complicated.\n\nYou can use partial configurations in push mode, pull mode, or a combination of the two.\n\n## Partial configurations in push mode\nTo use partial configurations in push mode, you configure the LCM on the target node to receive the partial configurations. Each partial configuration must be pushed to the \ntarget by using the Publish-DSCConfiguration cmdlet. The target node then combines the partial configuration into a single configuration, and you can apply the configuration by \ncalling the [Start-DscConfiguration](https://technet.microsoft.com/en-us/library/dn521623.aspx) cmdlet.\n\n### Configuring the LCM for push-mode partial configurations\nTo configure the LCM for partial configurations in push mode, you create a **DSCLocalConfigurationManager** configuration with one **PartialConfiguration** block for each partial \nconfiguration. For more information about configuring the LCM, see [Windows Configuring the Local Configuration Manager](https://technet.microsoft.com/en-us/library/mt421188.aspx). \nThe following example shows an LCM configuration that expects two partial configurations—one that deploys the OS, and one that deploys and configures SharePoint.\n\n```powershell\n[DSCLocalConfigurationManager()]\nconfiguration PartialConfigDemo\n{\n    Node localhost\n    {\n        \n           PartialConfiguration ServiceAccountConfig\n        {\n            Description = 'Configuration to add the SharePoint service account to the Administrators group.'\n            RefreshMode = 'Push'\n        }\n           PartialConfiguration SharePointConfig\n        {\n            Description = 'Configuration for the SharePoint server'\n            RefreshMode = 'Push'\n        }\n    }\n}\nPartialConfigDemo \n```\n\nThe **RefreshMode** for each partial configuration is set to \"Push\". The names of the **PartialConfiguration** blocks (in this case, \"ServiceAccountConfig\" and \n\"SharePointConfig\") must match exactly the names of the configurations that are pushed to the target node.\n\n### Publishing and starting push-mode partial configurations\n![PartialConfig folder structure](./images/PartialConfig1.jpg)\n\nYou then call **Publish-DSCConfiguration** for each configuration, passing the folders that contain the configuration documents as the Path parameters. After publishing \nboth configurations, you can call `Start-DSCConfiguration –UseExisting` on the target node.\n\n## Partial configurations in pull mode\n\nPartial configurations can be pulled from one or more pull servers (for more information about pull servers, see \n[Windows PowerShell Desired State Configuration Pull Servers](pullServer.md). To do this, you have to configure the LCM on the target node to pull the partial configurations, \nand name and locate the configuration documents properly on the pull servers.\n\n### Configuring the LCM for pull node configurations\n\nTo configure the LCM to pull partial configurations from a pull server, you define the pull server in either a **ConfigurationRepositoryWeb** (for an HTTP pull server) or \n**ConfigurationRepositoryShare** (for an SMB pull server) block. You then create **PartialConfiguration** blocks that refer to the pull server by using the **ConfigurationSource** \nproperty. You also need to create a **Settings** block to specify that the LCM uses pull mode, and to specify the **ConfigurationNames** or **ConfigurationID** that the pull \nserver and target node use to identify the configurations. The following meta-configuration defines an HTTP pull server named CONTOSO-PullSrv and two partial configurations \nthat use that pull server.\n\nFor more information about configuring the LCM using **ConfigurationNames**, see [Setting up a pull client using configuration names](pullClientConfigNames.md). \nFor information about configuring the LCM using **ConfigurationID**, see [Setting up a pull client using configuration ID](pullClientConfigID.md).\n\n#### Configuring the LCM for pull mode configurations using configuration names\n\n```powershell\n[DscLocalConfigurationManager()]\nConfiguration PartialConfigDemoConfigNames\n{\n        Settings\n        {\n            RefreshFrequencyMins            = 30;\n            RefreshMode                     = \"PULL\";\n            ConfigurationMode               =\"ApplyAndAutocorrect\";\n            AllowModuleOverwrite            = $true;\n            RebootNodeIfNeeded              = $true;\n            ConfigurationModeFrequencyMins  = 60;\n        }\n        ConfigurationRepositoryWeb CONTOSO-PullSrv\n        {\n            ServerURL                       = 'https://CONTOSO-PullSrv:8080/PSDSCPullServer.svc'    \n            RegistrationKey                 = 5b41f4e6-5e6d-45f5-8102-f2227468ef38     \n            ConfigurationNames              = @(\"ServiceAccountConfig\", \"SharePointConfig\")\n        }     \n        \n        PartialConfiguration ServiceAccountConfig \n        {\n            Description                     = \"ServiceAccountConfig\"\n            ConfigurationSource             = @(\"[ConfigurationRepositoryWeb]CONTOSO-PullSrv\") \n        }\n \n        PartialConfiguration SharePointConfig\n        {\n            Description                     = \"SharePointConfig\"\n            ConfigurationSource             = @(\"[ConfigurationRepositoryWeb]CONTOSO-PullSrv\")\n            DependsOn                       = '[PartialConfiguration]ServiceAccountConfig'\n        }\n   \n}\n``` \n\n#### Configuring the LCM for pull mode configurations using ConfigurationID\n\n```powershell\n[DSCLocalConfigurationManager()]\nconfiguration PartialConfigDemoConfigID\n{\n    Node localhost\n    {\n        Settings\n        {\n            RefreshMode                     = 'Pull'\n            ConfigurationID                 = '1d545e3b-60c3-47a0-bf65-5afc05182fd0'\n            RefreshFrequencyMins            = 30 \n            RebootNodeIfNeeded              = $true\n        }\n        ConfigurationRepositoryWeb CONTOSO-PullSrv\n        {\n            ServerURL                       = 'https://CONTOSO-PullSrv:8080/PSDSCPullServer.svc'\n            \n        }\n        \n           PartialConfiguration ServiceAccountConfig\n        {\n            Description                     = 'Configuration for the Base OS'\n            ConfigurationSource             = '[ConfigurationRepositoryWeb]CONTOSO-PullSrv'\n            RefreshMode                     = 'Pull'\n        }\n           PartialConfiguration SharePointConfig\n        {\n            Description                     = 'Configuration for the Sharepoint Server'\n            ConfigurationSource             = '[ConfigurationRepositoryWeb]CONTOSO-PullSrv'\n            DependsOn                       = '[PartialConfiguration]ServiceAccountConfig'\n            RefreshMode                     = 'Pull'\n        }\n    }\n}\nPartialConfigDemo \n```\n\nYou can pull partial configurations from more than one pull server—you would just need to define each pull server, and then refer to the appropriate pull server in each \n**PartialConfiguration** block.\n\nAfter creating the meta-configuration, you must run it to create a configuration document (a MOF file), and then call \n[Set-DscLocalConfigurationManager](https://technet.microsoft.com/en-us/library/dn521621(v=wps.630).aspx) to configure the LCM.\n\n### Naming and placing the configuration documents on the pull server (ConfigurationNames)\n\nThe partial configuration documents must be placed in the folder specified as the **ConfigurationPath** in the `web.config` file for the pull server \n(typically `C:\\Program Files\\WindowsPowerShell\\DscService\\Configuration`). The configuration documents must be named as follows: `ConfigurationName.mof`, \nwhere _ConfigurationName_ is the name of the partial configuration. For our example, the configuration \ndocuments should be named as follows:\n\n```\nServiceAccountConfig.mof\nServiceAccountConfig.mof.checksum\nSharePointConfig.mof\nSharePointConfig.mof.checksum\n```\n\n### Naming and placing the configuration documents on the pull server (ConfigurationID)\n\nThe partial configuration documents must be placed in the folder specified as the **ConfigurationPath** in the `web.config` file for the pull server \n(typically `C:\\Program Files\\WindowsPowerShell\\DscService\\Configuration`). The configuration documents must be named as follows: _ConfigurationName_. _ConfigurationID_`.mof`, \nwhere _ConfigurationName_ is the name of the partial configuration and _ConfigurationID_ is the configuration ID defined in the LCM on the target node. For our example, the \nconfiguration documents should be named as follows:\n\n```\nServiceAccountConfig.1d545e3b-60c3-47a0-bf65-5afc05182fd0.mof\nServiceAccountConfig.1d545e3b-60c3-47a0-bf65-5afc05182fd0.mof.checksum\nSharePointConfig.1d545e3b-60c3-47a0-bf65-5afc05182fd0.mof\nSharePointConfig.1d545e3b-60c3-47a0-bf65-5afc05182fd0.mof.checksum\n```\n\n\n### Running partial configurations from a pull server\n\nAfter the LCM on the target node has been configured, and the configuration documents have been created and properly named on the pull server, the target node will pull the partial \nconfigurations, combine them, and apply the resulting configuration at regular intervals as specified by the **RefreshFrequencyMins** property of the LCM. If you want to force a \nrefresh, you can call the [Update-DscConfiguration](https://technet.microsoft.com/en-us/library/mt143541.aspx) cmdlet, to pull the configurations, and then \n`Start-DSCConfiguration –UseExisting` to apply them.\n\n\n## Partial configurations in mixed push and pull modes\n\nYou can also mix push and pull modes for partial configurations. That is, you could have one partial configuration that is pulled from a pull server, while another partial \nconfiguration is pushed. Treat each partial configuration as you would, depending on its refresh mode as described in the previous sections. For example, the following \nmeta-configuration describes the same example, with the service account partial configuration in pull mode and the SharePoint partial configuration in push mode.\n\n### Mixed push and pull modes using ConfigurationNames\n\n```powershell\n[DscLocalConfigurationManager()]\nConfiguration PartialConfigDemoConfigNames\n{\n        Settings\n        {\n            RefreshFrequencyMins            = 30;\n            RefreshMode                     = \"PULL\";\n            ConfigurationMode               = \"ApplyAndAutocorrect\";\n            AllowModuleOverwrite            = $true;\n            RebootNodeIfNeeded              = $true;\n            ConfigurationModeFrequencyMins  = 60;\n        }\n        ConfigurationRepositoryWeb CONTOSO-PullSrv\n        {\n            ServerURL                       = 'https://CONTOSO-PullSrv:8080/PSDSCPullServer.svc'    \n            RegistrationKey                 = 5b41f4e6-5e6d-45f5-8102-f2227468ef38     \n            ConfigurationNames              = @(\"ServiceAccountConfig\", \"SharePointConfig\")\n        }     \n        \n        PartialConfiguration ServiceAccountConfig \n        {\n            Description                     = \"ServiceAccountConfig\"\n            ConfigurationSource             = @(\"[ConfigurationRepositoryWeb]CONTOSO-PullSrv\")\n            RefreshMode                     = 'Pull' \n        }\n \n        PartialConfiguration SharePointConfig\n        {\n            Description                     = \"SharePointConfig\"\n            DependsOn                       = '[PartialConfiguration]ServiceAccountConfig'\n            RefreshMode                     = 'Push'\n        }\n   \n}\n``` \n\n### Mixed push and pull modes using ConfigurationID\n\n```powershell\n[DSCLocalConfigurationManager()]\nconfiguration PartialConfigDemo\n{\n    Node localhost\n    {\n        Settings\n        {\n            RefreshMode             = 'Pull'\n            ConfigurationID         = '1d545e3b-60c3-47a0-bf65-5afc05182fd0'\n            RefreshFrequencyMins    = 30 \n            RebootNodeIfNeeded      = $true\n        }\n        ConfigurationRepositoryWeb CONTOSO-PullSrv\n        {\n            ServerURL               = 'https://CONTOSO-PullSrv:8080/PSDSCPullServer.svc'\n            \n        }\n        \n           PartialConfiguration ServiceAccountConfig\n        {\n            Description             = 'Configuration for the Base OS'\n            ConfigurationSource     = '[ConfigurationRepositoryWeb]CONTOSO-PullSrv'\n            RefreshMode             = 'Pull'\n        }\n           PartialConfiguration SharePointConfig\n        {\n            Description             = 'Configuration for the Sharepoint Server'\n            DependsOn               = '[PartialConfiguration]ServiceAccountConfig'\n            RefreshMode             = 'Push'\n        }\n    }\n}\nPartialConfigDemo \n```\n\nNote that the **RefreshMode** specified in the Settings block is \"Pull\", but the **RefreshMode** for the SharePointConfig partial configuration is \"Push\".\n\nName and locate the configuration MOF files as described above for their respective refresh modes. Call **Publish-DSCConfiguration** to publish the `SharePointConfig` \npartial configuration, and either wait for the `ServiceAccountConfig` configuration to be pulled from the pull server, or force a refresh by calling \n[Update-DscConfiguration](https://technet.microsoft.com/en-us/library/mt143541(v=wps.630).aspx).\n\n## Example ServiceAccountConfig Partial Configuration\n\n```powershell\nConfiguration ServiceAccountConfig\n{\n    Param (\n        [Parameter(Mandatory,\n                   HelpMessage=\"Domain credentials required to add domain\\sharepoint_svc to the local Administrators group.\")]\n        [ValidateNotNullOrEmpty()]\n        [pscredential]$Credential\n    )\n\n    Import-DscResource -ModuleName PSDesiredStateConfiguration\n\n\n    Node localhost\n    {\n        Group LocalAdmins\n        {\n            GroupName           = 'Administrators'\n            MembersToInclude    = 'domain\\sharepoint_svc',\n                                  'admins@example.domain'\n            Ensure              = 'Present'\n            Credential          = $Credential\n            \n        }\n\n        WindowsFeature Telnet\n        {\n            Name                = 'Telnet-Server'\n            Ensure              = 'Absent'\n        }\n    }\n}\nServiceAccountConfig\n\n```\n## Example SharePointConfig Partial Configuration\n```powershell\nConfiguration SharePointConfig\n{\n    Param (\n        [Parameter(Mandatory)]\n        [ValidateNotNullOrEmpty()]\n        [pscredential]$ProductKey\n    )\n\n    Import-DscResource -ModuleName xSharePoint\n\n    Node localhost\n    {\n        xSPInstall SharePointDefault\n        {\n            Ensure      = 'Present'\n            BinaryDir   = '\\\\FileServer\\Installers\\Sharepoint\\'\n            ProductKey  = $ProductKey\n        }\n    }\n}\nSharePointConfig\n```\n##See Also \n\n**Concepts**\n[Windows PowerShell Desired State Configuration Pull Servers](pullServer.md) \n\n[Windows Configuring the Local Configuration Manager](https://technet.microsoft.com/en-us/library/mt421188.aspx) \n\n"}