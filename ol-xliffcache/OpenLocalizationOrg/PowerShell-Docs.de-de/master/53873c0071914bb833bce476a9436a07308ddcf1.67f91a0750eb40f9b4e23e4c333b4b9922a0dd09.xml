{"nodes":[{"content":"Get-InstalledModule","pos":[2,21]},{"content":"Gets installed modules on a computer.","pos":[23,60]},{"content":"Description","pos":[65,76]},{"content":"The Get-InstalledModule cmdlet gets installed PowerShell modules on a computer which were installed using Install-Module cmdlet.","pos":[78,206]},{"content":"For each installed module, Get-InstalledModule returns a PSRepositoryItemInfo object which can optionally be piped to Uninstall-Module for uninstalling the installed modules.","pos":[208,382]},{"content":"Get-InstalledModule can filter installed modules based on name, version parameters.","pos":[386,469]},{"content":"Get-InstalledModule can filter with version parameters: MinimumVersion, MaximumVersion, RequiredVersion, AllVersions.","pos":[472,589]},{"content":"These parameters are mutually exclusive, except MinmimumVersion and MaximumVersion.","pos":[594,677]},{"content":"These version parameters are allowed only with the single module name without any wildcards.","pos":[682,774]},{"content":"If the RequiredVersion parameter is not specified, Get-InstalledModule returns the latest version of the installed module that is equal to or greater than the minimum version specified or the latest version of the module if no minimum version is specified.","pos":[779,1035]},{"content":"If the RequiredVersion parameter is specified, Get-InstalledModule only returns the version of installed module that exactly matches the specified version.","pos":[1041,1196]},{"content":"Cmdlet syntax","pos":[1201,1214]},{"content":"Cmdlet online help reference","pos":[1305,1333]},{"pos":[1335,1403],"content":"<bpt id=\"p1\">[</bpt>Get-InstalledModule<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=526863)</ept>","source":"[Get-InstalledModule](http://go.microsoft.com/fwlink/?LinkId=526863)"},{"content":"Example commands","pos":[1408,1424]},{"content":"InstalledDate and UpdatedDate properties in PSGetRepositoryItemInfo object","pos":[3796,3870]}],"content":"# Get-InstalledModule\n\nGets installed modules on a computer.\n\n## Description\n\nThe Get-InstalledModule cmdlet gets installed PowerShell modules on a computer which were installed using Install-Module cmdlet.\n\nFor each installed module, Get-InstalledModule returns a PSRepositoryItemInfo object which can optionally be piped to Uninstall-Module for uninstalling the installed modules.\n\n- Get-InstalledModule can filter installed modules based on name, version parameters.\n- Get-InstalledModule can filter with version parameters: MinimumVersion, MaximumVersion, RequiredVersion, AllVersions.\n  - These parameters are mutually exclusive, except MinmimumVersion and MaximumVersion.\n  - These version parameters are allowed only with the single module name without any wildcards.\n  - If the RequiredVersion parameter is not specified, Get-InstalledModule returns the latest version of the installed module that is equal to or greater than the minimum version specified or the latest version of the module if no minimum version is specified. \n  - If the RequiredVersion parameter is specified, Get-InstalledModule only returns the version of installed module that exactly matches the specified version.\n\n## Cmdlet syntax\n```powershell\nGet-Command -Name Get-InstalledModule -Module PowerShellGet -Syntax\n```\n\n## Cmdlet online help reference\n\n[Get-InstalledModule](http://go.microsoft.com/fwlink/?LinkId=526863)\n\n## Example commands\n\n```powershell\n\n# Get all modules installed using PowerShellGet cmdlets\nGet-InstalledModule\n\n# Get a specific installed module\nGet-InstalledModule DJoin\n\nVersion    Name                                Repository           Description\n-------    ----                                ----------           -----------\n1.0        DJoin                               PSGallery            This is a PowerShell frontend to the DJOIN.exe c...\n\n# Get installed module with wildcards\nGet-InstalledModule -Name AzureRM*\n\n# Get all versions of an installed module\nGet-InstalledModule -Name AzureRM.Automation -AllVersions\n\n# Get installed module with MinimumVersion\nGet-InstalledModule -Name AzureRM.Automation -MinimumVersion 1.0.0\n\n# Get installed module with MaximumVersion\nGet-InstalledModule -Name AzureRM.Automation -MaximumVersion 1.0.8\n\n# Get installed module with version range\nGet-InstalledModule -Name AzureRM.Automation -MinimumVersion 1.0.0 -MaximumVersion 1.0.8\n\n# Get installed module with RequiredVersion\nGet-InstalledScript -Name AzureRM.Automation -RequiredVersion 1.0.3\n\n# Properties of Get-InstalledModule returned object\nGet-InstalledModule DJoin | Format-List * -Force\n\nName                       : DJoin\nVersion                    : 1.0\nType                       : Module\nDescription                : This is a PowerShell frontend to the DJOIN.exe command which provides better\n                             discoverability and usability.\nAuthor                     : Jeffrey Snover\nCompanyName                : jsnover\nCopyright                  : (C) Microsoft Corporation. All rights reserved.\nPublishedDate              : 2/15/2016 7:12:37 PM\nInstalledDate              : 4/5/2016 4:13:39 PM\nUpdatedDate                :\nLicenseUri                 :\nProjectUri                 :\nIconUri                    :\nTags                       : {Nano, PSModule}\nIncludes                   : {Function, RoleCapability, Command, DscResource...}\nPowerShellGetFormatVersion :\nReleaseNotes               :\nDependencies               : {}\nRepositorySourceLocation   : https://www.powershellgallery.com/api/v2/\nRepository                 : PSGallery\nPackageManagementProvider  : NuGet\nAdditionalMetadata         : {description, installeddate, tags, PackageManagementProvider...}\nInstalledLocation          : C:\\Program Files\\WindowsPowerShell\\Modules\\DJoin\\1.0\n\n```\n\n\n\n## InstalledDate and UpdatedDate properties in PSGetRepositoryItemInfo object\n\n    During the install operation:\n        InstalledDate: current DateTime (Get-Date) value\n        UpdatedDate: null\n\n    During the Update operation:\n        InstalledDate: InstalledDate from the previous installation otherwise current DateTime (Get-Date) value\n        UpdatedDate: current DateTime (Get-Date) value\n\n```powershell\nInstall-Module -Name ContosoServer -RequiredVersion 1.0 -Repository INT\nGet-InstalledModule -Name ContosoServer | Format-Table Name, InstalledDate, UpdatedDate\n\nName          InstalledDate         UpdatedDate\n----          -------------         -----------\nContosoServer 2/29/2016 11:59:14 AM\n\n\n\\Update-Module -Name ContosoServer\nGet-InstalledModule -Name ContosoServer | Format-Table Name, InstalledDate, UpdatedDate\n\nName          InstalledDate         UpdatedDate\n----          -------------         -----------\nContosoServer 2/29/2016 11:59:14 AM 2/29/2016 12:00:15 PM\n```"}