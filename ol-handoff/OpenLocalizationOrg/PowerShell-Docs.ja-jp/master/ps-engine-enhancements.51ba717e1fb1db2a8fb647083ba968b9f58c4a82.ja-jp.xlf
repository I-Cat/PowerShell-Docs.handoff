<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b35a25312b44d14ec8771be9e17aaa43e270b61</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.1\features-scenarios-cache\ps-engine-enhancements.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0ade752b39a31437f34d9e7b76c3f7135b06ab1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">256645ba49a388325e897683c70ec058d32c1763</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>PowerShell Engine Enhancements</source>
          <target state="new">PowerShell Engine Enhancements</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>PowerShell Engine Enhancements</source>
          <target state="new">PowerShell Engine Enhancements</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following improvements to the core PowerShell engine have been implemented for PowerShell 5.1:</source>
          <target state="new">The following improvements to the core PowerShell engine have been implemented for PowerShell 5.1:</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="new">Performance</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Performance has improved in some important areas:</source>
          <target state="new">Performance has improved in some important areas:</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Startup</source>
          <target state="new">Startup</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Pipelining to cmdlets like ForEach-Object and Where-Object is approximately 50% faster</source>
          <target state="new">Pipelining to cmdlets like ForEach-Object and Where-Object is approximately 50% faster</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Some example improvements (results may vary depending on your hardware):</source>
          <target state="new">Some example improvements (results may vary depending on your hardware):</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Scenario</source>
          <target state="new">Scenario</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>5.0 Time (ms)</source>
          <target state="new">5.0 Time (ms)</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>5.1 Time (ms)</source>
          <target state="new">5.1 Time (ms)</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>900</source>
          <target state="new">900</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>250</source>
          <target state="new">250</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>First ever PowerShell run: <ph id="ph1">`powershell -command "Unknown-Command"`</ph></source>
          <target state="new">First ever PowerShell run: <ph id="ph1">`powershell -command "Unknown-Command"`</ph></target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>30000</source>
          <target state="new">30000</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>13000</source>
          <target state="new">13000</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Command analysis cache built: <ph id="ph1">`powershell -command "Unknown-Command"`</ph></source>
          <target state="new">Command analysis cache built: <ph id="ph1">`powershell -command "Unknown-Command"`</ph></target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>7000</source>
          <target state="new">7000</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>520</source>
          <target state="new">520</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>1400</source>
          <target state="new">1400</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>750</source>
          <target state="new">750</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>One change related to startup may impact some (unsupported) scenarios.</source>
          <target state="new">One change related to startup may impact some (unsupported) scenarios.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>PowerShell no longer reads the files <ph id="ph1">`$pshome\*.ps1xml`</ph> - these files have been converted to C# to avoid some file and CPU overhead of processing the XML files.</source>
          <target state="new">PowerShell no longer reads the files <ph id="ph1">`$pshome\*.ps1xml`</ph> - these files have been converted to C# to avoid some file and CPU overhead of processing the XML files.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The files still exist to support V2 side-by-side, so if you change the file contents, it will not have any effect to V5, only V2.</source>
          <target state="new">The files still exist to support V2 side-by-side, so if you change the file contents, it will not have any effect to V5, only V2.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that changing the contents of these files was never a supported scenario.</source>
          <target state="new">Note that changing the contents of these files was never a supported scenario.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Another visible change is how PowerShell caches the exported commands and other information for modules that are installed on a system.</source>
          <target state="new">Another visible change is how PowerShell caches the exported commands and other information for modules that are installed on a system.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Previous, this cache was stored in the directory <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\CommandAnalysis`</ph>.</source>
          <target state="new">Previous, this cache was stored in the directory <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\CommandAnalysis`</ph>.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In WMF 5.1, the cache is a single file <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\ModuleAnalysisCache`</ph>.</source>
          <target state="new">In WMF 5.1, the cache is a single file <ph id="ph1">`$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\ModuleAnalysisCache`</ph>.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>analysis_cache.md<ept id="p1">]()</ept> for more details.</source>
          <target state="new">See <bpt id="p1">[</bpt>analysis_cache.md<ept id="p1">]()</ept> for more details.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Starting with version 5.1, PowerShell is available in different editions which denote varying feature sets and platform compatibility.</source>
          <target state="new">Starting with version 5.1, PowerShell is available in different editions which denote varying feature sets and platform compatibility.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Bug Fixes</source>
          <target state="new">Bug Fixes</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following notable bugs were fixed:</source>
          <target state="new">The following notable bugs were fixed:</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Module auto-discovery fully honors <ph id="ph1">`$env:PSModulePath`</ph></source>
          <target state="new">Module auto-discovery fully honors <ph id="ph1">`$env:PSModulePath`</ph></target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Module auto-discovery (loading modules automatically without an explicit Import-Module when calling a command) was introduced in WMF3.</source>
          <target state="new">Module auto-discovery (loading modules automatically without an explicit Import-Module when calling a command) was introduced in WMF3.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When introduced, PowerShell checked for commands in <ph id="ph1">`$PSHome\Modules`</ph> before using <ph id="ph2">`$env:PSModulePath`</ph>.</source>
          <target state="new">When introduced, PowerShell checked for commands in <ph id="ph1">`$PSHome\Modules`</ph> before using <ph id="ph2">`$env:PSModulePath`</ph>.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>WMF5.1 changes this behavior to honor <ph id="ph1">`$env:PSModulePath`</ph> completely.</source>
          <target state="new">WMF5.1 changes this behavior to honor <ph id="ph1">`$env:PSModulePath`</ph> completely.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This allows for a user-authored module that defines commands provided by PowerShell (e.g. <ph id="ph1">`Get-ChildItem`</ph>) to be auto-loaded and correctly overriding the built-in command.</source>
          <target state="new">This allows for a user-authored module that defines commands provided by PowerShell (e.g. <ph id="ph1">`Get-ChildItem`</ph>) to be auto-loaded and correctly overriding the built-in command.</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>File redirection no longer hard-codes <ph id="ph1">`-Encoding Unicode`</ph></source>
          <target state="new">File redirection no longer hard-codes <ph id="ph1">`-Encoding Unicode`</ph></target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In all previous versions of PowerShell, it was impossible to control the file encoding used by the file redirection operator, e.g. <ph id="ph1">`Get-ChildItem &gt; out.txt`</ph> because PowerShell added <ph id="ph2">`-Encoding Unicode`</ph>.</source>
          <target state="new">In all previous versions of PowerShell, it was impossible to control the file encoding used by the file redirection operator, e.g. <ph id="ph1">`Get-ChildItem &gt; out.txt`</ph> because PowerShell added <ph id="ph2">`-Encoding Unicode`</ph>.</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Starting with WMF 5.1, you can now change the file encoding of redirection by setting <ph id="ph1">`$PSDefaultParameterValues`</ph>, e.g.</source>
          <target state="new">Starting with WMF 5.1, you can now change the file encoding of redirection by setting <ph id="ph1">`$PSDefaultParameterValues`</ph>, e.g.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Fixed a regression in accessing members of <ph id="ph1">`System.Reflection.TypeInfo`</ph></source>
          <target state="new">Fixed a regression in accessing members of <ph id="ph1">`System.Reflection.TypeInfo`</ph></target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A regression introduced in WMF5 broke accessing members of <ph id="ph1">`System.Reflection.RuntimeType`</ph>, e.g. <ph id="ph2">`[int].ImplementedInterfaces`</ph>.</source>
          <target state="new">A regression introduced in WMF5 broke accessing members of <ph id="ph1">`System.Reflection.RuntimeType`</ph>, e.g. <ph id="ph2">`[int].ImplementedInterfaces`</ph>.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This bug has been fixed in WMF 5.1.</source>
          <target state="new">This bug has been fixed in WMF 5.1.</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Fixed some issues with COM objects</source>
          <target state="new">Fixed some issues with COM objects</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>WMF5 introduced a new COM binder for invoking methods on COM objects and accessing properties of COM objects.</source>
          <target state="new">WMF5 introduced a new COM binder for invoking methods on COM objects and accessing properties of COM objects.</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This new binder improved performance significantly but also introduced some bugs which have been fixed in WMF 5.1.</source>
          <target state="new">This new binder improved performance significantly but also introduced some bugs which have been fixed in WMF 5.1.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Argument conversions were not always performed correctly</source>
          <target state="new">Argument conversions were not always performed correctly</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the following example:</source>
          <target state="new">In the following example:</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The SendKeys method expects a string, but PowerShell did not convert the char to a string, deferring the conversion to IDispatch::Invoke, which uses VariantChangeType to do the conversion, which in this example resulted in sending the keys '1', '7', and '3' instead of the expected Volume.Mute key.</source>
          <target state="new">The SendKeys method expects a string, but PowerShell did not convert the char to a string, deferring the conversion to IDispatch::Invoke, which uses VariantChangeType to do the conversion, which in this example resulted in sending the keys '1', '7', and '3' instead of the expected Volume.Mute key.</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Enumerable COM objects not always handled correctly</source>
          <target state="new">Enumerable COM objects not always handled correctly</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>PowerShell normally enumerates most enumerable objects, but a regression introduced in WMF5 prevented the enumeration of COM objects that implement IEnumerable.</source>
          <target state="new">PowerShell normally enumerates most enumerable objects, but a regression introduced in WMF5 prevented the enumeration of COM objects that implement IEnumerable.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new">For example:</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In the above example, WMF5 incorrectly wrote the Scripting.Dictionary to the pipeline instead of enumerating the key value pairs.</source>
          <target state="new">In the above example, WMF5 incorrectly wrote the Scripting.Dictionary to the pipeline instead of enumerating the key value pairs.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[ordered]`</ph> was not allowed inside classes</source>
          <target state="new"><ph id="ph1">`[ordered]`</ph> was not allowed inside classes</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>WMF5 introduced classes with validation of type literals used in classes.</source>
          <target state="new">WMF5 introduced classes with validation of type literals used in classes.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[ordered]`</ph> looks like a type literal but is not a true .NET type.</source>
          <target state="new"><ph id="ph1">`[ordered]`</ph> looks like a type literal but is not a true .NET type.</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>WMF5 incorrectly reported an error on <ph id="ph1">`[ordered]`</ph> inside a class:</source>
          <target state="new">WMF5 incorrectly reported an error on <ph id="ph1">`[ordered]`</ph> inside a class:</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Help on about topics with multiple versions does not work</source>
          <target state="new">Help on about topics with multiple versions does not work</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Before WMF5.1, if you had multiple versions of a module installed and they all shared a help topic, e.g. about_PSReadline, <ph id="ph1">`help about_PSReadline`</ph> would return multiple topics with no obvious way to view the real help.</source>
          <target state="new">Before WMF5.1, if you had multiple versions of a module installed and they all shared a help topic, e.g. about_PSReadline, <ph id="ph1">`help about_PSReadline`</ph> would return multiple topics with no obvious way to view the real help.</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>WMF5.1 fixes this by returning the help for the latest version of the topic.</source>
          <target state="new">WMF5.1 fixes this by returning the help for the latest version of the topic.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Get-Help does not provide a way to specify which version you want help for, the workaround is to navigate to the modules directory and view the help directly with a tool like your favorite editor.</source>
          <target state="new">Get-Help does not provide a way to specify which version you want help for, the workaround is to navigate to the modules directory and view the help directly with a tool like your favorite editor.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>