<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7af27dc9bd8e93d1df5258b0d8df8af12726f568</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\setup\Installing-the-Windows-PowerShell-SDK.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74b233cab36e3ac82dc4773aad60bf6b66ed190e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a153956dcd13defd357018e0a76a37bc035a09b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Installing the Windows PowerShell SDK</source>
          <target state="new">Installing the Windows PowerShell SDK</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="new">powershell,cmdlet</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Installing the Windows PowerShell SDK</source>
          <target state="new">Installing the Windows PowerShell SDK</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following topic describes how to install the PowerShell SDK on different versions of Windows.</source>
          <target state="new">The following topic describes how to install the PowerShell SDK on different versions of Windows.</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 3.0 SDK for Windows 8 and Windows Server 2012</source>
          <target state="new">Installing Windows PowerShell 3.0 SDK for Windows 8 and Windows Server 2012</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Windows PowerShell 3.0 is automatically installed with Windows 8 and Windows Server 2012.</source>
          <target state="new">Windows PowerShell 3.0 is automatically installed with Windows 8 and Windows Server 2012.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In addition, you can download and install the reference assemblies for Windows PowerShell 3.0 as part of the Windows 8 SDK.</source>
          <target state="new">In addition, you can download and install the reference assemblies for Windows PowerShell 3.0 as part of the Windows 8 SDK.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These assemblies allow you to write cmdlets, providers, and host programs for Windows PowerShell 3.0.</source>
          <target state="new">These assemblies allow you to write cmdlets, providers, and host programs for Windows PowerShell 3.0.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When you install the Windows SDK for Windows 8, the Windows PowerShell assemblies are automatically installed in the reference assembly folder, in \Program Files (x86)\Reference Assemblies\Microsoft\WindowsPowerShell\3.0.</source>
          <target state="new">When you install the Windows SDK for Windows 8, the Windows PowerShell assemblies are automatically installed in the reference assembly folder, in \Program Files (x86)\Reference Assemblies\Microsoft\WindowsPowerShell\3.0.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Windows 8 SDK download site<ept id="p1">](http://msdn.microsoft.com/windows/hardware/hh852363.aspx)</ept>.</source>
          <target state="new">For more information, see the <bpt id="p1">[</bpt>Windows 8 SDK download site<ept id="p1">](http://msdn.microsoft.com/windows/hardware/hh852363.aspx)</ept>.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Windows PowerShell code samples are also available on the Development Center.</source>
          <target state="new">Windows PowerShell code samples are also available on the Development Center.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see the Desktop code sample page on the <bpt id="p1">[</bpt>Dev center site<ept id="p1">](http://code.msdn.microsoft.com/windowsdesktop/)</ept>.</source>
          <target state="new">For more information, see the Desktop code sample page on the <bpt id="p1">[</bpt>Dev center site<ept id="p1">](http://code.msdn.microsoft.com/windowsdesktop/)</ept>.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In addition, Windows PowerShell 3.0 is backwards-compatible with the Windows PowerShell 2.0 SDK, which includes a number of code samples.</source>
          <target state="new">In addition, Windows PowerShell 3.0 is backwards-compatible with the Windows PowerShell 2.0 SDK, which includes a number of code samples.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information on how to download the Windows PowerShell 2.0 SDK, see below.</source>
          <target state="new">For more information on how to download the Windows PowerShell 2.0 SDK, see below.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>(Note that while the 2.0 code samples are compatible with Windows 8 and Windows PowerShell 3.0, you cannot install Windows PowerShell 2.0 on a Windows 8 platform.)</source>
          <target state="new">(Note that while the 2.0 code samples are compatible with Windows 8 and Windows PowerShell 3.0, you cannot install Windows PowerShell 2.0 on a Windows 8 platform.)</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 3.0 SDK for Windows 7 and Windows Server 2008 R2</source>
          <target state="new">Installing Windows PowerShell 3.0 SDK for Windows 7 and Windows Server 2008 R2</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Windows 7 and Windows Server 2008 R2 automatically have PowerShell 2.0 installed.</source>
          <target state="new">Windows 7 and Windows Server 2008 R2 automatically have PowerShell 2.0 installed.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In addition, you can install PowerShell 3.0 on these systems.</source>
          <target state="new">In addition, you can install PowerShell 3.0 on these systems.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>(For more information, see <bpt id="p1">[</bpt>Installing Windows PowerShell<ept id="p1">](Installing-Windows-PowerShell.md)</ept>.).</source>
          <target state="new">(For more information, see <bpt id="p1">[</bpt>Installing Windows PowerShell<ept id="p1">](Installing-Windows-PowerShell.md)</ept>.).</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As described above, you can also install the Windows 8 SDK on Windows 7 and Windows Server 2008 R2.</source>
          <target state="new">As described above, you can also install the Windows 8 SDK on Windows 7 and Windows Server 2008 R2.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Installing Windows PowerShell 2.0 SDK for Windows 7, Vista, XP, Server 2003, and Server 2008</source>
          <target state="new">Installing Windows PowerShell 2.0 SDK for Windows 7, Vista, XP, Server 2003, and Server 2008</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell 2.0 SDK provides the reference assemblies needed to write cmdlets, providers, and hosting applications, and it provides C# sample code that can be used as the starting point when you begin writing code.</source>
          <target state="new">The Windows PowerShell 2.0 SDK provides the reference assemblies needed to write cmdlets, providers, and hosting applications, and it provides C# sample code that can be used as the starting point when you begin writing code.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To install this SDK, see <bpt id="p1">[</bpt>Windows PowerShell 2.0 SDK<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=184611)</ept>.</source>
          <target state="new">To install this SDK, see <bpt id="p1">[</bpt>Windows PowerShell 2.0 SDK<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=184611)</ept>.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Reference assemblies</source>
          <target state="new">Reference assemblies</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Reference assemblies are installed in the following location by default: <ph id="ph1">`c:\Program Files\Reference Assemblies\Microsoft\WindowsPowerShell\V1.0`</ph>.</source>
          <target state="new">Reference assemblies are installed in the following location by default: <ph id="ph1">`c:\Program Files\Reference Assemblies\Microsoft\WindowsPowerShell\V1.0`</ph>.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: Code that is compiled against the Windows PowerShell 2.0 assemblies cannot be loaded into Windows PowerShell 1.0 installations.</source>
          <target state="new"><bpt id="p1">**</bpt>Note<ept id="p1">**</ept>: Code that is compiled against the Windows PowerShell 2.0 assemblies cannot be loaded into Windows PowerShell 1.0 installations.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>However, code that is compiled against the Windows PowerShell 1.0 assemblies can be loaded into Windows PowerShell 2.0 installations.</source>
          <target state="new">However, code that is compiled against the Windows PowerShell 1.0 assemblies can be loaded into Windows PowerShell 2.0 installations.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Samples</source>
          <target state="new">Samples</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Code samples are installed in the following location by default: <ph id="ph1">`C:\Program Files\Microsoft SDKs\Windows\v7.0\Samples\sysmgmt\WindowsPowerShell\`</ph>.</source>
          <target state="new">Code samples are installed in the following location by default: <ph id="ph1">`C:\Program Files\Microsoft SDKs\Windows\v7.0\Samples\sysmgmt\WindowsPowerShell\`</ph>.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following sections provide a brief description of what each sample does.</source>
          <target state="new">The following sections provide a brief description of what each sample does.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Cmdlet samples</source>
          <target state="new">Cmdlet samples</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GetProcessSample01<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>GetProcessSample01<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Shows how to write a simple cmdlet that gets all the processes on the local computer.</source>
          <target state="new">Shows how to write a simple cmdlet that gets all the processes on the local computer.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GetProcessSample02<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>GetProcessSample02<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Shows how to add parameters to the cmdlet.</source>
          <target state="new">Shows how to add parameters to the cmdlet.</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The cmdlet takes one or more process names and returns the matching processes.</source>
          <target state="new">The cmdlet takes one or more process names and returns the matching processes.</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GetProcessSample03<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>GetProcessSample03<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Shows how to add parameters that accept input from the pipeline.</source>
          <target state="new">Shows how to add parameters that accept input from the pipeline.</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GetProcessSample04<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>GetProcessSample04<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Shows how to handle nonterminating errors.</source>
          <target state="new">Shows how to handle nonterminating errors.</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>GetProcessSample05<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>GetProcessSample05<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Shows how to display a list of specified processes.</source>
          <target state="new">Shows how to display a list of specified processes.</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SelectObject<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>SelectObject<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Shows how to write a filter to select only certain objects.</source>
          <target state="new">Shows how to write a filter to select only certain objects.</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SelectString<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>SelectString<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Shows how to search files for specified patterns.</source>
          <target state="new">Shows how to search files for specified patterns.</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>StopProcessSample01<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>StopProcessSample01<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Shows how to implement a <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter, and how to request user feedback by calls to the <bpt id="p2">[</bpt>ShouldProcess<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.cmdlet.shouldprocess.aspx)</ept> and <bpt id="p3">[</bpt>ShouldContinue<ept id="p3">](https://technet.microsoft.com/library/system.management.automation.cmdlet.shouldcontinue.aspx)</ept> methods.</source>
          <target state="new">Shows how to implement a <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter, and how to request user feedback by calls to the <bpt id="p2">[</bpt>ShouldProcess<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.cmdlet.shouldprocess.aspx)</ept> and <bpt id="p3">[</bpt>ShouldContinue<ept id="p3">](https://technet.microsoft.com/library/system.management.automation.cmdlet.shouldcontinue.aspx)</ept> methods.</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Users specify the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter when they want to force the cmdlet to return an object,</source>
          <target state="new">Users specify the <bpt id="p1">*</bpt>PassThru<ept id="p1">*</ept> parameter when they want to force the cmdlet to return an object,</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>StopProcessSample02<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>StopProcessSample02<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Shows how to stop a specific process.</source>
          <target state="new">Shows how to stop a specific process.</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>StopProcessSample03<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>StopProcessSample03<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Shows how to declare aliases for parameters and how to support wildcards.</source>
          <target state="new">Shows how to declare aliases for parameters and how to support wildcards.</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>StopProcessSample04<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>StopProcessSample04<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Shows how to declare parameter sets, the object that the cmdlet takes as input, and how to specify the default parameter set to use.</source>
          <target state="new">Shows how to declare parameter sets, the object that the cmdlet takes as input, and how to specify the default parameter set to use.</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Remoting samples</source>
          <target state="new">Remoting samples</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>RemoteRunspace01<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>RemoteRunspace01<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Shows how to create a remote runspace that is used to establish a remote connection.</source>
          <target state="new">Shows how to create a remote runspace that is used to establish a remote connection.</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>RemoteRunspacePool01<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>RemoteRunspacePool01<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Shows how to construct a remote runspace pool and how to run multiple commands concurrently by using this pool.</source>
          <target state="new">Shows how to construct a remote runspace pool and how to run multiple commands concurrently by using this pool.</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Serialization01<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Serialization01<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Shows how to look at an existing .NET class and make sure that information from selected public properties of this class is preserved across serialization/deserialization.</source>
          <target state="new">Shows how to look at an existing .NET class and make sure that information from selected public properties of this class is preserved across serialization/deserialization.</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Serialization02<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Serialization02<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Shows how to look at an existing .NET class and make sure that information from instance of this class is preserved across serialization/deserialization when the information is not available in public properties of the class.</source>
          <target state="new">Shows how to look at an existing .NET class and make sure that information from instance of this class is preserved across serialization/deserialization when the information is not available in public properties of the class.</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Serialization03<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Serialization03<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Shows how to look at an existing .NET class and make sure that instances of this class and of derived classes are deserialized (rehydrated) into live .NET objects.</source>
          <target state="new">Shows how to look at an existing .NET class and make sure that instances of this class and of derived classes are deserialized (rehydrated) into live .NET objects.</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Event samples</source>
          <target state="new">Event samples</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Event01<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Event01<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Shows how to create a cmdlet for event registration by deriving from ObjectEventRegistrationBase.</source>
          <target state="new">Shows how to create a cmdlet for event registration by deriving from ObjectEventRegistrationBase.</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Event02<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Event02<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Shows how to shows how to receive notifications of Windows PowerShell events that are generated on remote computers.</source>
          <target state="new">Shows how to shows how to receive notifications of Windows PowerShell events that are generated on remote computers.</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>It uses the PSEventReceived event exposed through the <bpt id="p1">[</bpt>Runspace<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.runspace.aspx)</ept> class.</source>
          <target state="new">It uses the PSEventReceived event exposed through the <bpt id="p1">[</bpt>Runspace<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.runspace.aspx)</ept> class.</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Hosting application samples</source>
          <target state="new">Hosting application samples</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Runspace01<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Runspace01<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Shows how to use the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> class to run the <bpt id="p2">[</bpt>Get-Process<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet synchronously.</source>
          <target state="new">Shows how to use the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> class to run the <bpt id="p2">[</bpt>Get-Process<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet synchronously.</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Get-Process<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet returns <bpt id="p2">[</bpt>Process<ept id="p2">](https://technet.microsoft.com/library/system.diagnostics.process.aspx)</ept> objects for each process running on the local computer.</source>
          <target state="new">The <bpt id="p1">[</bpt>Get-Process<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet returns <bpt id="p2">[</bpt>Process<ept id="p2">](https://technet.microsoft.com/library/system.diagnostics.process.aspx)</ept> objects for each process running on the local computer.</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Runspace02<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Runspace02<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Shows how to use the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> class to run the <bpt id="p2">[</bpt>Get-Process<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> and <bpt id="p3">[</bpt>Sort-Object<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=113403)</ept> cmdlets synchronously.</source>
          <target state="new">Shows how to use the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> class to run the <bpt id="p2">[</bpt>Get-Process<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> and <bpt id="p3">[</bpt>Sort-Object<ept id="p3">](http://go.microsoft.com/fwlink/?LinkID=113403)</ept> cmdlets synchronously.</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Get-Process<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet returns <bpt id="p2">[</bpt>Process<ept id="p2">](https://technet.microsoft.com/library/system.diagnostics.process.aspx)</ept> objects for each process running on the local computer, and the Sort-Object sorts the objects based on their <bpt id="p3">[</bpt>Id<ept id="p3">](https://technet.microsoft.com/library/system.diagnostics.process.id.aspx)</ept> property.</source>
          <target state="new">The <bpt id="p1">[</bpt>Get-Process<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet returns <bpt id="p2">[</bpt>Process<ept id="p2">](https://technet.microsoft.com/library/system.diagnostics.process.aspx)</ept> objects for each process running on the local computer, and the Sort-Object sorts the objects based on their <bpt id="p3">[</bpt>Id<ept id="p3">](https://technet.microsoft.com/library/system.diagnostics.process.id.aspx)</ept> property.</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The results of these commands is displayed by using a <bpt id="p1">[</bpt>DataGridView<ept id="p1">](https://technet.microsoft.com/library/system.windows.forms.datagridview.aspx)</ept> control.</source>
          <target state="new">The results of these commands is displayed by using a <bpt id="p1">[</bpt>DataGridView<ept id="p1">](https://technet.microsoft.com/library/system.windows.forms.datagridview.aspx)</ept> control.</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Runspace03<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Runspace03<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Shows how to use the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> class to run a script synchronously, and how to handle non-terminating errors.</source>
          <target state="new">Shows how to use the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> class to run a script synchronously, and how to handle non-terminating errors.</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The script receives a list of process names and then retrieves those processes.</source>
          <target state="new">The script receives a list of process names and then retrieves those processes.</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The results of the script, including any non-terminating errors that were generated when running the script, are displayed in a console window.</source>
          <target state="new">The results of the script, including any non-terminating errors that were generated when running the script, are displayed in a console window.</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Runspace04<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Runspace04<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Shows how to use the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> class to run commands, and how to catch terminating errors that are thrown when running the commands.</source>
          <target state="new">Shows how to use the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> class to run commands, and how to catch terminating errors that are thrown when running the commands.</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Two commands are run, and the last command is passed a parameter argument that is not valid.</source>
          <target state="new">Two commands are run, and the last command is passed a parameter argument that is not valid.</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>As a result, no objects are returned and a terminating error is thrown.</source>
          <target state="new">As a result, no objects are returned and a terminating error is thrown.</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Runspace05<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Runspace05<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Shows how to add a snap-in to an <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept> object so that the cmdlet of the snap-in is available when the runspace is opened.</source>
          <target state="new">Shows how to add a snap-in to an <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept> object so that the cmdlet of the snap-in is available when the runspace is opened.</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The snap-in provides a Get-Proc cmdlet (defined by the <bpt id="p1">[</bpt>GetProcessSample01 Sample<ept id="p1">](https://technet.microsoft.com/library/ff602028.aspx)</ept>) that is run synchronously by using a <bpt id="p2">[</bpt>PowerShell<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object.</source>
          <target state="new">The snap-in provides a Get-Proc cmdlet (defined by the <bpt id="p1">[</bpt>GetProcessSample01 Sample<ept id="p1">](https://technet.microsoft.com/library/ff602028.aspx)</ept>) that is run synchronously by using a <bpt id="p2">[</bpt>PowerShell<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object.</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Runspace06<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Runspace06<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Shows how to add a module to an <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept> object so that the module is loaded when the runspace is opened.</source>
          <target state="new">Shows how to add a module to an <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept> object so that the module is loaded when the runspace is opened.</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The module provides a Get-Proc cmdlet (defined by the <bpt id="p1">[</bpt>GetProcessSample02 Sample<ept id="p1">](https://technet.microsoft.com/library/ff602027.aspx)</ept>) that is run synchronously by using a <bpt id="p2">[</bpt>PowerShell<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object.</source>
          <target state="new">The module provides a Get-Proc cmdlet (defined by the <bpt id="p1">[</bpt>GetProcessSample02 Sample<ept id="p1">](https://technet.microsoft.com/library/ff602027.aspx)</ept>) that is run synchronously by using a <bpt id="p2">[</bpt>PowerShell<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object.</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Runspace07<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Runspace07<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Shows how to create a runspace, and then use that runspace to run two cmdlets synchronously by using a <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object.</source>
          <target state="new">Shows how to create a runspace, and then use that runspace to run two cmdlets synchronously by using a <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object.</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Runspace08<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Runspace08<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Shows how to add commands and arguments to the pipeline of a <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object and how to run the commands synchronously.</source>
          <target state="new">Shows how to add commands and arguments to the pipeline of a <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object and how to run the commands synchronously.</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Runspace09<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Runspace09<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Shows how to add a script to the pipeline of a <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object and how to run the script asynchronously.</source>
          <target state="new">Shows how to add a script to the pipeline of a <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object and how to run the script asynchronously.</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Events are used to handle the output of the script.</source>
          <target state="new">Events are used to handle the output of the script.</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Runspace10<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Runspace10<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Shows how to create a default initial session state, how to add a cmdlet to the <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept>, how to create a runspace that uses the initial session state, and how to run the command by using a <bpt id="p2">[</bpt>PowerShell<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object.</source>
          <target state="new">Shows how to create a default initial session state, how to add a cmdlet to the <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept>, how to create a runspace that uses the initial session state, and how to run the command by using a <bpt id="p2">[</bpt>PowerShell<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> object.</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Runspace11<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Runspace11<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Shows how to use the <bpt id="p1">[</bpt>ProxyCommand<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.proxycommand.aspx)</ept> class to create a proxy command that calls an existing cmdlet, but restricts the set of available parameters.</source>
          <target state="new">Shows how to use the <bpt id="p1">[</bpt>ProxyCommand<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.proxycommand.aspx)</ept> class to create a proxy command that calls an existing cmdlet, but restricts the set of available parameters.</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The proxy command is then added to an initial session state that is used to create a constrained runspace.</source>
          <target state="new">The proxy command is then added to an initial session state that is used to create a constrained runspace.</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This means that the user can access the functionality of the cmdlet only through the proxy command.</source>
          <target state="new">This means that the user can access the functionality of the cmdlet only through the proxy command.</target>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PowerShell01<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>PowerShell01<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Shows how to create a constrained runspace using an <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept> object.</source>
          <target state="new">Shows how to create a constrained runspace using an <bpt id="p1">[</bpt>InitialSessionState<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.runspaces.initialsessionstate.aspx)</ept> object.</target>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>PowerShell02<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>PowerShell02<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Shows how to use a runspace pool to run multiple commands concurrently.</source>
          <target state="new">Shows how to use a runspace pool to run multiple commands concurrently.</target>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Host samples</source>
          <target state="new">Host samples</target>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Host01<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Host01<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Shows how to implement a host application that uses a custom host.</source>
          <target state="new">Shows how to implement a host application that uses a custom host.</target>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In this sample a runspace is created that uses the custom host, and then the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> API is used to run a script that calls "exit".</source>
          <target state="new">In this sample a runspace is created that uses the custom host, and then the <bpt id="p1">[</bpt>PowerShell<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.powershell.aspx)</ept> API is used to run a script that calls "exit".</target>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The host application then looks at the output of the script and prints out the results.</source>
          <target state="new">The host application then looks at the output of the script and prints out the results.</target>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Host02<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Host02<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Shows how to write a host application that uses the Windows PowerShell runtime along with a custom host implementation.</source>
          <target state="new">Shows how to write a host application that uses the Windows PowerShell runtime along with a custom host implementation.</target>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The host application sets the host culture to German, runs the <bpt id="p1">[</bpt>Get-Process<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet and displays the results as you would see them by using pwrsh.exe, and then prints out the current data and time in German.</source>
          <target state="new">The host application sets the host culture to German, runs the <bpt id="p1">[</bpt>Get-Process<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=113324)</ept> cmdlet and displays the results as you would see them by using pwrsh.exe, and then prints out the current data and time in German.</target>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Host03<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Host03<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="new">Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</target>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Host04<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Host04<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="new">Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</target>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This host application also supports displaying prompts that allow the user to specify multiple choices.</source>
          <target state="new">This host application also supports displaying prompts that allow the user to specify multiple choices.</target>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Host05<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Host05<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="new">Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</target>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This host application also supports calls to remote computers by using the <bpt id="p1">[</bpt>Enter-PsSession<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=135210)</ept> and <bpt id="p2">[</bpt>Exit-PsSession<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=135212)</ept> cmdlets.</source>
          <target state="new">This host application also supports calls to remote computers by using the <bpt id="p1">[</bpt>Enter-PsSession<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=135210)</ept> and <bpt id="p2">[</bpt>Exit-PsSession<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=135212)</ept> cmdlets.</target>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Host06<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>Host06<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</source>
          <target state="new">Shows how to build an interactive console-based host application that reads commands from the command line, executes the commands, and then displays the results to the console.</target>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>In addition, this sample uses the Tokenizer APIs to specify the color of the text that is entered by the user.</source>
          <target state="new">In addition, this sample uses the Tokenizer APIs to specify the color of the text that is entered by the user.</target>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Provider samples</source>
          <target state="new">Provider samples</target>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AccessDBProviderSample01<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>AccessDBProviderSample01<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Shows how to declare a provider class that derives directly from the <bpt id="p1">[</bpt>CmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.cmdletprovider.aspx)</ept> class.</source>
          <target state="new">Shows how to declare a provider class that derives directly from the <bpt id="p1">[</bpt>CmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.cmdletprovider.aspx)</ept> class.</target>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>It is included here only for completeness.</source>
          <target state="new">It is included here only for completeness.</target>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AccessDBProviderSample02<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>AccessDBProviderSample02<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Shows how to overwrite the <bpt id="p1">[</bpt>NewDrive<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.drivecmdletprovider.newdrive.aspx)</ept> and <bpt id="p2">[</bpt>RemoveDrive<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.provider.drivecmdletprovider.removedrive.aspx)</ept> methods to support calls to the New-PSDrive and Remove-PSDrive cmdlets.</source>
          <target state="new">Shows how to overwrite the <bpt id="p1">[</bpt>NewDrive<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.drivecmdletprovider.newdrive.aspx)</ept> and <bpt id="p2">[</bpt>RemoveDrive<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.provider.drivecmdletprovider.removedrive.aspx)</ept> methods to support calls to the New-PSDrive and Remove-PSDrive cmdlets.</target>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <bpt id="p1">[</bpt>DriveCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.drivecmdletprovider.aspx)</ept> class.</source>
          <target state="new">The provider class in this sample derives from the <bpt id="p1">[</bpt>DriveCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.drivecmdletprovider.aspx)</ept> class.</target>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AccessDBProviderSample03<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>AccessDBProviderSample03<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Shows how to overwrite the <bpt id="p1">[</bpt>GetItem<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.getitem.aspx)</ept> and <bpt id="p2">[</bpt>SetItem<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.setitem.aspx)</ept> methods to support calls to the Get-Item and Set-Item cmdlets.</source>
          <target state="new">Shows how to overwrite the <bpt id="p1">[</bpt>GetItem<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.getitem.aspx)</ept> and <bpt id="p2">[</bpt>SetItem<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.setitem.aspx)</ept> methods to support calls to the Get-Item and Set-Item cmdlets.</target>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <bpt id="p1">[</bpt>ItemCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.aspx)</ept> class.</source>
          <target state="new">The provider class in this sample derives from the <bpt id="p1">[</bpt>ItemCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.aspx)</ept> class.</target>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AccessDBProviderSample04<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>AccessDBProviderSample04<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Shows how to overwrite container methods to support calls to the Copy-Item, Get-ChildItem, New-Item, and Remove-Item cmdlets.</source>
          <target state="new">Shows how to overwrite container methods to support calls to the Copy-Item, Get-ChildItem, New-Item, and Remove-Item cmdlets.</target>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the data store contains items that are containers.</source>
          <target state="new">These methods should be implemented when the data store contains items that are containers.</target>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A container is a group of child items under a common parent item.</source>
          <target state="new">A container is a group of child items under a common parent item.</target>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <bpt id="p1">[</bpt>ItemCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.aspx)</ept> class.</source>
          <target state="new">The provider class in this sample derives from the <bpt id="p1">[</bpt>ItemCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.itemcmdletprovider.aspx)</ept> class.</target>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AccessDBProviderSample05<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>AccessDBProviderSample05<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Shows how to overwrite container methods to support calls to the Move-Item and Join-Path cmdlets.</source>
          <target state="new">Shows how to overwrite container methods to support calls to the Move-Item and Join-Path cmdlets.</target>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the user needs to move items within a container and if the data store contains nested containers.</source>
          <target state="new">These methods should be implemented when the user needs to move items within a container and if the data store contains nested containers.</target>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <bpt id="p1">[</bpt>NavigationCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.navigationcmdletprovider.aspx)</ept> class.</source>
          <target state="new">The provider class in this sample derives from the <bpt id="p1">[</bpt>NavigationCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.navigationcmdletprovider.aspx)</ept> class.</target>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AccessDBProviderSample06<ept id="p1">**</ept></source>
          <target state="new"><bpt id="p1">**</bpt>AccessDBProviderSample06<ept id="p1">**</ept></target>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Shows how to overwrite content methods to support calls to the Clear-Content, Get-Content, and Set-Content cmdlets.</source>
          <target state="new">Shows how to overwrite content methods to support calls to the Clear-Content, Get-Content, and Set-Content cmdlets.</target>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>These methods should be implemented when the user needs to manage the content of the items in the data store.</source>
          <target state="new">These methods should be implemented when the user needs to manage the content of the items in the data store.</target>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The provider class in this sample derives from the <bpt id="p1">[</bpt>NavigationCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.navigationcmdletprovider.aspx)</ept> class, and it implements the <bpt id="p2">[</bpt>IContentCmdletProvider<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.provider.icontentcmdletprovider.aspx)</ept> interface.</source>
          <target state="new">The provider class in this sample derives from the <bpt id="p1">[</bpt>NavigationCmdletProvider<ept id="p1">](https://technet.microsoft.com/library/system.management.automation.provider.navigationcmdletprovider.aspx)</ept> class, and it implements the <bpt id="p2">[</bpt>IContentCmdletProvider<ept id="p2">](https://technet.microsoft.com/library/system.management.automation.provider.icontentcmdletprovider.aspx)</ept> interface.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>